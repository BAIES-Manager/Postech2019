SELECT
quality_result.RESULT_COL_1 as QR_RESULT_COL_1,
quality_result.RESULT_COL_2 as QR_RESULT_COL_2,
quality_result.RESULT_COL_3 as QR_RESULT_COL_3,
quality_result.RESULT_COL_4 as QR_RESULT_COL_4,
quality_result.RESULT_COL_5 as QR_RESULT_COL_5,
quality_result.RESULT_COL_6 as QR_RESULT_COL_6,
product.SLAB_THICKNESS as P_SLAB_THICKNESS,
product.SLAB_WIDTH as P_SLAB_WIDTH,
product.SLAB_LENGTH as P_SLAB_LENGTH,
product.SLAB_WEIGHT as P_SLAB_WEIGHT,
product.PLATE_ORD_THICKNESS as P_PLATE_ORD_THICKNESS,
product.PLATE_ORD_WIDTH as P_PLATE_ORD_WIDTH,
product.PLATE_ORD_LENGTH as P_PLATE_ORD_LENGTH,
product.PLATE_OBJ_THICKNESS as P_PLATE_OBJ_THICKNESS,
product.PLATE_OBJ_WIDTH as P_PLATE_OBJ_WIDTH,
product.C as P_C,
product.MN as P_MN,
furnace.FURNACE_NO as F_FURNACE_NO,
furnace.FURNACE_COL as F_FURNACE_COL,
furnace.FURNACE_TIME as F_FURNACE_TIME,
temperature.FUR_IN as TRE_FUR_IN,
temperature.FUR_OUT as TRE_FUR_OUT,
temperature.FUR_OBJ as TRE_FUR_OBJ,
temperature.FUR_UNI1 as TRE_FUR_UNI1,
temperature.FUR_UNI2 as TRE_FUR_UNI2,
time.TIME_FUR_IN as T_TIME_FUR_IN,
time.TIME_FUR_OUT as T_TIME_FUR_OUT,
rm_finish_width.PRE_EDGE_REDUCTION as RSH_PRE_EDGE_REDUCTION,
rm_finish_width.CAL_EDGE_REDUCTION as RSH_CAL_EDGE_REDUCTION,
rm_finish_width.PRE_EDGE_LOAD as RSH_PRE_EDGE_LOAD,
rm_finish_width.REAL_EDGE_LOAD as RSH_REAL_EDGE_LOAD,
rm_finish_width.OBJ_SET as RSH_OBJ_SET,
rm_finish_width.OBJ_REAL as RSH_OBJ_REAL,
rm_finish_width.REAL_SET as RSH_REAL_SET,
rm_slab.BAR_OBJ_THICKNESS as RSB_BAR_OBJ_THICKNESS,
rm_slab.BAR_REAL_THICKNESS as RSB_BAR_REAL_THICKNESS,
rm_slab.BAR_REAL_WIDTH as RSB_BAR_REAL_WIDTH,
rm_slab.BAR_REAL_LENGTH as RSB_BAR_REAL_LENGTH,
rm_slab.UPPER_ROLL_DIA as RSB_UPPER_ROLL_DIA,
rm_slab.UNDER_ROLL_DIA as RSB_UNDER_ROLL_DIA,
temperature.RM_IN as TRE_RM_IN,
temperature.RM_OUT as TRE_RM_OUT,
time.TIME_RM_IN as T_TIME_RM_IN,
time.TIME_RM_OUT as T_TIME_RM_OUT,
fm_slab.OUTER_THICKNESS_DIFF_3P as FSB_OUTER_THICKNESS_DIFF_3P,
fm_slab.OUTER_THICKNESS_DIFF_CEN as FSB_OUTER_THICKNESS_DIFF_CEN,
fm_slab.CROWN as FSB_CROWN,
fm_slab.INNER_THICKNESS_DIFF as FSB_INNER_THICKNESS_DIFF,
fm_slab.UPPER_ROLL_DIA as FSB_UPPER_ROLL_DIA,
fm_slab.UNDER_ROLL_DIA as FSB_UNDER_ROLL_DIA,
temperature.FM_IN as TRE_FM_IN,
temperature.FM_OUT as TRE_FM_OUT,
temperature.FM_IN_OBJ as TRE_FM_IN_OBJ,
temperature.FM_OUT_OBJ as TRE_FM_OUT_OBJ,
time.TIME_FM_IN as T_TIME_FM_IN,
time.TIME_FM_OUT as T_TIME_FM_OUT,
rm_pass.RPS_SET_ROLLGAP_1 as RPS_SET_ROLLGAP_1,
rm_pass.RPS_REAL_ROLLGAP_1 as RPS_REAL_ROLLGAP_1,
rm_pass.RPS_DIFF_ROLLGAP_1 as RPS_DIFF_ROLLGAP_1,
rm_pass.RPS_RM_PRE_WK_1 as RPS_RM_PRE_WK_1,
rm_pass.RPS_RM_ACT_WK_1 as RPS_RM_ACT_WK_1,
rm_pass.RPS_RM_PRE_WM_1 as RPS_RM_PRE_WM_1,
rm_pass.RPS_RM_ACT_WM_1 as RPS_RM_ACT_WM_1,
rm_pass.RPS_RM_PRE_THICK_1 as RPS_RM_PRE_THICK_1,
rm_pass.RPS_RM_Delivery_THICK_1 as RPS_RM_Delivery_THICK_1,
rm_pass.RPS_RM_PRE_WIDTH_1 as RPS_RM_PRE_WIDTH_1,
rm_pass.RPS_RM_REC_WIDTH_1 as RPS_RM_REC_WIDTH_1,
rm_pass.RPS_RM_PRE_LENGTH_1 as RPS_RM_PRE_LENGTH_1,
rm_pass.RPS_RM_REC_LENGTH_1 as RPS_RM_REC_LENGTH_1,
rm_pass.RPS_RM_PRE_TEMP_1 as RPS_RM_PRE_TEMP_1,
rm_pass.RPS_SET_EDGGAP_1 as RPS_SET_EDGGAP_1,
rm_pass.RPS_REAL_EDGGAP_1 as RPS_REAL_EDGGAP_1,
rm_pass.RPS_DIFF_EDEGAP_1 as RPS_DIFF_EDEGAP_1,
rm_pass.RPS_RM_IND_SPEED_1 as RPS_RM_IND_SPEED_1,
rm_pass.RPS_RM_ACT_SPEED_1 as RPS_RM_ACT_SPEED_1,
rm_pass.RPS_SET_ROLLGAP_2 as RPS_SET_ROLLGAP_2,
rm_pass.RPS_REAL_ROLLGAP_2 as RPS_REAL_ROLLGAP_2,
rm_pass.RPS_DIFF_ROLLGAP_2 as RPS_DIFF_ROLLGAP_2,
rm_pass.RPS_RM_PRE_WK_2 as RPS_RM_PRE_WK_2,
rm_pass.RPS_RM_ACT_WK_2 as RPS_RM_ACT_WK_2,
rm_pass.RPS_RM_PRE_WM_2 as RPS_RM_PRE_WM_2,
rm_pass.RPS_RM_ACT_WM_2 as RPS_RM_ACT_WM_2,
rm_pass.RPS_RM_PRE_THICK_2 as RPS_RM_PRE_THICK_2,
rm_pass.RPS_RM_Delivery_THICK_2 as RPS_RM_Delivery_THICK_2,
rm_pass.RPS_RM_PRE_WIDTH_2 as RPS_RM_PRE_WIDTH_2,
rm_pass.RPS_RM_REC_WIDTH_2 as RPS_RM_REC_WIDTH_2,
rm_pass.RPS_RM_PRE_LENGTH_2 as RPS_RM_PRE_LENGTH_2,
rm_pass.RPS_RM_REC_LENGTH_2 as RPS_RM_REC_LENGTH_2,
rm_pass.RPS_RM_PRE_TEMP_2 as RPS_RM_PRE_TEMP_2,
rm_pass.RPS_SET_EDGGAP_2 as RPS_SET_EDGGAP_2,
rm_pass.RPS_REAL_EDGGAP_2 as RPS_REAL_EDGGAP_2,
rm_pass.RPS_DIFF_EDEGAP_2 as RPS_DIFF_EDEGAP_2,
rm_pass.RPS_RM_IND_SPEED_2 as RPS_RM_IND_SPEED_2,
rm_pass.RPS_RM_ACT_SPEED_2 as RPS_RM_ACT_SPEED_2,
rm_pass.RPS_SET_ROLLGAP_3 as RPS_SET_ROLLGAP_3,
rm_pass.RPS_REAL_ROLLGAP_3 as RPS_REAL_ROLLGAP_3,
rm_pass.RPS_DIFF_ROLLGAP_3 as RPS_DIFF_ROLLGAP_3,
rm_pass.RPS_RM_PRE_WK_3 as RPS_RM_PRE_WK_3,
rm_pass.RPS_RM_ACT_WK_3 as RPS_RM_ACT_WK_3,
rm_pass.RPS_RM_PRE_WM_3 as RPS_RM_PRE_WM_3,
rm_pass.RPS_RM_ACT_WM_3 as RPS_RM_ACT_WM_3,
rm_pass.RPS_RM_PRE_THICK_3 as RPS_RM_PRE_THICK_3,
rm_pass.RPS_RM_Delivery_THICK_3 as RPS_RM_Delivery_THICK_3,
rm_pass.RPS_RM_PRE_WIDTH_3 as RPS_RM_PRE_WIDTH_3,
rm_pass.RPS_RM_REC_WIDTH_3 as RPS_RM_REC_WIDTH_3,
rm_pass.RPS_RM_PRE_LENGTH_3 as RPS_RM_PRE_LENGTH_3,
rm_pass.RPS_RM_REC_LENGTH_3 as RPS_RM_REC_LENGTH_3,
rm_pass.RPS_RM_PRE_TEMP_3 as RPS_RM_PRE_TEMP_3,
rm_pass.RPS_SET_EDGGAP_3 as RPS_SET_EDGGAP_3,
rm_pass.RPS_REAL_EDGGAP_3 as RPS_REAL_EDGGAP_3,
rm_pass.RPS_DIFF_EDEGAP_3 as RPS_DIFF_EDEGAP_3,
rm_pass.RPS_RM_IND_SPEED_3 as RPS_RM_IND_SPEED_3,
rm_pass.RPS_RM_ACT_SPEED_3 as RPS_RM_ACT_SPEED_3,
rm_pass.RPS_SET_ROLLGAP_4 as RPS_SET_ROLLGAP_4,
rm_pass.RPS_REAL_ROLLGAP_4 as RPS_REAL_ROLLGAP_4,
rm_pass.RPS_DIFF_ROLLGAP_4 as RPS_DIFF_ROLLGAP_4,
rm_pass.RPS_RM_PRE_WK_4 as RPS_RM_PRE_WK_4,
rm_pass.RPS_RM_ACT_WK_4 as RPS_RM_ACT_WK_4,
rm_pass.RPS_RM_PRE_WM_4 as RPS_RM_PRE_WM_4,
rm_pass.RPS_RM_ACT_WM_4 as RPS_RM_ACT_WM_4,
rm_pass.RPS_RM_PRE_THICK_4 as RPS_RM_PRE_THICK_4,
rm_pass.RPS_RM_Delivery_THICK_4 as RPS_RM_Delivery_THICK_4,
rm_pass.RPS_RM_PRE_WIDTH_4 as RPS_RM_PRE_WIDTH_4,
rm_pass.RPS_RM_REC_WIDTH_4 as RPS_RM_REC_WIDTH_4,
rm_pass.RPS_RM_PRE_LENGTH_4 as RPS_RM_PRE_LENGTH_4,
rm_pass.RPS_RM_REC_LENGTH_4 as RPS_RM_REC_LENGTH_4,
rm_pass.RPS_RM_PRE_TEMP_4 as RPS_RM_PRE_TEMP_4,
rm_pass.RPS_SET_EDGGAP_4 as RPS_SET_EDGGAP_4,
rm_pass.RPS_REAL_EDGGAP_4 as RPS_REAL_EDGGAP_4,
rm_pass.RPS_DIFF_EDEGAP_4 as RPS_DIFF_EDEGAP_4,
rm_pass.RPS_RM_IND_SPEED_4 as RPS_RM_IND_SPEED_4,
rm_pass.RPS_RM_ACT_SPEED_4 as RPS_RM_ACT_SPEED_4,
rm_pass.RPS_SET_ROLLGAP_5 as RPS_SET_ROLLGAP_5,
rm_pass.RPS_REAL_ROLLGAP_5 as RPS_REAL_ROLLGAP_5,
rm_pass.RPS_DIFF_ROLLGAP_5 as RPS_DIFF_ROLLGAP_5,
rm_pass.RPS_RM_PRE_WK_5 as RPS_RM_PRE_WK_5,
rm_pass.RPS_RM_ACT_WK_5 as RPS_RM_ACT_WK_5,
rm_pass.RPS_RM_PRE_WM_5 as RPS_RM_PRE_WM_5,
rm_pass.RPS_RM_ACT_WM_5 as RPS_RM_ACT_WM_5,
rm_pass.RPS_RM_PRE_THICK_5 as RPS_RM_PRE_THICK_5,
rm_pass.RPS_RM_Delivery_THICK_5 as RPS_RM_Delivery_THICK_5,
rm_pass.RPS_RM_PRE_WIDTH_5 as RPS_RM_PRE_WIDTH_5,
rm_pass.RPS_RM_REC_WIDTH_5 as RPS_RM_REC_WIDTH_5,
rm_pass.RPS_RM_PRE_LENGTH_5 as RPS_RM_PRE_LENGTH_5,
rm_pass.RPS_RM_REC_LENGTH_5 as RPS_RM_REC_LENGTH_5,
rm_pass.RPS_RM_PRE_TEMP_5 as RPS_RM_PRE_TEMP_5,
rm_pass.RPS_SET_EDGGAP_5 as RPS_SET_EDGGAP_5,
rm_pass.RPS_REAL_EDGGAP_5 as RPS_REAL_EDGGAP_5,
rm_pass.RPS_DIFF_EDEGAP_5 as RPS_DIFF_EDEGAP_5,
rm_pass.RPS_RM_IND_SPEED_5 as RPS_RM_IND_SPEED_5,
rm_pass.RPS_RM_ACT_SPEED_5 as RPS_RM_ACT_SPEED_5,
rm_pass.RPS_SET_ROLLGAP_6 as RPS_SET_ROLLGAP_6,
rm_pass.RPS_REAL_ROLLGAP_6 as RPS_REAL_ROLLGAP_6,
rm_pass.RPS_DIFF_ROLLGAP_6 as RPS_DIFF_ROLLGAP_6,
rm_pass.RPS_RM_PRE_WK_6 as RPS_RM_PRE_WK_6,
rm_pass.RPS_RM_ACT_WK_6 as RPS_RM_ACT_WK_6,
rm_pass.RPS_RM_PRE_WM_6 as RPS_RM_PRE_WM_6,
rm_pass.RPS_RM_ACT_WM_6 as RPS_RM_ACT_WM_6,
rm_pass.RPS_RM_PRE_THICK_6 as RPS_RM_PRE_THICK_6,
rm_pass.RPS_RM_Delivery_THICK_6 as RPS_RM_Delivery_THICK_6,
rm_pass.RPS_RM_PRE_WIDTH_6 as RPS_RM_PRE_WIDTH_6,
rm_pass.RPS_RM_REC_WIDTH_6 as RPS_RM_REC_WIDTH_6,
rm_pass.RPS_RM_PRE_LENGTH_6 as RPS_RM_PRE_LENGTH_6,
rm_pass.RPS_RM_REC_LENGTH_6 as RPS_RM_REC_LENGTH_6,
rm_pass.RPS_RM_PRE_TEMP_6 as RPS_RM_PRE_TEMP_6,
rm_pass.RPS_SET_EDGGAP_6 as RPS_SET_EDGGAP_6,
rm_pass.RPS_REAL_EDGGAP_6 as RPS_REAL_EDGGAP_6,
rm_pass.RPS_DIFF_EDEGAP_6 as RPS_DIFF_EDEGAP_6,
rm_pass.RPS_RM_IND_SPEED_6 as RPS_RM_IND_SPEED_6,
rm_pass.RPS_RM_ACT_SPEED_6 as RPS_RM_ACT_SPEED_6,
rm_pass.RPS_SET_ROLLGAP_7 as RPS_SET_ROLLGAP_7,
rm_pass.RPS_REAL_ROLLGAP_7 as RPS_REAL_ROLLGAP_7,
rm_pass.RPS_DIFF_ROLLGAP_7 as RPS_DIFF_ROLLGAP_7,
rm_pass.RPS_RM_PRE_WK_7 as RPS_RM_PRE_WK_7,
rm_pass.RPS_RM_ACT_WK_7 as RPS_RM_ACT_WK_7,
rm_pass.RPS_RM_PRE_WM_7 as RPS_RM_PRE_WM_7,
rm_pass.RPS_RM_ACT_WM_7 as RPS_RM_ACT_WM_7,
rm_pass.RPS_RM_PRE_THICK_7 as RPS_RM_PRE_THICK_7,
rm_pass.RPS_RM_Delivery_THICK_7 as RPS_RM_Delivery_THICK_7,
rm_pass.RPS_RM_PRE_WIDTH_7 as RPS_RM_PRE_WIDTH_7,
rm_pass.RPS_RM_REC_WIDTH_7 as RPS_RM_REC_WIDTH_7,
rm_pass.RPS_RM_PRE_LENGTH_7 as RPS_RM_PRE_LENGTH_7,
rm_pass.RPS_RM_REC_LENGTH_7 as RPS_RM_REC_LENGTH_7,
rm_pass.RPS_RM_PRE_TEMP_7 as RPS_RM_PRE_TEMP_7,
rm_pass.RPS_SET_EDGGAP_7 as RPS_SET_EDGGAP_7,
rm_pass.RPS_REAL_EDGGAP_7 as RPS_REAL_EDGGAP_7,
rm_pass.RPS_DIFF_EDEGAP_7 as RPS_DIFF_EDEGAP_7,
rm_pass.RPS_RM_IND_SPEED_7 as RPS_RM_IND_SPEED_7,
rm_pass.RPS_RM_ACT_SPEED_7 as RPS_RM_ACT_SPEED_7,
rm_pass.RPS_SET_ROLLGAP_8 as RPS_SET_ROLLGAP_8,
rm_pass.RPS_REAL_ROLLGAP_8 as RPS_REAL_ROLLGAP_8,
rm_pass.RPS_DIFF_ROLLGAP_8 as RPS_DIFF_ROLLGAP_8,
rm_pass.RPS_RM_PRE_WK_8 as RPS_RM_PRE_WK_8,
rm_pass.RPS_RM_ACT_WK_8 as RPS_RM_ACT_WK_8,
rm_pass.RPS_RM_PRE_WM_8 as RPS_RM_PRE_WM_8,
rm_pass.RPS_RM_ACT_WM_8 as RPS_RM_ACT_WM_8,
rm_pass.RPS_RM_PRE_THICK_8 as RPS_RM_PRE_THICK_8,
rm_pass.RPS_RM_Delivery_THICK_8 as RPS_RM_Delivery_THICK_8,
rm_pass.RPS_RM_PRE_WIDTH_8 as RPS_RM_PRE_WIDTH_8,
rm_pass.RPS_RM_REC_WIDTH_8 as RPS_RM_REC_WIDTH_8,
rm_pass.RPS_RM_PRE_LENGTH_8 as RPS_RM_PRE_LENGTH_8,
rm_pass.RPS_RM_REC_LENGTH_8 as RPS_RM_REC_LENGTH_8,
rm_pass.RPS_RM_PRE_TEMP_8 as RPS_RM_PRE_TEMP_8,
rm_pass.RPS_SET_EDGGAP_8 as RPS_SET_EDGGAP_8,
rm_pass.RPS_REAL_EDGGAP_8 as RPS_REAL_EDGGAP_8,
rm_pass.RPS_DIFF_EDEGAP_8 as RPS_DIFF_EDEGAP_8,
rm_pass.RPS_RM_IND_SPEED_8 as RPS_RM_IND_SPEED_8,
rm_pass.RPS_RM_ACT_SPEED_8 as RPS_RM_ACT_SPEED_8,
rm_pass.RPS_SET_ROLLGAP_9 as RPS_SET_ROLLGAP_9,
rm_pass.RPS_REAL_ROLLGAP_9 as RPS_REAL_ROLLGAP_9,
rm_pass.RPS_DIFF_ROLLGAP_9 as RPS_DIFF_ROLLGAP_9,
rm_pass.RPS_RM_PRE_WK_9 as RPS_RM_PRE_WK_9,
rm_pass.RPS_RM_ACT_WK_9 as RPS_RM_ACT_WK_9,
rm_pass.RPS_RM_PRE_WM_9 as RPS_RM_PRE_WM_9,
rm_pass.RPS_RM_ACT_WM_9 as RPS_RM_ACT_WM_9,
rm_pass.RPS_RM_PRE_THICK_9 as RPS_RM_PRE_THICK_9,
rm_pass.RPS_RM_Delivery_THICK_9 as RPS_RM_Delivery_THICK_9,
rm_pass.RPS_RM_PRE_WIDTH_9 as RPS_RM_PRE_WIDTH_9,
rm_pass.RPS_RM_REC_WIDTH_9 as RPS_RM_REC_WIDTH_9,
rm_pass.RPS_RM_PRE_LENGTH_9 as RPS_RM_PRE_LENGTH_9,
rm_pass.RPS_RM_REC_LENGTH_9 as RPS_RM_REC_LENGTH_9,
rm_pass.RPS_RM_PRE_TEMP_9 as RPS_RM_PRE_TEMP_9,
rm_pass.RPS_SET_EDGGAP_9 as RPS_SET_EDGGAP_9,
rm_pass.RPS_REAL_EDGGAP_9 as RPS_REAL_EDGGAP_9,
rm_pass.RPS_DIFF_EDEGAP_9 as RPS_DIFF_EDEGAP_9,
rm_pass.RPS_RM_IND_SPEED_9 as RPS_RM_IND_SPEED_9,
rm_pass.RPS_RM_ACT_SPEED_9 as RPS_RM_ACT_SPEED_9,
rm_pass.RPS_SET_ROLLGAP_10 as RPS_SET_ROLLGAP_10,
rm_pass.RPS_REAL_ROLLGAP_10 as RPS_REAL_ROLLGAP_10,
rm_pass.RPS_DIFF_ROLLGAP_10 as RPS_DIFF_ROLLGAP_10,
rm_pass.RPS_RM_PRE_WK_10 as RPS_RM_PRE_WK_10,
rm_pass.RPS_RM_ACT_WK_10 as RPS_RM_ACT_WK_10,
rm_pass.RPS_RM_PRE_WM_10 as RPS_RM_PRE_WM_10,
rm_pass.RPS_RM_ACT_WM_10 as RPS_RM_ACT_WM_10,
rm_pass.RPS_RM_PRE_THICK_10 as RPS_RM_PRE_THICK_10,
rm_pass.RPS_RM_Delivery_THICK_10 as RPS_RM_Delivery_THICK_10,
rm_pass.RPS_RM_PRE_WIDTH_10 as RPS_RM_PRE_WIDTH_10,
rm_pass.RPS_RM_REC_WIDTH_10 as RPS_RM_REC_WIDTH_10,
rm_pass.RPS_RM_PRE_LENGTH_10 as RPS_RM_PRE_LENGTH_10,
rm_pass.RPS_RM_REC_LENGTH_10 as RPS_RM_REC_LENGTH_10,
rm_pass.RPS_RM_PRE_TEMP_10 as RPS_RM_PRE_TEMP_10,
rm_pass.RPS_SET_EDGGAP_10 as RPS_SET_EDGGAP_10,
rm_pass.RPS_REAL_EDGGAP_10 as RPS_REAL_EDGGAP_10,
rm_pass.RPS_DIFF_EDEGAP_10 as RPS_DIFF_EDEGAP_10,
rm_pass.RPS_RM_IND_SPEED_10 as RPS_RM_IND_SPEED_10,
rm_pass.RPS_RM_ACT_SPEED_10 as RPS_RM_ACT_SPEED_10,
rm_pass.RPS_SET_ROLLGAP_11 as RPS_SET_ROLLGAP_11,
rm_pass.RPS_REAL_ROLLGAP_11 as RPS_REAL_ROLLGAP_11,
rm_pass.RPS_DIFF_ROLLGAP_11 as RPS_DIFF_ROLLGAP_11,
rm_pass.RPS_RM_PRE_WK_11 as RPS_RM_PRE_WK_11,
rm_pass.RPS_RM_ACT_WK_11 as RPS_RM_ACT_WK_11,
rm_pass.RPS_RM_PRE_WM_11 as RPS_RM_PRE_WM_11,
rm_pass.RPS_RM_ACT_WM_11 as RPS_RM_ACT_WM_11,
rm_pass.RPS_RM_PRE_THICK_11 as RPS_RM_PRE_THICK_11,
rm_pass.RPS_RM_Delivery_THICK_11 as RPS_RM_Delivery_THICK_11,
rm_pass.RPS_RM_PRE_WIDTH_11 as RPS_RM_PRE_WIDTH_11,
rm_pass.RPS_RM_REC_WIDTH_11 as RPS_RM_REC_WIDTH_11,
rm_pass.RPS_RM_PRE_LENGTH_11 as RPS_RM_PRE_LENGTH_11,
rm_pass.RPS_RM_REC_LENGTH_11 as RPS_RM_REC_LENGTH_11,
rm_pass.RPS_RM_PRE_TEMP_11 as RPS_RM_PRE_TEMP_11,
rm_pass.RPS_SET_EDGGAP_11 as RPS_SET_EDGGAP_11,
rm_pass.RPS_REAL_EDGGAP_11 as RPS_REAL_EDGGAP_11,
rm_pass.RPS_DIFF_EDEGAP_11 as RPS_DIFF_EDEGAP_11,
rm_pass.RPS_RM_IND_SPEED_11 as RPS_RM_IND_SPEED_11,
rm_pass.RPS_RM_ACT_SPEED_11 as RPS_RM_ACT_SPEED_11,
rm_pass.RPS_SET_ROLLGAP_12 as RPS_SET_ROLLGAP_12,
rm_pass.RPS_REAL_ROLLGAP_12 as RPS_REAL_ROLLGAP_12,
rm_pass.RPS_DIFF_ROLLGAP_12 as RPS_DIFF_ROLLGAP_12,
rm_pass.RPS_RM_PRE_WK_12 as RPS_RM_PRE_WK_12,
rm_pass.RPS_RM_ACT_WK_12 as RPS_RM_ACT_WK_12,
rm_pass.RPS_RM_PRE_WM_12 as RPS_RM_PRE_WM_12,
rm_pass.RPS_RM_ACT_WM_12 as RPS_RM_ACT_WM_12,
rm_pass.RPS_RM_PRE_THICK_12 as RPS_RM_PRE_THICK_12,
rm_pass.RPS_RM_Delivery_THICK_12 as RPS_RM_Delivery_THICK_12,
rm_pass.RPS_RM_PRE_WIDTH_12 as RPS_RM_PRE_WIDTH_12,
rm_pass.RPS_RM_REC_WIDTH_12 as RPS_RM_REC_WIDTH_12,
rm_pass.RPS_RM_PRE_LENGTH_12 as RPS_RM_PRE_LENGTH_12,
rm_pass.RPS_RM_REC_LENGTH_12 as RPS_RM_REC_LENGTH_12,
rm_pass.RPS_RM_PRE_TEMP_12 as RPS_RM_PRE_TEMP_12,
rm_pass.RPS_SET_EDGGAP_12 as RPS_SET_EDGGAP_12,
rm_pass.RPS_REAL_EDGGAP_12 as RPS_REAL_EDGGAP_12,
rm_pass.RPS_DIFF_EDEGAP_12 as RPS_DIFF_EDEGAP_12,
rm_pass.RPS_RM_IND_SPEED_12 as RPS_RM_IND_SPEED_12,
rm_pass.RPS_RM_ACT_SPEED_12 as RPS_RM_ACT_SPEED_12,
rm_pass.RPS_SET_ROLLGAP_13 as RPS_SET_ROLLGAP_13,
rm_pass.RPS_REAL_ROLLGAP_13 as RPS_REAL_ROLLGAP_13,
rm_pass.RPS_DIFF_ROLLGAP_13 as RPS_DIFF_ROLLGAP_13,
rm_pass.RPS_RM_PRE_WK_13 as RPS_RM_PRE_WK_13,
rm_pass.RPS_RM_ACT_WK_13 as RPS_RM_ACT_WK_13,
rm_pass.RPS_RM_PRE_WM_13 as RPS_RM_PRE_WM_13,
rm_pass.RPS_RM_ACT_WM_13 as RPS_RM_ACT_WM_13,
rm_pass.RPS_RM_PRE_THICK_13 as RPS_RM_PRE_THICK_13,
rm_pass.RPS_RM_Delivery_THICK_13 as RPS_RM_Delivery_THICK_13,
rm_pass.RPS_RM_PRE_WIDTH_13 as RPS_RM_PRE_WIDTH_13,
rm_pass.RPS_RM_REC_WIDTH_13 as RPS_RM_REC_WIDTH_13,
rm_pass.RPS_RM_PRE_LENGTH_13 as RPS_RM_PRE_LENGTH_13,
rm_pass.RPS_RM_REC_LENGTH_13 as RPS_RM_REC_LENGTH_13,
rm_pass.RPS_RM_PRE_TEMP_13 as RPS_RM_PRE_TEMP_13,
rm_pass.RPS_SET_EDGGAP_13 as RPS_SET_EDGGAP_13,
rm_pass.RPS_REAL_EDGGAP_13 as RPS_REAL_EDGGAP_13,
rm_pass.RPS_DIFF_EDEGAP_13 as RPS_DIFF_EDEGAP_13,
rm_pass.RPS_RM_IND_SPEED_13 as RPS_RM_IND_SPEED_13,
rm_pass.RPS_RM_ACT_SPEED_13 as RPS_RM_ACT_SPEED_13,
rm_pass.RPS_SET_ROLLGAP_14 as RPS_SET_ROLLGAP_14,
rm_pass.RPS_REAL_ROLLGAP_14 as RPS_REAL_ROLLGAP_14,
rm_pass.RPS_DIFF_ROLLGAP_14 as RPS_DIFF_ROLLGAP_14,
rm_pass.RPS_RM_PRE_WK_14 as RPS_RM_PRE_WK_14,
rm_pass.RPS_RM_ACT_WK_14 as RPS_RM_ACT_WK_14,
rm_pass.RPS_RM_PRE_WM_14 as RPS_RM_PRE_WM_14,
rm_pass.RPS_RM_ACT_WM_14 as RPS_RM_ACT_WM_14,
rm_pass.RPS_RM_PRE_THICK_14 as RPS_RM_PRE_THICK_14,
rm_pass.RPS_RM_Delivery_THICK_14 as RPS_RM_Delivery_THICK_14,
rm_pass.RPS_RM_PRE_WIDTH_14 as RPS_RM_PRE_WIDTH_14,
rm_pass.RPS_RM_REC_WIDTH_14 as RPS_RM_REC_WIDTH_14,
rm_pass.RPS_RM_PRE_LENGTH_14 as RPS_RM_PRE_LENGTH_14,
rm_pass.RPS_RM_REC_LENGTH_14 as RPS_RM_REC_LENGTH_14,
rm_pass.RPS_RM_PRE_TEMP_14 as RPS_RM_PRE_TEMP_14,
rm_pass.RPS_SET_EDGGAP_14 as RPS_SET_EDGGAP_14,
rm_pass.RPS_REAL_EDGGAP_14 as RPS_REAL_EDGGAP_14,
rm_pass.RPS_DIFF_EDEGAP_14 as RPS_DIFF_EDEGAP_14,
rm_pass.RPS_RM_IND_SPEED_14 as RPS_RM_IND_SPEED_14,
rm_pass.RPS_RM_ACT_SPEED_14 as RPS_RM_ACT_SPEED_14,
rm_pass.RPS_SET_ROLLGAP_15 as RPS_SET_ROLLGAP_15,
rm_pass.RPS_REAL_ROLLGAP_15 as RPS_REAL_ROLLGAP_15,
rm_pass.RPS_DIFF_ROLLGAP_15 as RPS_DIFF_ROLLGAP_15,
rm_pass.RPS_RM_PRE_WK_15 as RPS_RM_PRE_WK_15,
rm_pass.RPS_RM_ACT_WK_15 as RPS_RM_ACT_WK_15,
rm_pass.RPS_RM_PRE_WM_15 as RPS_RM_PRE_WM_15,
rm_pass.RPS_RM_ACT_WM_15 as RPS_RM_ACT_WM_15,
rm_pass.RPS_RM_PRE_THICK_15 as RPS_RM_PRE_THICK_15,
rm_pass.RPS_RM_Delivery_THICK_15 as RPS_RM_Delivery_THICK_15,
rm_pass.RPS_RM_PRE_WIDTH_15 as RPS_RM_PRE_WIDTH_15,
rm_pass.RPS_RM_REC_WIDTH_15 as RPS_RM_REC_WIDTH_15,
rm_pass.RPS_RM_PRE_LENGTH_15 as RPS_RM_PRE_LENGTH_15,
rm_pass.RPS_RM_REC_LENGTH_15 as RPS_RM_REC_LENGTH_15,
rm_pass.RPS_RM_PRE_TEMP_15 as RPS_RM_PRE_TEMP_15,
rm_pass.RPS_SET_EDGGAP_15 as RPS_SET_EDGGAP_15,
rm_pass.RPS_REAL_EDGGAP_15 as RPS_REAL_EDGGAP_15,
rm_pass.RPS_DIFF_EDEGAP_15 as RPS_DIFF_EDEGAP_15,
rm_pass.RPS_RM_IND_SPEED_15 as RPS_RM_IND_SPEED_15,
rm_pass.RPS_RM_ACT_SPEED_15 as RPS_RM_ACT_SPEED_15,
rm_pass.RPS_SET_ROLLGAP_16 as RPS_SET_ROLLGAP_16,
rm_pass.RPS_REAL_ROLLGAP_16 as RPS_REAL_ROLLGAP_16,
rm_pass.RPS_DIFF_ROLLGAP_16 as RPS_DIFF_ROLLGAP_16,
rm_pass.RPS_RM_PRE_WK_16 as RPS_RM_PRE_WK_16,
rm_pass.RPS_RM_ACT_WK_16 as RPS_RM_ACT_WK_16,
rm_pass.RPS_RM_PRE_WM_16 as RPS_RM_PRE_WM_16,
rm_pass.RPS_RM_ACT_WM_16 as RPS_RM_ACT_WM_16,
rm_pass.RPS_RM_PRE_THICK_16 as RPS_RM_PRE_THICK_16,
rm_pass.RPS_RM_Delivery_THICK_16 as RPS_RM_Delivery_THICK_16,
rm_pass.RPS_RM_PRE_WIDTH_16 as RPS_RM_PRE_WIDTH_16,
rm_pass.RPS_RM_REC_WIDTH_16 as RPS_RM_REC_WIDTH_16,
rm_pass.RPS_RM_PRE_LENGTH_16 as RPS_RM_PRE_LENGTH_16,
rm_pass.RPS_RM_REC_LENGTH_16 as RPS_RM_REC_LENGTH_16,
rm_pass.RPS_RM_PRE_TEMP_16 as RPS_RM_PRE_TEMP_16,
rm_pass.RPS_SET_EDGGAP_16 as RPS_SET_EDGGAP_16,
rm_pass.RPS_REAL_EDGGAP_16 as RPS_REAL_EDGGAP_16,
rm_pass.RPS_DIFF_EDEGAP_16 as RPS_DIFF_EDEGAP_16,
rm_pass.RPS_RM_IND_SPEED_16 as RPS_RM_IND_SPEED_16,
rm_pass.RPS_RM_ACT_SPEED_16 as RPS_RM_ACT_SPEED_16,
fm_pass.FPS_SET_ROLLGAP_1 as FPS_SET_ROLLGAP_1,
fm_pass.FPS_REAL_ROLLGAP_1 as FPS_REAL_ROLLGAP_1,
fm_pass.FPS_DIFF_ROLLGAP_1 as FPS_DIFF_ROLLGAP_1,
fm_pass.FPS_FM_PRE_WK_1 as FPS_FM_PRE_WK_1,
fm_pass.FPS_FM_ACT_WK_1 as FPS_FM_ACT_WK_1,
fm_pass.FPS_FM_PRE_WM_1 as FPS_FM_PRE_WM_1,
fm_pass.FPS_FM_ACT_WM_1 as FPS_FM_ACT_WM_1,
fm_pass.FPS_FM_PRE_MAH_1 as FPS_FM_PRE_MAH_1,
fm_pass.FPS_FM_REC_MAH_1 as FPS_FM_REC_MAH_1,
fm_pass.FPS_FM_PRE_THICK_1 as FPS_FM_PRE_THICK_1,
fm_pass.FPS_FM_Delivery_THICK_1 as FPS_FM_Delivery_THICK_1,
fm_pass.FPS_FM_PRE_WIDTH_1 as FPS_FM_PRE_WIDTH_1,
fm_pass.FPS_FM_REC_WIDTH_1 as FPS_FM_REC_WIDTH_1,
fm_pass.FPS_FM_PRE_LENGTH_1 as FPS_FM_PRE_LENGTH_1,
fm_pass.FPS_FM_REC_LENGTH_1 as FPS_FM_REC_LENGTH_1,
fm_pass.FPS_FM_IND_SPEED_1 as FPS_FM_IND_SPEED_1,
fm_pass.FPS_FM_ACT_SPEED_1 as FPS_FM_ACT_SPEED_1,
fm_pass.FPS_FM_PRE_TEMP_1 as FPS_FM_PRE_TEMP_1,
fm_pass.FPS_FM_REC_TEMP_1 as FPS_FM_REC_TEMP_1,
fm_pass.FPS_SET_ROLLGAP_2 as FPS_SET_ROLLGAP_2,
fm_pass.FPS_REAL_ROLLGAP_2 as FPS_REAL_ROLLGAP_2,
fm_pass.FPS_DIFF_ROLLGAP_2 as FPS_DIFF_ROLLGAP_2,
fm_pass.FPS_FM_PRE_WK_2 as FPS_FM_PRE_WK_2,
fm_pass.FPS_FM_ACT_WK_2 as FPS_FM_ACT_WK_2,
fm_pass.FPS_FM_PRE_WM_2 as FPS_FM_PRE_WM_2,
fm_pass.FPS_FM_ACT_WM_2 as FPS_FM_ACT_WM_2,
fm_pass.FPS_FM_PRE_MAH_2 as FPS_FM_PRE_MAH_2,
fm_pass.FPS_FM_REC_MAH_2 as FPS_FM_REC_MAH_2,
fm_pass.FPS_FM_PRE_THICK_2 as FPS_FM_PRE_THICK_2,
fm_pass.FPS_FM_Delivery_THICK_2 as FPS_FM_Delivery_THICK_2,
fm_pass.FPS_FM_PRE_WIDTH_2 as FPS_FM_PRE_WIDTH_2,
fm_pass.FPS_FM_REC_WIDTH_2 as FPS_FM_REC_WIDTH_2,
fm_pass.FPS_FM_PRE_LENGTH_2 as FPS_FM_PRE_LENGTH_2,
fm_pass.FPS_FM_REC_LENGTH_2 as FPS_FM_REC_LENGTH_2,
fm_pass.FPS_FM_IND_SPEED_2 as FPS_FM_IND_SPEED_2,
fm_pass.FPS_FM_ACT_SPEED_2 as FPS_FM_ACT_SPEED_2,
fm_pass.FPS_FM_PRE_TEMP_2 as FPS_FM_PRE_TEMP_2,
fm_pass.FPS_FM_REC_TEMP_2 as FPS_FM_REC_TEMP_2,
fm_pass.FPS_SET_ROLLGAP_3 as FPS_SET_ROLLGAP_3,
fm_pass.FPS_REAL_ROLLGAP_3 as FPS_REAL_ROLLGAP_3,
fm_pass.FPS_DIFF_ROLLGAP_3 as FPS_DIFF_ROLLGAP_3,
fm_pass.FPS_FM_PRE_WK_3 as FPS_FM_PRE_WK_3,
fm_pass.FPS_FM_ACT_WK_3 as FPS_FM_ACT_WK_3,
fm_pass.FPS_FM_PRE_WM_3 as FPS_FM_PRE_WM_3,
fm_pass.FPS_FM_ACT_WM_3 as FPS_FM_ACT_WM_3,
fm_pass.FPS_FM_PRE_MAH_3 as FPS_FM_PRE_MAH_3,
fm_pass.FPS_FM_REC_MAH_3 as FPS_FM_REC_MAH_3,
fm_pass.FPS_FM_PRE_THICK_3 as FPS_FM_PRE_THICK_3,
fm_pass.FPS_FM_Delivery_THICK_3 as FPS_FM_Delivery_THICK_3,
fm_pass.FPS_FM_PRE_WIDTH_3 as FPS_FM_PRE_WIDTH_3,
fm_pass.FPS_FM_REC_WIDTH_3 as FPS_FM_REC_WIDTH_3,
fm_pass.FPS_FM_PRE_LENGTH_3 as FPS_FM_PRE_LENGTH_3,
fm_pass.FPS_FM_REC_LENGTH_3 as FPS_FM_REC_LENGTH_3,
fm_pass.FPS_FM_IND_SPEED_3 as FPS_FM_IND_SPEED_3,
fm_pass.FPS_FM_ACT_SPEED_3 as FPS_FM_ACT_SPEED_3,
fm_pass.FPS_FM_PRE_TEMP_3 as FPS_FM_PRE_TEMP_3,
fm_pass.FPS_FM_REC_TEMP_3 as FPS_FM_REC_TEMP_3,
fm_pass.FPS_SET_ROLLGAP_4 as FPS_SET_ROLLGAP_4,
fm_pass.FPS_REAL_ROLLGAP_4 as FPS_REAL_ROLLGAP_4,
fm_pass.FPS_DIFF_ROLLGAP_4 as FPS_DIFF_ROLLGAP_4,
fm_pass.FPS_FM_PRE_WK_4 as FPS_FM_PRE_WK_4,
fm_pass.FPS_FM_ACT_WK_4 as FPS_FM_ACT_WK_4,
fm_pass.FPS_FM_PRE_WM_4 as FPS_FM_PRE_WM_4,
fm_pass.FPS_FM_ACT_WM_4 as FPS_FM_ACT_WM_4,
fm_pass.FPS_FM_PRE_MAH_4 as FPS_FM_PRE_MAH_4,
fm_pass.FPS_FM_REC_MAH_4 as FPS_FM_REC_MAH_4,
fm_pass.FPS_FM_PRE_THICK_4 as FPS_FM_PRE_THICK_4,
fm_pass.FPS_FM_Delivery_THICK_4 as FPS_FM_Delivery_THICK_4,
fm_pass.FPS_FM_PRE_WIDTH_4 as FPS_FM_PRE_WIDTH_4,
fm_pass.FPS_FM_REC_WIDTH_4 as FPS_FM_REC_WIDTH_4,
fm_pass.FPS_FM_PRE_LENGTH_4 as FPS_FM_PRE_LENGTH_4,
fm_pass.FPS_FM_REC_LENGTH_4 as FPS_FM_REC_LENGTH_4,
fm_pass.FPS_FM_IND_SPEED_4 as FPS_FM_IND_SPEED_4,
fm_pass.FPS_FM_ACT_SPEED_4 as FPS_FM_ACT_SPEED_4,
fm_pass.FPS_FM_PRE_TEMP_4 as FPS_FM_PRE_TEMP_4,
fm_pass.FPS_FM_REC_TEMP_4 as FPS_FM_REC_TEMP_4,
fm_pass.FPS_SET_ROLLGAP_5 as FPS_SET_ROLLGAP_5,
fm_pass.FPS_REAL_ROLLGAP_5 as FPS_REAL_ROLLGAP_5,
fm_pass.FPS_DIFF_ROLLGAP_5 as FPS_DIFF_ROLLGAP_5,
fm_pass.FPS_FM_PRE_WK_5 as FPS_FM_PRE_WK_5,
fm_pass.FPS_FM_ACT_WK_5 as FPS_FM_ACT_WK_5,
fm_pass.FPS_FM_PRE_WM_5 as FPS_FM_PRE_WM_5,
fm_pass.FPS_FM_ACT_WM_5 as FPS_FM_ACT_WM_5,
fm_pass.FPS_FM_PRE_MAH_5 as FPS_FM_PRE_MAH_5,
fm_pass.FPS_FM_REC_MAH_5 as FPS_FM_REC_MAH_5,
fm_pass.FPS_FM_PRE_THICK_5 as FPS_FM_PRE_THICK_5,
fm_pass.FPS_FM_Delivery_THICK_5 as FPS_FM_Delivery_THICK_5,
fm_pass.FPS_FM_PRE_WIDTH_5 as FPS_FM_PRE_WIDTH_5,
fm_pass.FPS_FM_REC_WIDTH_5 as FPS_FM_REC_WIDTH_5,
fm_pass.FPS_FM_PRE_LENGTH_5 as FPS_FM_PRE_LENGTH_5,
fm_pass.FPS_FM_REC_LENGTH_5 as FPS_FM_REC_LENGTH_5,
fm_pass.FPS_FM_IND_SPEED_5 as FPS_FM_IND_SPEED_5,
fm_pass.FPS_FM_ACT_SPEED_5 as FPS_FM_ACT_SPEED_5,
fm_pass.FPS_FM_PRE_TEMP_5 as FPS_FM_PRE_TEMP_5,
fm_pass.FPS_FM_REC_TEMP_5 as FPS_FM_REC_TEMP_5,
fm_pass.FPS_SET_ROLLGAP_6 as FPS_SET_ROLLGAP_6,
fm_pass.FPS_REAL_ROLLGAP_6 as FPS_REAL_ROLLGAP_6,
fm_pass.FPS_DIFF_ROLLGAP_6 as FPS_DIFF_ROLLGAP_6,
fm_pass.FPS_FM_PRE_WK_6 as FPS_FM_PRE_WK_6,
fm_pass.FPS_FM_ACT_WK_6 as FPS_FM_ACT_WK_6,
fm_pass.FPS_FM_PRE_WM_6 as FPS_FM_PRE_WM_6,
fm_pass.FPS_FM_ACT_WM_6 as FPS_FM_ACT_WM_6,
fm_pass.FPS_FM_PRE_MAH_6 as FPS_FM_PRE_MAH_6,
fm_pass.FPS_FM_REC_MAH_6 as FPS_FM_REC_MAH_6,
fm_pass.FPS_FM_PRE_THICK_6 as FPS_FM_PRE_THICK_6,
fm_pass.FPS_FM_Delivery_THICK_6 as FPS_FM_Delivery_THICK_6,
fm_pass.FPS_FM_PRE_WIDTH_6 as FPS_FM_PRE_WIDTH_6,
fm_pass.FPS_FM_REC_WIDTH_6 as FPS_FM_REC_WIDTH_6,
fm_pass.FPS_FM_PRE_LENGTH_6 as FPS_FM_PRE_LENGTH_6,
fm_pass.FPS_FM_REC_LENGTH_6 as FPS_FM_REC_LENGTH_6,
fm_pass.FPS_FM_IND_SPEED_6 as FPS_FM_IND_SPEED_6,
fm_pass.FPS_FM_ACT_SPEED_6 as FPS_FM_ACT_SPEED_6,
fm_pass.FPS_FM_PRE_TEMP_6 as FPS_FM_PRE_TEMP_6,
fm_pass.FPS_FM_REC_TEMP_6 as FPS_FM_REC_TEMP_6,
fm_pass.FPS_SET_ROLLGAP_7 as FPS_SET_ROLLGAP_7,
fm_pass.FPS_REAL_ROLLGAP_7 as FPS_REAL_ROLLGAP_7,
fm_pass.FPS_DIFF_ROLLGAP_7 as FPS_DIFF_ROLLGAP_7,
fm_pass.FPS_FM_PRE_WK_7 as FPS_FM_PRE_WK_7,
fm_pass.FPS_FM_ACT_WK_7 as FPS_FM_ACT_WK_7,
fm_pass.FPS_FM_PRE_WM_7 as FPS_FM_PRE_WM_7,
fm_pass.FPS_FM_ACT_WM_7 as FPS_FM_ACT_WM_7,
fm_pass.FPS_FM_PRE_MAH_7 as FPS_FM_PRE_MAH_7,
fm_pass.FPS_FM_REC_MAH_7 as FPS_FM_REC_MAH_7,
fm_pass.FPS_FM_PRE_THICK_7 as FPS_FM_PRE_THICK_7,
fm_pass.FPS_FM_Delivery_THICK_7 as FPS_FM_Delivery_THICK_7,
fm_pass.FPS_FM_PRE_WIDTH_7 as FPS_FM_PRE_WIDTH_7,
fm_pass.FPS_FM_REC_WIDTH_7 as FPS_FM_REC_WIDTH_7,
fm_pass.FPS_FM_PRE_LENGTH_7 as FPS_FM_PRE_LENGTH_7,
fm_pass.FPS_FM_REC_LENGTH_7 as FPS_FM_REC_LENGTH_7,
fm_pass.FPS_FM_IND_SPEED_7 as FPS_FM_IND_SPEED_7,
fm_pass.FPS_FM_ACT_SPEED_7 as FPS_FM_ACT_SPEED_7,
fm_pass.FPS_FM_PRE_TEMP_7 as FPS_FM_PRE_TEMP_7,
fm_pass.FPS_FM_REC_TEMP_7 as FPS_FM_REC_TEMP_7,
fm_pass.FPS_SET_ROLLGAP_8 as FPS_SET_ROLLGAP_8,
fm_pass.FPS_REAL_ROLLGAP_8 as FPS_REAL_ROLLGAP_8,
fm_pass.FPS_DIFF_ROLLGAP_8 as FPS_DIFF_ROLLGAP_8,
fm_pass.FPS_FM_PRE_WK_8 as FPS_FM_PRE_WK_8,
fm_pass.FPS_FM_ACT_WK_8 as FPS_FM_ACT_WK_8,
fm_pass.FPS_FM_PRE_WM_8 as FPS_FM_PRE_WM_8,
fm_pass.FPS_FM_ACT_WM_8 as FPS_FM_ACT_WM_8,
fm_pass.FPS_FM_PRE_MAH_8 as FPS_FM_PRE_MAH_8,
fm_pass.FPS_FM_REC_MAH_8 as FPS_FM_REC_MAH_8,
fm_pass.FPS_FM_PRE_THICK_8 as FPS_FM_PRE_THICK_8,
fm_pass.FPS_FM_Delivery_THICK_8 as FPS_FM_Delivery_THICK_8,
fm_pass.FPS_FM_PRE_WIDTH_8 as FPS_FM_PRE_WIDTH_8,
fm_pass.FPS_FM_REC_WIDTH_8 as FPS_FM_REC_WIDTH_8,
fm_pass.FPS_FM_PRE_LENGTH_8 as FPS_FM_PRE_LENGTH_8,
fm_pass.FPS_FM_REC_LENGTH_8 as FPS_FM_REC_LENGTH_8,
fm_pass.FPS_FM_IND_SPEED_8 as FPS_FM_IND_SPEED_8,
fm_pass.FPS_FM_ACT_SPEED_8 as FPS_FM_ACT_SPEED_8,
fm_pass.FPS_FM_PRE_TEMP_8 as FPS_FM_PRE_TEMP_8,
fm_pass.FPS_FM_REC_TEMP_8 as FPS_FM_REC_TEMP_8,
fm_pass.FPS_SET_ROLLGAP_9 as FPS_SET_ROLLGAP_9,
fm_pass.FPS_REAL_ROLLGAP_9 as FPS_REAL_ROLLGAP_9,
fm_pass.FPS_DIFF_ROLLGAP_9 as FPS_DIFF_ROLLGAP_9,
fm_pass.FPS_FM_PRE_WK_9 as FPS_FM_PRE_WK_9,
fm_pass.FPS_FM_ACT_WK_9 as FPS_FM_ACT_WK_9,
fm_pass.FPS_FM_PRE_WM_9 as FPS_FM_PRE_WM_9,
fm_pass.FPS_FM_ACT_WM_9 as FPS_FM_ACT_WM_9,
fm_pass.FPS_FM_PRE_MAH_9 as FPS_FM_PRE_MAH_9,
fm_pass.FPS_FM_REC_MAH_9 as FPS_FM_REC_MAH_9,
fm_pass.FPS_FM_PRE_THICK_9 as FPS_FM_PRE_THICK_9,
fm_pass.FPS_FM_Delivery_THICK_9 as FPS_FM_Delivery_THICK_9,
fm_pass.FPS_FM_PRE_WIDTH_9 as FPS_FM_PRE_WIDTH_9,
fm_pass.FPS_FM_REC_WIDTH_9 as FPS_FM_REC_WIDTH_9,
fm_pass.FPS_FM_PRE_LENGTH_9 as FPS_FM_PRE_LENGTH_9,
fm_pass.FPS_FM_REC_LENGTH_9 as FPS_FM_REC_LENGTH_9,
fm_pass.FPS_FM_IND_SPEED_9 as FPS_FM_IND_SPEED_9,
fm_pass.FPS_FM_ACT_SPEED_9 as FPS_FM_ACT_SPEED_9,
fm_pass.FPS_FM_PRE_TEMP_9 as FPS_FM_PRE_TEMP_9,
fm_pass.FPS_FM_REC_TEMP_9 as FPS_FM_REC_TEMP_9,
fm_pass.FPS_SET_ROLLGAP_10 as FPS_SET_ROLLGAP_10,
fm_pass.FPS_REAL_ROLLGAP_10 as FPS_REAL_ROLLGAP_10,
fm_pass.FPS_DIFF_ROLLGAP_10 as FPS_DIFF_ROLLGAP_10,
fm_pass.FPS_FM_PRE_WK_10 as FPS_FM_PRE_WK_10,
fm_pass.FPS_FM_ACT_WK_10 as FPS_FM_ACT_WK_10,
fm_pass.FPS_FM_PRE_WM_10 as FPS_FM_PRE_WM_10,
fm_pass.FPS_FM_ACT_WM_10 as FPS_FM_ACT_WM_10,
fm_pass.FPS_FM_PRE_MAH_10 as FPS_FM_PRE_MAH_10,
fm_pass.FPS_FM_REC_MAH_10 as FPS_FM_REC_MAH_10,
fm_pass.FPS_FM_PRE_THICK_10 as FPS_FM_PRE_THICK_10,
fm_pass.FPS_FM_Delivery_THICK_10 as FPS_FM_Delivery_THICK_10,
fm_pass.FPS_FM_PRE_WIDTH_10 as FPS_FM_PRE_WIDTH_10,
fm_pass.FPS_FM_REC_WIDTH_10 as FPS_FM_REC_WIDTH_10,
fm_pass.FPS_FM_PRE_LENGTH_10 as FPS_FM_PRE_LENGTH_10,
fm_pass.FPS_FM_REC_LENGTH_10 as FPS_FM_REC_LENGTH_10,
fm_pass.FPS_FM_IND_SPEED_10 as FPS_FM_IND_SPEED_10,
fm_pass.FPS_FM_ACT_SPEED_10 as FPS_FM_ACT_SPEED_10,
fm_pass.FPS_FM_PRE_TEMP_10 as FPS_FM_PRE_TEMP_10,
fm_pass.FPS_FM_REC_TEMP_10 as FPS_FM_REC_TEMP_10,
fm_pass.FPS_SET_ROLLGAP_11 as FPS_SET_ROLLGAP_11,
fm_pass.FPS_REAL_ROLLGAP_11 as FPS_REAL_ROLLGAP_11,
fm_pass.FPS_DIFF_ROLLGAP_11 as FPS_DIFF_ROLLGAP_11,
fm_pass.FPS_FM_PRE_WK_11 as FPS_FM_PRE_WK_11,
fm_pass.FPS_FM_ACT_WK_11 as FPS_FM_ACT_WK_11,
fm_pass.FPS_FM_PRE_WM_11 as FPS_FM_PRE_WM_11,
fm_pass.FPS_FM_ACT_WM_11 as FPS_FM_ACT_WM_11,
fm_pass.FPS_FM_PRE_MAH_11 as FPS_FM_PRE_MAH_11,
fm_pass.FPS_FM_REC_MAH_11 as FPS_FM_REC_MAH_11,
fm_pass.FPS_FM_PRE_THICK_11 as FPS_FM_PRE_THICK_11,
fm_pass.FPS_FM_Delivery_THICK_11 as FPS_FM_Delivery_THICK_11,
fm_pass.FPS_FM_PRE_WIDTH_11 as FPS_FM_PRE_WIDTH_11,
fm_pass.FPS_FM_REC_WIDTH_11 as FPS_FM_REC_WIDTH_11,
fm_pass.FPS_FM_PRE_LENGTH_11 as FPS_FM_PRE_LENGTH_11,
fm_pass.FPS_FM_REC_LENGTH_11 as FPS_FM_REC_LENGTH_11,
fm_pass.FPS_FM_IND_SPEED_11 as FPS_FM_IND_SPEED_11,
fm_pass.FPS_FM_ACT_SPEED_11 as FPS_FM_ACT_SPEED_11,
fm_pass.FPS_FM_PRE_TEMP_11 as FPS_FM_PRE_TEMP_11,
fm_pass.FPS_FM_REC_TEMP_11 as FPS_FM_REC_TEMP_11,
fm_pass.FPS_SET_ROLLGAP_12 as FPS_SET_ROLLGAP_12,
fm_pass.FPS_REAL_ROLLGAP_12 as FPS_REAL_ROLLGAP_12,
fm_pass.FPS_DIFF_ROLLGAP_12 as FPS_DIFF_ROLLGAP_12,
fm_pass.FPS_FM_PRE_WK_12 as FPS_FM_PRE_WK_12,
fm_pass.FPS_FM_ACT_WK_12 as FPS_FM_ACT_WK_12,
fm_pass.FPS_FM_PRE_WM_12 as FPS_FM_PRE_WM_12,
fm_pass.FPS_FM_ACT_WM_12 as FPS_FM_ACT_WM_12,
fm_pass.FPS_FM_PRE_MAH_12 as FPS_FM_PRE_MAH_12,
fm_pass.FPS_FM_REC_MAH_12 as FPS_FM_REC_MAH_12,
fm_pass.FPS_FM_PRE_THICK_12 as FPS_FM_PRE_THICK_12,
fm_pass.FPS_FM_Delivery_THICK_12 as FPS_FM_Delivery_THICK_12,
fm_pass.FPS_FM_PRE_WIDTH_12 as FPS_FM_PRE_WIDTH_12,
fm_pass.FPS_FM_REC_WIDTH_12 as FPS_FM_REC_WIDTH_12,
fm_pass.FPS_FM_PRE_LENGTH_12 as FPS_FM_PRE_LENGTH_12,
fm_pass.FPS_FM_REC_LENGTH_12 as FPS_FM_REC_LENGTH_12,
fm_pass.FPS_FM_IND_SPEED_12 as FPS_FM_IND_SPEED_12,
fm_pass.FPS_FM_ACT_SPEED_12 as FPS_FM_ACT_SPEED_12,
fm_pass.FPS_FM_PRE_TEMP_12 as FPS_FM_PRE_TEMP_12,
fm_pass.FPS_FM_REC_TEMP_12 as FPS_FM_REC_TEMP_12,
fm_pass.FPS_SET_ROLLGAP_13 as FPS_SET_ROLLGAP_13,
fm_pass.FPS_REAL_ROLLGAP_13 as FPS_REAL_ROLLGAP_13,
fm_pass.FPS_DIFF_ROLLGAP_13 as FPS_DIFF_ROLLGAP_13,
fm_pass.FPS_FM_PRE_WK_13 as FPS_FM_PRE_WK_13,
fm_pass.FPS_FM_ACT_WK_13 as FPS_FM_ACT_WK_13,
fm_pass.FPS_FM_PRE_WM_13 as FPS_FM_PRE_WM_13,
fm_pass.FPS_FM_ACT_WM_13 as FPS_FM_ACT_WM_13,
fm_pass.FPS_FM_PRE_MAH_13 as FPS_FM_PRE_MAH_13,
fm_pass.FPS_FM_REC_MAH_13 as FPS_FM_REC_MAH_13,
fm_pass.FPS_FM_PRE_THICK_13 as FPS_FM_PRE_THICK_13,
fm_pass.FPS_FM_Delivery_THICK_13 as FPS_FM_Delivery_THICK_13,
fm_pass.FPS_FM_PRE_WIDTH_13 as FPS_FM_PRE_WIDTH_13,
fm_pass.FPS_FM_REC_WIDTH_13 as FPS_FM_REC_WIDTH_13,
fm_pass.FPS_FM_PRE_LENGTH_13 as FPS_FM_PRE_LENGTH_13,
fm_pass.FPS_FM_REC_LENGTH_13 as FPS_FM_REC_LENGTH_13,
fm_pass.FPS_FM_IND_SPEED_13 as FPS_FM_IND_SPEED_13,
fm_pass.FPS_FM_ACT_SPEED_13 as FPS_FM_ACT_SPEED_13,
fm_pass.FPS_FM_PRE_TEMP_13 as FPS_FM_PRE_TEMP_13,
fm_pass.FPS_FM_REC_TEMP_13 as FPS_FM_REC_TEMP_13,
fm_pass.FPS_SET_ROLLGAP_14 as FPS_SET_ROLLGAP_14,
fm_pass.FPS_REAL_ROLLGAP_14 as FPS_REAL_ROLLGAP_14,
fm_pass.FPS_DIFF_ROLLGAP_14 as FPS_DIFF_ROLLGAP_14,
fm_pass.FPS_FM_PRE_WK_14 as FPS_FM_PRE_WK_14,
fm_pass.FPS_FM_ACT_WK_14 as FPS_FM_ACT_WK_14,
fm_pass.FPS_FM_PRE_WM_14 as FPS_FM_PRE_WM_14,
fm_pass.FPS_FM_ACT_WM_14 as FPS_FM_ACT_WM_14,
fm_pass.FPS_FM_PRE_MAH_14 as FPS_FM_PRE_MAH_14,
fm_pass.FPS_FM_REC_MAH_14 as FPS_FM_REC_MAH_14,
fm_pass.FPS_FM_PRE_THICK_14 as FPS_FM_PRE_THICK_14,
fm_pass.FPS_FM_Delivery_THICK_14 as FPS_FM_Delivery_THICK_14,
fm_pass.FPS_FM_PRE_WIDTH_14 as FPS_FM_PRE_WIDTH_14,
fm_pass.FPS_FM_REC_WIDTH_14 as FPS_FM_REC_WIDTH_14,
fm_pass.FPS_FM_PRE_LENGTH_14 as FPS_FM_PRE_LENGTH_14,
fm_pass.FPS_FM_REC_LENGTH_14 as FPS_FM_REC_LENGTH_14,
fm_pass.FPS_FM_IND_SPEED_14 as FPS_FM_IND_SPEED_14,
fm_pass.FPS_FM_ACT_SPEED_14 as FPS_FM_ACT_SPEED_14,
fm_pass.FPS_FM_PRE_TEMP_14 as FPS_FM_PRE_TEMP_14,
fm_pass.FPS_FM_REC_TEMP_14 as FPS_FM_REC_TEMP_14,
fm_pass.FPS_SET_ROLLGAP_15 as FPS_SET_ROLLGAP_15,
fm_pass.FPS_REAL_ROLLGAP_15 as FPS_REAL_ROLLGAP_15,
fm_pass.FPS_DIFF_ROLLGAP_15 as FPS_DIFF_ROLLGAP_15,
fm_pass.FPS_FM_PRE_WK_15 as FPS_FM_PRE_WK_15,
fm_pass.FPS_FM_ACT_WK_15 as FPS_FM_ACT_WK_15,
fm_pass.FPS_FM_PRE_WM_15 as FPS_FM_PRE_WM_15,
fm_pass.FPS_FM_ACT_WM_15 as FPS_FM_ACT_WM_15,
fm_pass.FPS_FM_PRE_MAH_15 as FPS_FM_PRE_MAH_15,
fm_pass.FPS_FM_REC_MAH_15 as FPS_FM_REC_MAH_15,
fm_pass.FPS_FM_PRE_THICK_15 as FPS_FM_PRE_THICK_15,
fm_pass.FPS_FM_Delivery_THICK_15 as FPS_FM_Delivery_THICK_15,
fm_pass.FPS_FM_PRE_WIDTH_15 as FPS_FM_PRE_WIDTH_15,
fm_pass.FPS_FM_REC_WIDTH_15 as FPS_FM_REC_WIDTH_15,
fm_pass.FPS_FM_PRE_LENGTH_15 as FPS_FM_PRE_LENGTH_15,
fm_pass.FPS_FM_REC_LENGTH_15 as FPS_FM_REC_LENGTH_15,
fm_pass.FPS_FM_IND_SPEED_15 as FPS_FM_IND_SPEED_15,
fm_pass.FPS_FM_ACT_SPEED_15 as FPS_FM_ACT_SPEED_15,
fm_pass.FPS_FM_PRE_TEMP_15 as FPS_FM_PRE_TEMP_15,
fm_pass.FPS_FM_REC_TEMP_15 as FPS_FM_REC_TEMP_15,
fm_pass.FPS_SET_ROLLGAP_16 as FPS_SET_ROLLGAP_16,
fm_pass.FPS_REAL_ROLLGAP_16 as FPS_REAL_ROLLGAP_16,
fm_pass.FPS_DIFF_ROLLGAP_16 as FPS_DIFF_ROLLGAP_16,
fm_pass.FPS_FM_PRE_WK_16 as FPS_FM_PRE_WK_16,
fm_pass.FPS_FM_ACT_WK_16 as FPS_FM_ACT_WK_16,
fm_pass.FPS_FM_PRE_WM_16 as FPS_FM_PRE_WM_16,
fm_pass.FPS_FM_ACT_WM_16 as FPS_FM_ACT_WM_16,
fm_pass.FPS_FM_PRE_MAH_16 as FPS_FM_PRE_MAH_16,
fm_pass.FPS_FM_REC_MAH_16 as FPS_FM_REC_MAH_16,
fm_pass.FPS_FM_PRE_THICK_16 as FPS_FM_PRE_THICK_16,
fm_pass.FPS_FM_Delivery_THICK_16 as FPS_FM_Delivery_THICK_16,
fm_pass.FPS_FM_PRE_WIDTH_16 as FPS_FM_PRE_WIDTH_16,
fm_pass.FPS_FM_REC_WIDTH_16 as FPS_FM_REC_WIDTH_16,
fm_pass.FPS_FM_PRE_LENGTH_16 as FPS_FM_PRE_LENGTH_16,
fm_pass.FPS_FM_REC_LENGTH_16 as FPS_FM_REC_LENGTH_16,
fm_pass.FPS_FM_IND_SPEED_16 as FPS_FM_IND_SPEED_16,
fm_pass.FPS_FM_ACT_SPEED_16 as FPS_FM_ACT_SPEED_16,
fm_pass.FPS_FM_PRE_TEMP_16 as FPS_FM_PRE_TEMP_16,
fm_pass.FPS_FM_REC_TEMP_16 as FPS_FM_REC_TEMP_16,
fm_pass.FPS_SET_ROLLGAP_17 as FPS_SET_ROLLGAP_17,
fm_pass.FPS_REAL_ROLLGAP_17 as FPS_REAL_ROLLGAP_17,
fm_pass.FPS_DIFF_ROLLGAP_17 as FPS_DIFF_ROLLGAP_17,
fm_pass.FPS_FM_PRE_WK_17 as FPS_FM_PRE_WK_17,
fm_pass.FPS_FM_ACT_WK_17 as FPS_FM_ACT_WK_17,
fm_pass.FPS_FM_PRE_WM_17 as FPS_FM_PRE_WM_17,
fm_pass.FPS_FM_ACT_WM_17 as FPS_FM_ACT_WM_17,
fm_pass.FPS_FM_PRE_MAH_17 as FPS_FM_PRE_MAH_17,
fm_pass.FPS_FM_REC_MAH_17 as FPS_FM_REC_MAH_17,
fm_pass.FPS_FM_PRE_THICK_17 as FPS_FM_PRE_THICK_17,
fm_pass.FPS_FM_Delivery_THICK_17 as FPS_FM_Delivery_THICK_17,
fm_pass.FPS_FM_PRE_WIDTH_17 as FPS_FM_PRE_WIDTH_17,
fm_pass.FPS_FM_REC_WIDTH_17 as FPS_FM_REC_WIDTH_17,
fm_pass.FPS_FM_PRE_LENGTH_17 as FPS_FM_PRE_LENGTH_17,
fm_pass.FPS_FM_REC_LENGTH_17 as FPS_FM_REC_LENGTH_17,
fm_pass.FPS_FM_IND_SPEED_17 as FPS_FM_IND_SPEED_17,
fm_pass.FPS_FM_ACT_SPEED_17 as FPS_FM_ACT_SPEED_17,
fm_pass.FPS_FM_PRE_TEMP_17 as FPS_FM_PRE_TEMP_17,
fm_pass.FPS_FM_REC_TEMP_17 as FPS_FM_REC_TEMP_17,
fm_pass.FPS_SET_ROLLGAP_18 as FPS_SET_ROLLGAP_18,
fm_pass.FPS_REAL_ROLLGAP_18 as FPS_REAL_ROLLGAP_18,
fm_pass.FPS_DIFF_ROLLGAP_18 as FPS_DIFF_ROLLGAP_18,
fm_pass.FPS_FM_PRE_WK_18 as FPS_FM_PRE_WK_18,
fm_pass.FPS_FM_ACT_WK_18 as FPS_FM_ACT_WK_18,
fm_pass.FPS_FM_PRE_WM_18 as FPS_FM_PRE_WM_18,
fm_pass.FPS_FM_ACT_WM_18 as FPS_FM_ACT_WM_18,
fm_pass.FPS_FM_PRE_MAH_18 as FPS_FM_PRE_MAH_18,
fm_pass.FPS_FM_REC_MAH_18 as FPS_FM_REC_MAH_18,
fm_pass.FPS_FM_PRE_THICK_18 as FPS_FM_PRE_THICK_18,
fm_pass.FPS_FM_Delivery_THICK_18 as FPS_FM_Delivery_THICK_18,
fm_pass.FPS_FM_PRE_WIDTH_18 as FPS_FM_PRE_WIDTH_18,
fm_pass.FPS_FM_REC_WIDTH_18 as FPS_FM_REC_WIDTH_18,
fm_pass.FPS_FM_PRE_LENGTH_18 as FPS_FM_PRE_LENGTH_18,
fm_pass.FPS_FM_REC_LENGTH_18 as FPS_FM_REC_LENGTH_18,
fm_pass.FPS_FM_IND_SPEED_18 as FPS_FM_IND_SPEED_18,
fm_pass.FPS_FM_ACT_SPEED_18 as FPS_FM_ACT_SPEED_18,
fm_pass.FPS_FM_PRE_TEMP_18 as FPS_FM_PRE_TEMP_18,
fm_pass.FPS_FM_REC_TEMP_18 as FPS_FM_REC_TEMP_18,
fm_pass.FPS_SET_ROLLGAP_19 as FPS_SET_ROLLGAP_19,
fm_pass.FPS_REAL_ROLLGAP_19 as FPS_REAL_ROLLGAP_19,
fm_pass.FPS_DIFF_ROLLGAP_19 as FPS_DIFF_ROLLGAP_19,
fm_pass.FPS_FM_PRE_WK_19 as FPS_FM_PRE_WK_19,
fm_pass.FPS_FM_ACT_WK_19 as FPS_FM_ACT_WK_19,
fm_pass.FPS_FM_PRE_WM_19 as FPS_FM_PRE_WM_19,
fm_pass.FPS_FM_ACT_WM_19 as FPS_FM_ACT_WM_19,
fm_pass.FPS_FM_PRE_MAH_19 as FPS_FM_PRE_MAH_19,
fm_pass.FPS_FM_REC_MAH_19 as FPS_FM_REC_MAH_19,
fm_pass.FPS_FM_PRE_THICK_19 as FPS_FM_PRE_THICK_19,
fm_pass.FPS_FM_Delivery_THICK_19 as FPS_FM_Delivery_THICK_19,
fm_pass.FPS_FM_PRE_WIDTH_19 as FPS_FM_PRE_WIDTH_19,
fm_pass.FPS_FM_REC_WIDTH_19 as FPS_FM_REC_WIDTH_19,
fm_pass.FPS_FM_PRE_LENGTH_19 as FPS_FM_PRE_LENGTH_19,
fm_pass.FPS_FM_REC_LENGTH_19 as FPS_FM_REC_LENGTH_19,
fm_pass.FPS_FM_IND_SPEED_19 as FPS_FM_IND_SPEED_19,
fm_pass.FPS_FM_ACT_SPEED_19 as FPS_FM_ACT_SPEED_19,
fm_pass.FPS_FM_PRE_TEMP_19 as FPS_FM_PRE_TEMP_19,
fm_pass.FPS_FM_REC_TEMP_19 as FPS_FM_REC_TEMP_19,
fm_pass.FPS_SET_ROLLGAP_20 as FPS_SET_ROLLGAP_20,
fm_pass.FPS_REAL_ROLLGAP_20 as FPS_REAL_ROLLGAP_20,
fm_pass.FPS_DIFF_ROLLGAP_20 as FPS_DIFF_ROLLGAP_20,
fm_pass.FPS_FM_PRE_WK_20 as FPS_FM_PRE_WK_20,
fm_pass.FPS_FM_ACT_WK_20 as FPS_FM_ACT_WK_20,
fm_pass.FPS_FM_PRE_WM_20 as FPS_FM_PRE_WM_20,
fm_pass.FPS_FM_ACT_WM_20 as FPS_FM_ACT_WM_20,
fm_pass.FPS_FM_PRE_MAH_20 as FPS_FM_PRE_MAH_20,
fm_pass.FPS_FM_REC_MAH_20 as FPS_FM_REC_MAH_20,
fm_pass.FPS_FM_PRE_THICK_20 as FPS_FM_PRE_THICK_20,
fm_pass.FPS_FM_Delivery_THICK_20 as FPS_FM_Delivery_THICK_20,
fm_pass.FPS_FM_PRE_WIDTH_20 as FPS_FM_PRE_WIDTH_20,
fm_pass.FPS_FM_REC_WIDTH_20 as FPS_FM_REC_WIDTH_20,
fm_pass.FPS_FM_PRE_LENGTH_20 as FPS_FM_PRE_LENGTH_20,
fm_pass.FPS_FM_REC_LENGTH_20 as FPS_FM_REC_LENGTH_20,
fm_pass.FPS_FM_IND_SPEED_20 as FPS_FM_IND_SPEED_20,
fm_pass.FPS_FM_ACT_SPEED_20 as FPS_FM_ACT_SPEED_20,
fm_pass.FPS_FM_PRE_TEMP_20 as FPS_FM_PRE_TEMP_20,
fm_pass.FPS_FM_REC_TEMP_20 as FPS_FM_REC_TEMP_20,
fm_pass.FPS_SET_ROLLGAP_21 as FPS_SET_ROLLGAP_21,
fm_pass.FPS_REAL_ROLLGAP_21 as FPS_REAL_ROLLGAP_21,
fm_pass.FPS_DIFF_ROLLGAP_21 as FPS_DIFF_ROLLGAP_21,
fm_pass.FPS_FM_PRE_WK_21 as FPS_FM_PRE_WK_21,
fm_pass.FPS_FM_ACT_WK_21 as FPS_FM_ACT_WK_21,
fm_pass.FPS_FM_PRE_WM_21 as FPS_FM_PRE_WM_21,
fm_pass.FPS_FM_ACT_WM_21 as FPS_FM_ACT_WM_21,
fm_pass.FPS_FM_PRE_MAH_21 as FPS_FM_PRE_MAH_21,
fm_pass.FPS_FM_REC_MAH_21 as FPS_FM_REC_MAH_21,
fm_pass.FPS_FM_PRE_THICK_21 as FPS_FM_PRE_THICK_21,
fm_pass.FPS_FM_Delivery_THICK_21 as FPS_FM_Delivery_THICK_21,
fm_pass.FPS_FM_PRE_WIDTH_21 as FPS_FM_PRE_WIDTH_21,
fm_pass.FPS_FM_REC_WIDTH_21 as FPS_FM_REC_WIDTH_21,
fm_pass.FPS_FM_PRE_LENGTH_21 as FPS_FM_PRE_LENGTH_21,
fm_pass.FPS_FM_REC_LENGTH_21 as FPS_FM_REC_LENGTH_21,
fm_pass.FPS_FM_IND_SPEED_21 as FPS_FM_IND_SPEED_21,
fm_pass.FPS_FM_ACT_SPEED_21 as FPS_FM_ACT_SPEED_21,
fm_pass.FPS_FM_PRE_TEMP_21 as FPS_FM_PRE_TEMP_21,
fm_pass.FPS_FM_REC_TEMP_21 as FPS_FM_REC_TEMP_21,
fm_pass.FPS_SET_ROLLGAP_22 as FPS_SET_ROLLGAP_22,
fm_pass.FPS_REAL_ROLLGAP_22 as FPS_REAL_ROLLGAP_22,
fm_pass.FPS_DIFF_ROLLGAP_22 as FPS_DIFF_ROLLGAP_22,
fm_pass.FPS_FM_PRE_WK_22 as FPS_FM_PRE_WK_22,
fm_pass.FPS_FM_ACT_WK_22 as FPS_FM_ACT_WK_22,
fm_pass.FPS_FM_PRE_WM_22 as FPS_FM_PRE_WM_22,
fm_pass.FPS_FM_ACT_WM_22 as FPS_FM_ACT_WM_22,
fm_pass.FPS_FM_PRE_MAH_22 as FPS_FM_PRE_MAH_22,
fm_pass.FPS_FM_REC_MAH_22 as FPS_FM_REC_MAH_22,
fm_pass.FPS_FM_PRE_THICK_22 as FPS_FM_PRE_THICK_22,
fm_pass.FPS_FM_Delivery_THICK_22 as FPS_FM_Delivery_THICK_22,
fm_pass.FPS_FM_PRE_WIDTH_22 as FPS_FM_PRE_WIDTH_22,
fm_pass.FPS_FM_REC_WIDTH_22 as FPS_FM_REC_WIDTH_22,
fm_pass.FPS_FM_PRE_LENGTH_22 as FPS_FM_PRE_LENGTH_22,
fm_pass.FPS_FM_REC_LENGTH_22 as FPS_FM_REC_LENGTH_22,
fm_pass.FPS_FM_IND_SPEED_22 as FPS_FM_IND_SPEED_22,
fm_pass.FPS_FM_ACT_SPEED_22 as FPS_FM_ACT_SPEED_22,
fm_pass.FPS_FM_PRE_TEMP_22 as FPS_FM_PRE_TEMP_22,
fm_pass.FPS_FM_REC_TEMP_22 as FPS_FM_REC_TEMP_22
FROM
quality_result, product, furnace, temperature, time, rm_finish_width, rm_slab, fm_slab,  ( select 
SLAB_NO, 
sum(RPS_SET_ROLLGAP_1 ) as RPS_SET_ROLLGAP_1, 
sum(RPS_SET_ROLLGAP_2 ) as RPS_SET_ROLLGAP_2, 
sum(RPS_SET_ROLLGAP_3 ) as RPS_SET_ROLLGAP_3, 
sum(RPS_SET_ROLLGAP_4 ) as RPS_SET_ROLLGAP_4, 
sum(RPS_SET_ROLLGAP_5 ) as RPS_SET_ROLLGAP_5, 
sum(RPS_SET_ROLLGAP_6 ) as RPS_SET_ROLLGAP_6, 
sum(RPS_SET_ROLLGAP_7 ) as RPS_SET_ROLLGAP_7, 
sum(RPS_SET_ROLLGAP_8 ) as RPS_SET_ROLLGAP_8, 
sum(RPS_SET_ROLLGAP_9 ) as RPS_SET_ROLLGAP_9, 
sum(RPS_SET_ROLLGAP_10 ) as RPS_SET_ROLLGAP_10, 
sum(RPS_SET_ROLLGAP_11 ) as RPS_SET_ROLLGAP_11, 
sum(RPS_SET_ROLLGAP_12 ) as RPS_SET_ROLLGAP_12, 
sum(RPS_SET_ROLLGAP_13 ) as RPS_SET_ROLLGAP_13, 
sum(RPS_SET_ROLLGAP_14 ) as RPS_SET_ROLLGAP_14, 
sum(RPS_SET_ROLLGAP_15 ) as RPS_SET_ROLLGAP_15, 
sum(RPS_SET_ROLLGAP_16 ) as RPS_SET_ROLLGAP_16, 
sum(RPS_REAL_ROLLGAP_1 ) as RPS_REAL_ROLLGAP_1, 
sum(RPS_REAL_ROLLGAP_2 ) as RPS_REAL_ROLLGAP_2, 
sum(RPS_REAL_ROLLGAP_3 ) as RPS_REAL_ROLLGAP_3, 
sum(RPS_REAL_ROLLGAP_4 ) as RPS_REAL_ROLLGAP_4, 
sum(RPS_REAL_ROLLGAP_5 ) as RPS_REAL_ROLLGAP_5, 
sum(RPS_REAL_ROLLGAP_6 ) as RPS_REAL_ROLLGAP_6, 
sum(RPS_REAL_ROLLGAP_7 ) as RPS_REAL_ROLLGAP_7, 
sum(RPS_REAL_ROLLGAP_8 ) as RPS_REAL_ROLLGAP_8, 
sum(RPS_REAL_ROLLGAP_9 ) as RPS_REAL_ROLLGAP_9, 
sum(RPS_REAL_ROLLGAP_10 ) as RPS_REAL_ROLLGAP_10, 
sum(RPS_REAL_ROLLGAP_11 ) as RPS_REAL_ROLLGAP_11, 
sum(RPS_REAL_ROLLGAP_12 ) as RPS_REAL_ROLLGAP_12, 
sum(RPS_REAL_ROLLGAP_13 ) as RPS_REAL_ROLLGAP_13, 
sum(RPS_REAL_ROLLGAP_14 ) as RPS_REAL_ROLLGAP_14, 
sum(RPS_REAL_ROLLGAP_15 ) as RPS_REAL_ROLLGAP_15, 
sum(RPS_REAL_ROLLGAP_16 ) as RPS_REAL_ROLLGAP_16, 
sum(RPS_DIFF_ROLLGAP_1 ) as RPS_DIFF_ROLLGAP_1, 
sum(RPS_DIFF_ROLLGAP_2 ) as RPS_DIFF_ROLLGAP_2, 
sum(RPS_DIFF_ROLLGAP_3 ) as RPS_DIFF_ROLLGAP_3, 
sum(RPS_DIFF_ROLLGAP_4 ) as RPS_DIFF_ROLLGAP_4, 
sum(RPS_DIFF_ROLLGAP_5 ) as RPS_DIFF_ROLLGAP_5, 
sum(RPS_DIFF_ROLLGAP_6 ) as RPS_DIFF_ROLLGAP_6, 
sum(RPS_DIFF_ROLLGAP_7 ) as RPS_DIFF_ROLLGAP_7, 
sum(RPS_DIFF_ROLLGAP_8 ) as RPS_DIFF_ROLLGAP_8, 
sum(RPS_DIFF_ROLLGAP_9 ) as RPS_DIFF_ROLLGAP_9, 
sum(RPS_DIFF_ROLLGAP_10 ) as RPS_DIFF_ROLLGAP_10, 
sum(RPS_DIFF_ROLLGAP_11 ) as RPS_DIFF_ROLLGAP_11, 
sum(RPS_DIFF_ROLLGAP_12 ) as RPS_DIFF_ROLLGAP_12, 
sum(RPS_DIFF_ROLLGAP_13 ) as RPS_DIFF_ROLLGAP_13, 
sum(RPS_DIFF_ROLLGAP_14 ) as RPS_DIFF_ROLLGAP_14, 
sum(RPS_DIFF_ROLLGAP_15 ) as RPS_DIFF_ROLLGAP_15, 
sum(RPS_DIFF_ROLLGAP_16 ) as RPS_DIFF_ROLLGAP_16, 
sum(RPS_RM_PRE_WK_1 ) as RPS_RM_PRE_WK_1, 
sum(RPS_RM_PRE_WK_2 ) as RPS_RM_PRE_WK_2, 
sum(RPS_RM_PRE_WK_3 ) as RPS_RM_PRE_WK_3, 
sum(RPS_RM_PRE_WK_4 ) as RPS_RM_PRE_WK_4, 
sum(RPS_RM_PRE_WK_5 ) as RPS_RM_PRE_WK_5, 
sum(RPS_RM_PRE_WK_6 ) as RPS_RM_PRE_WK_6, 
sum(RPS_RM_PRE_WK_7 ) as RPS_RM_PRE_WK_7, 
sum(RPS_RM_PRE_WK_8 ) as RPS_RM_PRE_WK_8, 
sum(RPS_RM_PRE_WK_9 ) as RPS_RM_PRE_WK_9, 
sum(RPS_RM_PRE_WK_10 ) as RPS_RM_PRE_WK_10, 
sum(RPS_RM_PRE_WK_11 ) as RPS_RM_PRE_WK_11, 
sum(RPS_RM_PRE_WK_12 ) as RPS_RM_PRE_WK_12, 
sum(RPS_RM_PRE_WK_13 ) as RPS_RM_PRE_WK_13, 
sum(RPS_RM_PRE_WK_14 ) as RPS_RM_PRE_WK_14, 
sum(RPS_RM_PRE_WK_15 ) as RPS_RM_PRE_WK_15, 
sum(RPS_RM_PRE_WK_16 ) as RPS_RM_PRE_WK_16, 
sum(RPS_RM_ACT_WK_1 ) as RPS_RM_ACT_WK_1, 
sum(RPS_RM_ACT_WK_2 ) as RPS_RM_ACT_WK_2, 
sum(RPS_RM_ACT_WK_3 ) as RPS_RM_ACT_WK_3, 
sum(RPS_RM_ACT_WK_4 ) as RPS_RM_ACT_WK_4, 
sum(RPS_RM_ACT_WK_5 ) as RPS_RM_ACT_WK_5, 
sum(RPS_RM_ACT_WK_6 ) as RPS_RM_ACT_WK_6, 
sum(RPS_RM_ACT_WK_7 ) as RPS_RM_ACT_WK_7, 
sum(RPS_RM_ACT_WK_8 ) as RPS_RM_ACT_WK_8, 
sum(RPS_RM_ACT_WK_9 ) as RPS_RM_ACT_WK_9, 
sum(RPS_RM_ACT_WK_10 ) as RPS_RM_ACT_WK_10, 
sum(RPS_RM_ACT_WK_11 ) as RPS_RM_ACT_WK_11, 
sum(RPS_RM_ACT_WK_12 ) as RPS_RM_ACT_WK_12, 
sum(RPS_RM_ACT_WK_13 ) as RPS_RM_ACT_WK_13, 
sum(RPS_RM_ACT_WK_14 ) as RPS_RM_ACT_WK_14, 
sum(RPS_RM_ACT_WK_15 ) as RPS_RM_ACT_WK_15, 
sum(RPS_RM_ACT_WK_16 ) as RPS_RM_ACT_WK_16, 
sum(RPS_RM_KWK_1 ) as RPS_RM_KWK_1, 
sum(RPS_RM_KWK_2 ) as RPS_RM_KWK_2, 
sum(RPS_RM_KWK_3 ) as RPS_RM_KWK_3, 
sum(RPS_RM_KWK_4 ) as RPS_RM_KWK_4, 
sum(RPS_RM_KWK_5 ) as RPS_RM_KWK_5, 
sum(RPS_RM_KWK_6 ) as RPS_RM_KWK_6, 
sum(RPS_RM_KWK_7 ) as RPS_RM_KWK_7, 
sum(RPS_RM_KWK_8 ) as RPS_RM_KWK_8, 
sum(RPS_RM_KWK_9 ) as RPS_RM_KWK_9, 
sum(RPS_RM_KWK_10 ) as RPS_RM_KWK_10, 
sum(RPS_RM_KWK_11 ) as RPS_RM_KWK_11, 
sum(RPS_RM_KWK_12 ) as RPS_RM_KWK_12, 
sum(RPS_RM_KWK_13 ) as RPS_RM_KWK_13, 
sum(RPS_RM_KWK_14 ) as RPS_RM_KWK_14, 
sum(RPS_RM_KWK_15 ) as RPS_RM_KWK_15, 
sum(RPS_RM_KWK_16 ) as RPS_RM_KWK_16, 
sum(RPS_RM_PRE_WM_1 ) as RPS_RM_PRE_WM_1, 
sum(RPS_RM_PRE_WM_2 ) as RPS_RM_PRE_WM_2, 
sum(RPS_RM_PRE_WM_3 ) as RPS_RM_PRE_WM_3, 
sum(RPS_RM_PRE_WM_4 ) as RPS_RM_PRE_WM_4, 
sum(RPS_RM_PRE_WM_5 ) as RPS_RM_PRE_WM_5, 
sum(RPS_RM_PRE_WM_6 ) as RPS_RM_PRE_WM_6, 
sum(RPS_RM_PRE_WM_7 ) as RPS_RM_PRE_WM_7, 
sum(RPS_RM_PRE_WM_8 ) as RPS_RM_PRE_WM_8, 
sum(RPS_RM_PRE_WM_9 ) as RPS_RM_PRE_WM_9, 
sum(RPS_RM_PRE_WM_10 ) as RPS_RM_PRE_WM_10, 
sum(RPS_RM_PRE_WM_11 ) as RPS_RM_PRE_WM_11, 
sum(RPS_RM_PRE_WM_12 ) as RPS_RM_PRE_WM_12, 
sum(RPS_RM_PRE_WM_13 ) as RPS_RM_PRE_WM_13, 
sum(RPS_RM_PRE_WM_14 ) as RPS_RM_PRE_WM_14, 
sum(RPS_RM_PRE_WM_15 ) as RPS_RM_PRE_WM_15, 
sum(RPS_RM_PRE_WM_16 ) as RPS_RM_PRE_WM_16, 
sum(RPS_RM_ACT_WM_1 ) as RPS_RM_ACT_WM_1, 
sum(RPS_RM_ACT_WM_2 ) as RPS_RM_ACT_WM_2, 
sum(RPS_RM_ACT_WM_3 ) as RPS_RM_ACT_WM_3, 
sum(RPS_RM_ACT_WM_4 ) as RPS_RM_ACT_WM_4, 
sum(RPS_RM_ACT_WM_5 ) as RPS_RM_ACT_WM_5, 
sum(RPS_RM_ACT_WM_6 ) as RPS_RM_ACT_WM_6, 
sum(RPS_RM_ACT_WM_7 ) as RPS_RM_ACT_WM_7, 
sum(RPS_RM_ACT_WM_8 ) as RPS_RM_ACT_WM_8, 
sum(RPS_RM_ACT_WM_9 ) as RPS_RM_ACT_WM_9, 
sum(RPS_RM_ACT_WM_10 ) as RPS_RM_ACT_WM_10, 
sum(RPS_RM_ACT_WM_11 ) as RPS_RM_ACT_WM_11, 
sum(RPS_RM_ACT_WM_12 ) as RPS_RM_ACT_WM_12, 
sum(RPS_RM_ACT_WM_13 ) as RPS_RM_ACT_WM_13, 
sum(RPS_RM_ACT_WM_14 ) as RPS_RM_ACT_WM_14, 
sum(RPS_RM_ACT_WM_15 ) as RPS_RM_ACT_WM_15, 
sum(RPS_RM_ACT_WM_16 ) as RPS_RM_ACT_WM_16, 
sum(RPS_RM_KWM_1 ) as RPS_RM_KWM_1, 
sum(RPS_RM_KWM_2 ) as RPS_RM_KWM_2, 
sum(RPS_RM_KWM_3 ) as RPS_RM_KWM_3, 
sum(RPS_RM_KWM_4 ) as RPS_RM_KWM_4, 
sum(RPS_RM_KWM_5 ) as RPS_RM_KWM_5, 
sum(RPS_RM_KWM_6 ) as RPS_RM_KWM_6, 
sum(RPS_RM_KWM_7 ) as RPS_RM_KWM_7, 
sum(RPS_RM_KWM_8 ) as RPS_RM_KWM_8, 
sum(RPS_RM_KWM_9 ) as RPS_RM_KWM_9, 
sum(RPS_RM_KWM_10 ) as RPS_RM_KWM_10, 
sum(RPS_RM_KWM_11 ) as RPS_RM_KWM_11, 
sum(RPS_RM_KWM_12 ) as RPS_RM_KWM_12, 
sum(RPS_RM_KWM_13 ) as RPS_RM_KWM_13, 
sum(RPS_RM_KWM_14 ) as RPS_RM_KWM_14, 
sum(RPS_RM_KWM_15 ) as RPS_RM_KWM_15, 
sum(RPS_RM_KWM_16 ) as RPS_RM_KWM_16, 
sum(RPS_RM_PRE_THICK_1 ) as RPS_RM_PRE_THICK_1, 
sum(RPS_RM_PRE_THICK_2 ) as RPS_RM_PRE_THICK_2, 
sum(RPS_RM_PRE_THICK_3 ) as RPS_RM_PRE_THICK_3, 
sum(RPS_RM_PRE_THICK_4 ) as RPS_RM_PRE_THICK_4, 
sum(RPS_RM_PRE_THICK_5 ) as RPS_RM_PRE_THICK_5, 
sum(RPS_RM_PRE_THICK_6 ) as RPS_RM_PRE_THICK_6, 
sum(RPS_RM_PRE_THICK_7 ) as RPS_RM_PRE_THICK_7, 
sum(RPS_RM_PRE_THICK_8 ) as RPS_RM_PRE_THICK_8, 
sum(RPS_RM_PRE_THICK_9 ) as RPS_RM_PRE_THICK_9, 
sum(RPS_RM_PRE_THICK_10 ) as RPS_RM_PRE_THICK_10, 
sum(RPS_RM_PRE_THICK_11 ) as RPS_RM_PRE_THICK_11, 
sum(RPS_RM_PRE_THICK_12 ) as RPS_RM_PRE_THICK_12, 
sum(RPS_RM_PRE_THICK_13 ) as RPS_RM_PRE_THICK_13, 
sum(RPS_RM_PRE_THICK_14 ) as RPS_RM_PRE_THICK_14, 
sum(RPS_RM_PRE_THICK_15 ) as RPS_RM_PRE_THICK_15, 
sum(RPS_RM_PRE_THICK_16 ) as RPS_RM_PRE_THICK_16, 
sum(RPS_RM_Delivery_THICK_1 ) as RPS_RM_Delivery_THICK_1, 
sum(RPS_RM_Delivery_THICK_2 ) as RPS_RM_Delivery_THICK_2, 
sum(RPS_RM_Delivery_THICK_3 ) as RPS_RM_Delivery_THICK_3, 
sum(RPS_RM_Delivery_THICK_4 ) as RPS_RM_Delivery_THICK_4, 
sum(RPS_RM_Delivery_THICK_5 ) as RPS_RM_Delivery_THICK_5, 
sum(RPS_RM_Delivery_THICK_6 ) as RPS_RM_Delivery_THICK_6, 
sum(RPS_RM_Delivery_THICK_7 ) as RPS_RM_Delivery_THICK_7, 
sum(RPS_RM_Delivery_THICK_8 ) as RPS_RM_Delivery_THICK_8, 
sum(RPS_RM_Delivery_THICK_9 ) as RPS_RM_Delivery_THICK_9, 
sum(RPS_RM_Delivery_THICK_10 ) as RPS_RM_Delivery_THICK_10, 
sum(RPS_RM_Delivery_THICK_11 ) as RPS_RM_Delivery_THICK_11, 
sum(RPS_RM_Delivery_THICK_12 ) as RPS_RM_Delivery_THICK_12, 
sum(RPS_RM_Delivery_THICK_13 ) as RPS_RM_Delivery_THICK_13, 
sum(RPS_RM_Delivery_THICK_14 ) as RPS_RM_Delivery_THICK_14, 
sum(RPS_RM_Delivery_THICK_15 ) as RPS_RM_Delivery_THICK_15, 
sum(RPS_RM_Delivery_THICK_16 ) as RPS_RM_Delivery_THICK_16, 
sum(RPS_RM_PRE_WIDTH_1 ) as RPS_RM_PRE_WIDTH_1, 
sum(RPS_RM_PRE_WIDTH_2 ) as RPS_RM_PRE_WIDTH_2, 
sum(RPS_RM_PRE_WIDTH_3 ) as RPS_RM_PRE_WIDTH_3, 
sum(RPS_RM_PRE_WIDTH_4 ) as RPS_RM_PRE_WIDTH_4, 
sum(RPS_RM_PRE_WIDTH_5 ) as RPS_RM_PRE_WIDTH_5, 
sum(RPS_RM_PRE_WIDTH_6 ) as RPS_RM_PRE_WIDTH_6, 
sum(RPS_RM_PRE_WIDTH_7 ) as RPS_RM_PRE_WIDTH_7, 
sum(RPS_RM_PRE_WIDTH_8 ) as RPS_RM_PRE_WIDTH_8, 
sum(RPS_RM_PRE_WIDTH_9 ) as RPS_RM_PRE_WIDTH_9, 
sum(RPS_RM_PRE_WIDTH_10 ) as RPS_RM_PRE_WIDTH_10, 
sum(RPS_RM_PRE_WIDTH_11 ) as RPS_RM_PRE_WIDTH_11, 
sum(RPS_RM_PRE_WIDTH_12 ) as RPS_RM_PRE_WIDTH_12, 
sum(RPS_RM_PRE_WIDTH_13 ) as RPS_RM_PRE_WIDTH_13, 
sum(RPS_RM_PRE_WIDTH_14 ) as RPS_RM_PRE_WIDTH_14, 
sum(RPS_RM_PRE_WIDTH_15 ) as RPS_RM_PRE_WIDTH_15, 
sum(RPS_RM_PRE_WIDTH_16 ) as RPS_RM_PRE_WIDTH_16, 
sum(RPS_RM_REC_WIDTH_1 ) as RPS_RM_REC_WIDTH_1, 
sum(RPS_RM_REC_WIDTH_2 ) as RPS_RM_REC_WIDTH_2, 
sum(RPS_RM_REC_WIDTH_3 ) as RPS_RM_REC_WIDTH_3, 
sum(RPS_RM_REC_WIDTH_4 ) as RPS_RM_REC_WIDTH_4, 
sum(RPS_RM_REC_WIDTH_5 ) as RPS_RM_REC_WIDTH_5, 
sum(RPS_RM_REC_WIDTH_6 ) as RPS_RM_REC_WIDTH_6, 
sum(RPS_RM_REC_WIDTH_7 ) as RPS_RM_REC_WIDTH_7, 
sum(RPS_RM_REC_WIDTH_8 ) as RPS_RM_REC_WIDTH_8, 
sum(RPS_RM_REC_WIDTH_9 ) as RPS_RM_REC_WIDTH_9, 
sum(RPS_RM_REC_WIDTH_10 ) as RPS_RM_REC_WIDTH_10, 
sum(RPS_RM_REC_WIDTH_11 ) as RPS_RM_REC_WIDTH_11, 
sum(RPS_RM_REC_WIDTH_12 ) as RPS_RM_REC_WIDTH_12, 
sum(RPS_RM_REC_WIDTH_13 ) as RPS_RM_REC_WIDTH_13, 
sum(RPS_RM_REC_WIDTH_14 ) as RPS_RM_REC_WIDTH_14, 
sum(RPS_RM_REC_WIDTH_15 ) as RPS_RM_REC_WIDTH_15, 
sum(RPS_RM_REC_WIDTH_16 ) as RPS_RM_REC_WIDTH_16, 
sum(RPS_RM_PRE_LENGTH_1 ) as RPS_RM_PRE_LENGTH_1, 
sum(RPS_RM_PRE_LENGTH_2 ) as RPS_RM_PRE_LENGTH_2, 
sum(RPS_RM_PRE_LENGTH_3 ) as RPS_RM_PRE_LENGTH_3, 
sum(RPS_RM_PRE_LENGTH_4 ) as RPS_RM_PRE_LENGTH_4, 
sum(RPS_RM_PRE_LENGTH_5 ) as RPS_RM_PRE_LENGTH_5, 
sum(RPS_RM_PRE_LENGTH_6 ) as RPS_RM_PRE_LENGTH_6, 
sum(RPS_RM_PRE_LENGTH_7 ) as RPS_RM_PRE_LENGTH_7, 
sum(RPS_RM_PRE_LENGTH_8 ) as RPS_RM_PRE_LENGTH_8, 
sum(RPS_RM_PRE_LENGTH_9 ) as RPS_RM_PRE_LENGTH_9, 
sum(RPS_RM_PRE_LENGTH_10 ) as RPS_RM_PRE_LENGTH_10, 
sum(RPS_RM_PRE_LENGTH_11 ) as RPS_RM_PRE_LENGTH_11, 
sum(RPS_RM_PRE_LENGTH_12 ) as RPS_RM_PRE_LENGTH_12, 
sum(RPS_RM_PRE_LENGTH_13 ) as RPS_RM_PRE_LENGTH_13, 
sum(RPS_RM_PRE_LENGTH_14 ) as RPS_RM_PRE_LENGTH_14, 
sum(RPS_RM_PRE_LENGTH_15 ) as RPS_RM_PRE_LENGTH_15, 
sum(RPS_RM_PRE_LENGTH_16 ) as RPS_RM_PRE_LENGTH_16, 
sum(RPS_RM_REC_LENGTH_1 ) as RPS_RM_REC_LENGTH_1, 
sum(RPS_RM_REC_LENGTH_2 ) as RPS_RM_REC_LENGTH_2, 
sum(RPS_RM_REC_LENGTH_3 ) as RPS_RM_REC_LENGTH_3, 
sum(RPS_RM_REC_LENGTH_4 ) as RPS_RM_REC_LENGTH_4, 
sum(RPS_RM_REC_LENGTH_5 ) as RPS_RM_REC_LENGTH_5, 
sum(RPS_RM_REC_LENGTH_6 ) as RPS_RM_REC_LENGTH_6, 
sum(RPS_RM_REC_LENGTH_7 ) as RPS_RM_REC_LENGTH_7, 
sum(RPS_RM_REC_LENGTH_8 ) as RPS_RM_REC_LENGTH_8, 
sum(RPS_RM_REC_LENGTH_9 ) as RPS_RM_REC_LENGTH_9, 
sum(RPS_RM_REC_LENGTH_10 ) as RPS_RM_REC_LENGTH_10, 
sum(RPS_RM_REC_LENGTH_11 ) as RPS_RM_REC_LENGTH_11, 
sum(RPS_RM_REC_LENGTH_12 ) as RPS_RM_REC_LENGTH_12, 
sum(RPS_RM_REC_LENGTH_13 ) as RPS_RM_REC_LENGTH_13, 
sum(RPS_RM_REC_LENGTH_14 ) as RPS_RM_REC_LENGTH_14, 
sum(RPS_RM_REC_LENGTH_15 ) as RPS_RM_REC_LENGTH_15, 
sum(RPS_RM_REC_LENGTH_16 ) as RPS_RM_REC_LENGTH_16, 
sum(RPS_RM_PRE_TEMP_1 ) as RPS_RM_PRE_TEMP_1, 
sum(RPS_RM_PRE_TEMP_2 ) as RPS_RM_PRE_TEMP_2, 
sum(RPS_RM_PRE_TEMP_3 ) as RPS_RM_PRE_TEMP_3, 
sum(RPS_RM_PRE_TEMP_4 ) as RPS_RM_PRE_TEMP_4, 
sum(RPS_RM_PRE_TEMP_5 ) as RPS_RM_PRE_TEMP_5, 
sum(RPS_RM_PRE_TEMP_6 ) as RPS_RM_PRE_TEMP_6, 
sum(RPS_RM_PRE_TEMP_7 ) as RPS_RM_PRE_TEMP_7, 
sum(RPS_RM_PRE_TEMP_8 ) as RPS_RM_PRE_TEMP_8, 
sum(RPS_RM_PRE_TEMP_9 ) as RPS_RM_PRE_TEMP_9, 
sum(RPS_RM_PRE_TEMP_10 ) as RPS_RM_PRE_TEMP_10, 
sum(RPS_RM_PRE_TEMP_11 ) as RPS_RM_PRE_TEMP_11, 
sum(RPS_RM_PRE_TEMP_12 ) as RPS_RM_PRE_TEMP_12, 
sum(RPS_RM_PRE_TEMP_13 ) as RPS_RM_PRE_TEMP_13, 
sum(RPS_RM_PRE_TEMP_14 ) as RPS_RM_PRE_TEMP_14, 
sum(RPS_RM_PRE_TEMP_15 ) as RPS_RM_PRE_TEMP_15, 
sum(RPS_RM_PRE_TEMP_16 ) as RPS_RM_PRE_TEMP_16, 
sum(RPS_RM_PRE_REDUCTION_1 ) as RPS_RM_PRE_REDUCTION_1, 
sum(RPS_RM_PRE_REDUCTION_2 ) as RPS_RM_PRE_REDUCTION_2, 
sum(RPS_RM_PRE_REDUCTION_3 ) as RPS_RM_PRE_REDUCTION_3, 
sum(RPS_RM_PRE_REDUCTION_4 ) as RPS_RM_PRE_REDUCTION_4, 
sum(RPS_RM_PRE_REDUCTION_5 ) as RPS_RM_PRE_REDUCTION_5, 
sum(RPS_RM_PRE_REDUCTION_6 ) as RPS_RM_PRE_REDUCTION_6, 
sum(RPS_RM_PRE_REDUCTION_7 ) as RPS_RM_PRE_REDUCTION_7, 
sum(RPS_RM_PRE_REDUCTION_8 ) as RPS_RM_PRE_REDUCTION_8, 
sum(RPS_RM_PRE_REDUCTION_9 ) as RPS_RM_PRE_REDUCTION_9, 
sum(RPS_RM_PRE_REDUCTION_10 ) as RPS_RM_PRE_REDUCTION_10, 
sum(RPS_RM_PRE_REDUCTION_11 ) as RPS_RM_PRE_REDUCTION_11, 
sum(RPS_RM_PRE_REDUCTION_12 ) as RPS_RM_PRE_REDUCTION_12, 
sum(RPS_RM_PRE_REDUCTION_13 ) as RPS_RM_PRE_REDUCTION_13, 
sum(RPS_RM_PRE_REDUCTION_14 ) as RPS_RM_PRE_REDUCTION_14, 
sum(RPS_RM_PRE_REDUCTION_15 ) as RPS_RM_PRE_REDUCTION_15, 
sum(RPS_RM_PRE_REDUCTION_16 ) as RPS_RM_PRE_REDUCTION_16, 
sum(RPS_RM_REC_REDUCTION_1 ) as RPS_RM_REC_REDUCTION_1, 
sum(RPS_RM_REC_REDUCTION_2 ) as RPS_RM_REC_REDUCTION_2, 
sum(RPS_RM_REC_REDUCTION_3 ) as RPS_RM_REC_REDUCTION_3, 
sum(RPS_RM_REC_REDUCTION_4 ) as RPS_RM_REC_REDUCTION_4, 
sum(RPS_RM_REC_REDUCTION_5 ) as RPS_RM_REC_REDUCTION_5, 
sum(RPS_RM_REC_REDUCTION_6 ) as RPS_RM_REC_REDUCTION_6, 
sum(RPS_RM_REC_REDUCTION_7 ) as RPS_RM_REC_REDUCTION_7, 
sum(RPS_RM_REC_REDUCTION_8 ) as RPS_RM_REC_REDUCTION_8, 
sum(RPS_RM_REC_REDUCTION_9 ) as RPS_RM_REC_REDUCTION_9, 
sum(RPS_RM_REC_REDUCTION_10 ) as RPS_RM_REC_REDUCTION_10, 
sum(RPS_RM_REC_REDUCTION_11 ) as RPS_RM_REC_REDUCTION_11, 
sum(RPS_RM_REC_REDUCTION_12 ) as RPS_RM_REC_REDUCTION_12, 
sum(RPS_RM_REC_REDUCTION_13 ) as RPS_RM_REC_REDUCTION_13, 
sum(RPS_RM_REC_REDUCTION_14 ) as RPS_RM_REC_REDUCTION_14, 
sum(RPS_RM_REC_REDUCTION_15 ) as RPS_RM_REC_REDUCTION_15, 
sum(RPS_RM_REC_REDUCTION_16 ) as RPS_RM_REC_REDUCTION_16, 
sum(RPS_RM_PRE_REL_REDUCTION_1 ) as RPS_RM_PRE_REL_REDUCTION_1, 
sum(RPS_RM_PRE_REL_REDUCTION_2 ) as RPS_RM_PRE_REL_REDUCTION_2, 
sum(RPS_RM_PRE_REL_REDUCTION_3 ) as RPS_RM_PRE_REL_REDUCTION_3, 
sum(RPS_RM_PRE_REL_REDUCTION_4 ) as RPS_RM_PRE_REL_REDUCTION_4, 
sum(RPS_RM_PRE_REL_REDUCTION_5 ) as RPS_RM_PRE_REL_REDUCTION_5, 
sum(RPS_RM_PRE_REL_REDUCTION_6 ) as RPS_RM_PRE_REL_REDUCTION_6, 
sum(RPS_RM_PRE_REL_REDUCTION_7 ) as RPS_RM_PRE_REL_REDUCTION_7, 
sum(RPS_RM_PRE_REL_REDUCTION_8 ) as RPS_RM_PRE_REL_REDUCTION_8, 
sum(RPS_RM_PRE_REL_REDUCTION_9 ) as RPS_RM_PRE_REL_REDUCTION_9, 
sum(RPS_RM_PRE_REL_REDUCTION_10 ) as RPS_RM_PRE_REL_REDUCTION_10, 
sum(RPS_RM_PRE_REL_REDUCTION_11 ) as RPS_RM_PRE_REL_REDUCTION_11, 
sum(RPS_RM_PRE_REL_REDUCTION_12 ) as RPS_RM_PRE_REL_REDUCTION_12, 
sum(RPS_RM_PRE_REL_REDUCTION_13 ) as RPS_RM_PRE_REL_REDUCTION_13, 
sum(RPS_RM_PRE_REL_REDUCTION_14 ) as RPS_RM_PRE_REL_REDUCTION_14, 
sum(RPS_RM_PRE_REL_REDUCTION_15 ) as RPS_RM_PRE_REL_REDUCTION_15, 
sum(RPS_RM_PRE_REL_REDUCTION_16 ) as RPS_RM_PRE_REL_REDUCTION_16, 
sum(RPS_RM_REC_REL_REDUCTION_1 ) as RPS_RM_REC_REL_REDUCTION_1, 
sum(RPS_RM_REC_REL_REDUCTION_2 ) as RPS_RM_REC_REL_REDUCTION_2, 
sum(RPS_RM_REC_REL_REDUCTION_3 ) as RPS_RM_REC_REL_REDUCTION_3, 
sum(RPS_RM_REC_REL_REDUCTION_4 ) as RPS_RM_REC_REL_REDUCTION_4, 
sum(RPS_RM_REC_REL_REDUCTION_5 ) as RPS_RM_REC_REL_REDUCTION_5, 
sum(RPS_RM_REC_REL_REDUCTION_6 ) as RPS_RM_REC_REL_REDUCTION_6, 
sum(RPS_RM_REC_REL_REDUCTION_7 ) as RPS_RM_REC_REL_REDUCTION_7, 
sum(RPS_RM_REC_REL_REDUCTION_8 ) as RPS_RM_REC_REL_REDUCTION_8, 
sum(RPS_RM_REC_REL_REDUCTION_9 ) as RPS_RM_REC_REL_REDUCTION_9, 
sum(RPS_RM_REC_REL_REDUCTION_10 ) as RPS_RM_REC_REL_REDUCTION_10, 
sum(RPS_RM_REC_REL_REDUCTION_11 ) as RPS_RM_REC_REL_REDUCTION_11, 
sum(RPS_RM_REC_REL_REDUCTION_12 ) as RPS_RM_REC_REL_REDUCTION_12, 
sum(RPS_RM_REC_REL_REDUCTION_13 ) as RPS_RM_REC_REL_REDUCTION_13, 
sum(RPS_RM_REC_REL_REDUCTION_14 ) as RPS_RM_REC_REL_REDUCTION_14, 
sum(RPS_RM_REC_REL_REDUCTION_15 ) as RPS_RM_REC_REL_REDUCTION_15, 
sum(RPS_RM_REC_REL_REDUCTION_16 ) as RPS_RM_REC_REL_REDUCTION_16, 
sum(RPS_SET_EDGGAP_1 ) as RPS_SET_EDGGAP_1, 
sum(RPS_SET_EDGGAP_2 ) as RPS_SET_EDGGAP_2, 
sum(RPS_SET_EDGGAP_3 ) as RPS_SET_EDGGAP_3, 
sum(RPS_SET_EDGGAP_4 ) as RPS_SET_EDGGAP_4, 
sum(RPS_SET_EDGGAP_5 ) as RPS_SET_EDGGAP_5, 
sum(RPS_SET_EDGGAP_6 ) as RPS_SET_EDGGAP_6, 
sum(RPS_SET_EDGGAP_7 ) as RPS_SET_EDGGAP_7, 
sum(RPS_SET_EDGGAP_8 ) as RPS_SET_EDGGAP_8, 
sum(RPS_SET_EDGGAP_9 ) as RPS_SET_EDGGAP_9, 
sum(RPS_SET_EDGGAP_10 ) as RPS_SET_EDGGAP_10, 
sum(RPS_SET_EDGGAP_11 ) as RPS_SET_EDGGAP_11, 
sum(RPS_SET_EDGGAP_12 ) as RPS_SET_EDGGAP_12, 
sum(RPS_SET_EDGGAP_13 ) as RPS_SET_EDGGAP_13, 
sum(RPS_SET_EDGGAP_14 ) as RPS_SET_EDGGAP_14, 
sum(RPS_SET_EDGGAP_15 ) as RPS_SET_EDGGAP_15, 
sum(RPS_SET_EDGGAP_16 ) as RPS_SET_EDGGAP_16, 
sum(RPS_REAL_EDGGAP_1 ) as RPS_REAL_EDGGAP_1, 
sum(RPS_REAL_EDGGAP_2 ) as RPS_REAL_EDGGAP_2, 
sum(RPS_REAL_EDGGAP_3 ) as RPS_REAL_EDGGAP_3, 
sum(RPS_REAL_EDGGAP_4 ) as RPS_REAL_EDGGAP_4, 
sum(RPS_REAL_EDGGAP_5 ) as RPS_REAL_EDGGAP_5, 
sum(RPS_REAL_EDGGAP_6 ) as RPS_REAL_EDGGAP_6, 
sum(RPS_REAL_EDGGAP_7 ) as RPS_REAL_EDGGAP_7, 
sum(RPS_REAL_EDGGAP_8 ) as RPS_REAL_EDGGAP_8, 
sum(RPS_REAL_EDGGAP_9 ) as RPS_REAL_EDGGAP_9, 
sum(RPS_REAL_EDGGAP_10 ) as RPS_REAL_EDGGAP_10, 
sum(RPS_REAL_EDGGAP_11 ) as RPS_REAL_EDGGAP_11, 
sum(RPS_REAL_EDGGAP_12 ) as RPS_REAL_EDGGAP_12, 
sum(RPS_REAL_EDGGAP_13 ) as RPS_REAL_EDGGAP_13, 
sum(RPS_REAL_EDGGAP_14 ) as RPS_REAL_EDGGAP_14, 
sum(RPS_REAL_EDGGAP_15 ) as RPS_REAL_EDGGAP_15, 
sum(RPS_REAL_EDGGAP_16 ) as RPS_REAL_EDGGAP_16, 
sum(RPS_DIFF_EDEGAP_1 ) as RPS_DIFF_EDEGAP_1, 
sum(RPS_DIFF_EDEGAP_2 ) as RPS_DIFF_EDEGAP_2, 
sum(RPS_DIFF_EDEGAP_3 ) as RPS_DIFF_EDEGAP_3, 
sum(RPS_DIFF_EDEGAP_4 ) as RPS_DIFF_EDEGAP_4, 
sum(RPS_DIFF_EDEGAP_5 ) as RPS_DIFF_EDEGAP_5, 
sum(RPS_DIFF_EDEGAP_6 ) as RPS_DIFF_EDEGAP_6, 
sum(RPS_DIFF_EDEGAP_7 ) as RPS_DIFF_EDEGAP_7, 
sum(RPS_DIFF_EDEGAP_8 ) as RPS_DIFF_EDEGAP_8, 
sum(RPS_DIFF_EDEGAP_9 ) as RPS_DIFF_EDEGAP_9, 
sum(RPS_DIFF_EDEGAP_10 ) as RPS_DIFF_EDEGAP_10, 
sum(RPS_DIFF_EDEGAP_11 ) as RPS_DIFF_EDEGAP_11, 
sum(RPS_DIFF_EDEGAP_12 ) as RPS_DIFF_EDEGAP_12, 
sum(RPS_DIFF_EDEGAP_13 ) as RPS_DIFF_EDEGAP_13, 
sum(RPS_DIFF_EDEGAP_14 ) as RPS_DIFF_EDEGAP_14, 
sum(RPS_DIFF_EDEGAP_15 ) as RPS_DIFF_EDEGAP_15, 
sum(RPS_DIFF_EDEGAP_16 ) as RPS_DIFF_EDEGAP_16, 
sum(RPS_RM_IND_SPEED_1 ) as RPS_RM_IND_SPEED_1, 
sum(RPS_RM_IND_SPEED_2 ) as RPS_RM_IND_SPEED_2, 
sum(RPS_RM_IND_SPEED_3 ) as RPS_RM_IND_SPEED_3, 
sum(RPS_RM_IND_SPEED_4 ) as RPS_RM_IND_SPEED_4, 
sum(RPS_RM_IND_SPEED_5 ) as RPS_RM_IND_SPEED_5, 
sum(RPS_RM_IND_SPEED_6 ) as RPS_RM_IND_SPEED_6, 
sum(RPS_RM_IND_SPEED_7 ) as RPS_RM_IND_SPEED_7, 
sum(RPS_RM_IND_SPEED_8 ) as RPS_RM_IND_SPEED_8, 
sum(RPS_RM_IND_SPEED_9 ) as RPS_RM_IND_SPEED_9, 
sum(RPS_RM_IND_SPEED_10 ) as RPS_RM_IND_SPEED_10, 
sum(RPS_RM_IND_SPEED_11 ) as RPS_RM_IND_SPEED_11, 
sum(RPS_RM_IND_SPEED_12 ) as RPS_RM_IND_SPEED_12, 
sum(RPS_RM_IND_SPEED_13 ) as RPS_RM_IND_SPEED_13, 
sum(RPS_RM_IND_SPEED_14 ) as RPS_RM_IND_SPEED_14, 
sum(RPS_RM_IND_SPEED_15 ) as RPS_RM_IND_SPEED_15, 
sum(RPS_RM_IND_SPEED_16 ) as RPS_RM_IND_SPEED_16, 
sum(RPS_RM_ACT_SPEED_1 ) as RPS_RM_ACT_SPEED_1, 
sum(RPS_RM_ACT_SPEED_2 ) as RPS_RM_ACT_SPEED_2, 
sum(RPS_RM_ACT_SPEED_3 ) as RPS_RM_ACT_SPEED_3, 
sum(RPS_RM_ACT_SPEED_4 ) as RPS_RM_ACT_SPEED_4, 
sum(RPS_RM_ACT_SPEED_5 ) as RPS_RM_ACT_SPEED_5, 
sum(RPS_RM_ACT_SPEED_6 ) as RPS_RM_ACT_SPEED_6, 
sum(RPS_RM_ACT_SPEED_7 ) as RPS_RM_ACT_SPEED_7, 
sum(RPS_RM_ACT_SPEED_8 ) as RPS_RM_ACT_SPEED_8, 
sum(RPS_RM_ACT_SPEED_9 ) as RPS_RM_ACT_SPEED_9, 
sum(RPS_RM_ACT_SPEED_10 ) as RPS_RM_ACT_SPEED_10, 
sum(RPS_RM_ACT_SPEED_11 ) as RPS_RM_ACT_SPEED_11, 
sum(RPS_RM_ACT_SPEED_12 ) as RPS_RM_ACT_SPEED_12, 
sum(RPS_RM_ACT_SPEED_13 ) as RPS_RM_ACT_SPEED_13, 
sum(RPS_RM_ACT_SPEED_14 ) as RPS_RM_ACT_SPEED_14, 
sum(RPS_RM_ACT_SPEED_15 ) as RPS_RM_ACT_SPEED_15, 
sum(RPS_RM_ACT_SPEED_16 ) as RPS_RM_ACT_SPEED_16
 from 
	( select 
	t2.*, 
case when mod(row_num, 16 ) = 1 then SET_ROLLGAP end as RPS_SET_ROLLGAP_1, 
case when mod(row_num, 16 ) = 2 then SET_ROLLGAP end as RPS_SET_ROLLGAP_2, 
case when mod(row_num, 16 ) = 3 then SET_ROLLGAP end as RPS_SET_ROLLGAP_3, 
case when mod(row_num, 16 ) = 4 then SET_ROLLGAP end as RPS_SET_ROLLGAP_4, 
case when mod(row_num, 16 ) = 5 then SET_ROLLGAP end as RPS_SET_ROLLGAP_5, 
case when mod(row_num, 16 ) = 6 then SET_ROLLGAP end as RPS_SET_ROLLGAP_6, 
case when mod(row_num, 16 ) = 7 then SET_ROLLGAP end as RPS_SET_ROLLGAP_7, 
case when mod(row_num, 16 ) = 8 then SET_ROLLGAP end as RPS_SET_ROLLGAP_8, 
case when mod(row_num, 16 ) = 9 then SET_ROLLGAP end as RPS_SET_ROLLGAP_9, 
case when mod(row_num, 16 ) = 10 then SET_ROLLGAP end as RPS_SET_ROLLGAP_10, 
case when mod(row_num, 16 ) = 11 then SET_ROLLGAP end as RPS_SET_ROLLGAP_11, 
case when mod(row_num, 16 ) = 12 then SET_ROLLGAP end as RPS_SET_ROLLGAP_12, 
case when mod(row_num, 16 ) = 13 then SET_ROLLGAP end as RPS_SET_ROLLGAP_13, 
case when mod(row_num, 16 ) = 14 then SET_ROLLGAP end as RPS_SET_ROLLGAP_14, 
case when mod(row_num, 16 ) = 15 then SET_ROLLGAP end as RPS_SET_ROLLGAP_15, 
case when mod(row_num, 16 ) = 0 then SET_ROLLGAP end as RPS_SET_ROLLGAP_16, 
case when mod(row_num, 16 ) = 1 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_1, 
case when mod(row_num, 16 ) = 2 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_2, 
case when mod(row_num, 16 ) = 3 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_3, 
case when mod(row_num, 16 ) = 4 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_4, 
case when mod(row_num, 16 ) = 5 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_5, 
case when mod(row_num, 16 ) = 6 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_6, 
case when mod(row_num, 16 ) = 7 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_7, 
case when mod(row_num, 16 ) = 8 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_8, 
case when mod(row_num, 16 ) = 9 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_9, 
case when mod(row_num, 16 ) = 10 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_10, 
case when mod(row_num, 16 ) = 11 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_11, 
case when mod(row_num, 16 ) = 12 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_12, 
case when mod(row_num, 16 ) = 13 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_13, 
case when mod(row_num, 16 ) = 14 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_14, 
case when mod(row_num, 16 ) = 15 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_15, 
case when mod(row_num, 16 ) = 0 then REAL_ROLLGAP end as RPS_REAL_ROLLGAP_16, 
case when mod(row_num, 16 ) = 1 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_1, 
case when mod(row_num, 16 ) = 2 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_2, 
case when mod(row_num, 16 ) = 3 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_3, 
case when mod(row_num, 16 ) = 4 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_4, 
case when mod(row_num, 16 ) = 5 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_5, 
case when mod(row_num, 16 ) = 6 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_6, 
case when mod(row_num, 16 ) = 7 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_7, 
case when mod(row_num, 16 ) = 8 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_8, 
case when mod(row_num, 16 ) = 9 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_9, 
case when mod(row_num, 16 ) = 10 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_10, 
case when mod(row_num, 16 ) = 11 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_11, 
case when mod(row_num, 16 ) = 12 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_12, 
case when mod(row_num, 16 ) = 13 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_13, 
case when mod(row_num, 16 ) = 14 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_14, 
case when mod(row_num, 16 ) = 15 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_15, 
case when mod(row_num, 16 ) = 0 then DIFF_ROLLGAP end as RPS_DIFF_ROLLGAP_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_WK end as RPS_RM_PRE_WK_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_WK end as RPS_RM_PRE_WK_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_WK end as RPS_RM_PRE_WK_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_WK end as RPS_RM_PRE_WK_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_WK end as RPS_RM_PRE_WK_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_WK end as RPS_RM_PRE_WK_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_WK end as RPS_RM_PRE_WK_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_WK end as RPS_RM_PRE_WK_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_WK end as RPS_RM_PRE_WK_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_WK end as RPS_RM_PRE_WK_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_WK end as RPS_RM_PRE_WK_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_WK end as RPS_RM_PRE_WK_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_WK end as RPS_RM_PRE_WK_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_WK end as RPS_RM_PRE_WK_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_WK end as RPS_RM_PRE_WK_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_WK end as RPS_RM_PRE_WK_16, 
case when mod(row_num, 16 ) = 1 then RM_ACT_WK end as RPS_RM_ACT_WK_1, 
case when mod(row_num, 16 ) = 2 then RM_ACT_WK end as RPS_RM_ACT_WK_2, 
case when mod(row_num, 16 ) = 3 then RM_ACT_WK end as RPS_RM_ACT_WK_3, 
case when mod(row_num, 16 ) = 4 then RM_ACT_WK end as RPS_RM_ACT_WK_4, 
case when mod(row_num, 16 ) = 5 then RM_ACT_WK end as RPS_RM_ACT_WK_5, 
case when mod(row_num, 16 ) = 6 then RM_ACT_WK end as RPS_RM_ACT_WK_6, 
case when mod(row_num, 16 ) = 7 then RM_ACT_WK end as RPS_RM_ACT_WK_7, 
case when mod(row_num, 16 ) = 8 then RM_ACT_WK end as RPS_RM_ACT_WK_8, 
case when mod(row_num, 16 ) = 9 then RM_ACT_WK end as RPS_RM_ACT_WK_9, 
case when mod(row_num, 16 ) = 10 then RM_ACT_WK end as RPS_RM_ACT_WK_10, 
case when mod(row_num, 16 ) = 11 then RM_ACT_WK end as RPS_RM_ACT_WK_11, 
case when mod(row_num, 16 ) = 12 then RM_ACT_WK end as RPS_RM_ACT_WK_12, 
case when mod(row_num, 16 ) = 13 then RM_ACT_WK end as RPS_RM_ACT_WK_13, 
case when mod(row_num, 16 ) = 14 then RM_ACT_WK end as RPS_RM_ACT_WK_14, 
case when mod(row_num, 16 ) = 15 then RM_ACT_WK end as RPS_RM_ACT_WK_15, 
case when mod(row_num, 16 ) = 0 then RM_ACT_WK end as RPS_RM_ACT_WK_16, 
case when mod(row_num, 16 ) = 1 then RM_KWK end as RPS_RM_KWK_1, 
case when mod(row_num, 16 ) = 2 then RM_KWK end as RPS_RM_KWK_2, 
case when mod(row_num, 16 ) = 3 then RM_KWK end as RPS_RM_KWK_3, 
case when mod(row_num, 16 ) = 4 then RM_KWK end as RPS_RM_KWK_4, 
case when mod(row_num, 16 ) = 5 then RM_KWK end as RPS_RM_KWK_5, 
case when mod(row_num, 16 ) = 6 then RM_KWK end as RPS_RM_KWK_6, 
case when mod(row_num, 16 ) = 7 then RM_KWK end as RPS_RM_KWK_7, 
case when mod(row_num, 16 ) = 8 then RM_KWK end as RPS_RM_KWK_8, 
case when mod(row_num, 16 ) = 9 then RM_KWK end as RPS_RM_KWK_9, 
case when mod(row_num, 16 ) = 10 then RM_KWK end as RPS_RM_KWK_10, 
case when mod(row_num, 16 ) = 11 then RM_KWK end as RPS_RM_KWK_11, 
case when mod(row_num, 16 ) = 12 then RM_KWK end as RPS_RM_KWK_12, 
case when mod(row_num, 16 ) = 13 then RM_KWK end as RPS_RM_KWK_13, 
case when mod(row_num, 16 ) = 14 then RM_KWK end as RPS_RM_KWK_14, 
case when mod(row_num, 16 ) = 15 then RM_KWK end as RPS_RM_KWK_15, 
case when mod(row_num, 16 ) = 0 then RM_KWK end as RPS_RM_KWK_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_WM end as RPS_RM_PRE_WM_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_WM end as RPS_RM_PRE_WM_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_WM end as RPS_RM_PRE_WM_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_WM end as RPS_RM_PRE_WM_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_WM end as RPS_RM_PRE_WM_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_WM end as RPS_RM_PRE_WM_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_WM end as RPS_RM_PRE_WM_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_WM end as RPS_RM_PRE_WM_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_WM end as RPS_RM_PRE_WM_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_WM end as RPS_RM_PRE_WM_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_WM end as RPS_RM_PRE_WM_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_WM end as RPS_RM_PRE_WM_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_WM end as RPS_RM_PRE_WM_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_WM end as RPS_RM_PRE_WM_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_WM end as RPS_RM_PRE_WM_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_WM end as RPS_RM_PRE_WM_16, 
case when mod(row_num, 16 ) = 1 then RM_ACT_WM end as RPS_RM_ACT_WM_1, 
case when mod(row_num, 16 ) = 2 then RM_ACT_WM end as RPS_RM_ACT_WM_2, 
case when mod(row_num, 16 ) = 3 then RM_ACT_WM end as RPS_RM_ACT_WM_3, 
case when mod(row_num, 16 ) = 4 then RM_ACT_WM end as RPS_RM_ACT_WM_4, 
case when mod(row_num, 16 ) = 5 then RM_ACT_WM end as RPS_RM_ACT_WM_5, 
case when mod(row_num, 16 ) = 6 then RM_ACT_WM end as RPS_RM_ACT_WM_6, 
case when mod(row_num, 16 ) = 7 then RM_ACT_WM end as RPS_RM_ACT_WM_7, 
case when mod(row_num, 16 ) = 8 then RM_ACT_WM end as RPS_RM_ACT_WM_8, 
case when mod(row_num, 16 ) = 9 then RM_ACT_WM end as RPS_RM_ACT_WM_9, 
case when mod(row_num, 16 ) = 10 then RM_ACT_WM end as RPS_RM_ACT_WM_10, 
case when mod(row_num, 16 ) = 11 then RM_ACT_WM end as RPS_RM_ACT_WM_11, 
case when mod(row_num, 16 ) = 12 then RM_ACT_WM end as RPS_RM_ACT_WM_12, 
case when mod(row_num, 16 ) = 13 then RM_ACT_WM end as RPS_RM_ACT_WM_13, 
case when mod(row_num, 16 ) = 14 then RM_ACT_WM end as RPS_RM_ACT_WM_14, 
case when mod(row_num, 16 ) = 15 then RM_ACT_WM end as RPS_RM_ACT_WM_15, 
case when mod(row_num, 16 ) = 0 then RM_ACT_WM end as RPS_RM_ACT_WM_16, 
case when mod(row_num, 16 ) = 1 then RM_KWM end as RPS_RM_KWM_1, 
case when mod(row_num, 16 ) = 2 then RM_KWM end as RPS_RM_KWM_2, 
case when mod(row_num, 16 ) = 3 then RM_KWM end as RPS_RM_KWM_3, 
case when mod(row_num, 16 ) = 4 then RM_KWM end as RPS_RM_KWM_4, 
case when mod(row_num, 16 ) = 5 then RM_KWM end as RPS_RM_KWM_5, 
case when mod(row_num, 16 ) = 6 then RM_KWM end as RPS_RM_KWM_6, 
case when mod(row_num, 16 ) = 7 then RM_KWM end as RPS_RM_KWM_7, 
case when mod(row_num, 16 ) = 8 then RM_KWM end as RPS_RM_KWM_8, 
case when mod(row_num, 16 ) = 9 then RM_KWM end as RPS_RM_KWM_9, 
case when mod(row_num, 16 ) = 10 then RM_KWM end as RPS_RM_KWM_10, 
case when mod(row_num, 16 ) = 11 then RM_KWM end as RPS_RM_KWM_11, 
case when mod(row_num, 16 ) = 12 then RM_KWM end as RPS_RM_KWM_12, 
case when mod(row_num, 16 ) = 13 then RM_KWM end as RPS_RM_KWM_13, 
case when mod(row_num, 16 ) = 14 then RM_KWM end as RPS_RM_KWM_14, 
case when mod(row_num, 16 ) = 15 then RM_KWM end as RPS_RM_KWM_15, 
case when mod(row_num, 16 ) = 0 then RM_KWM end as RPS_RM_KWM_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_THICK end as RPS_RM_PRE_THICK_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_THICK end as RPS_RM_PRE_THICK_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_THICK end as RPS_RM_PRE_THICK_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_THICK end as RPS_RM_PRE_THICK_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_THICK end as RPS_RM_PRE_THICK_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_THICK end as RPS_RM_PRE_THICK_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_THICK end as RPS_RM_PRE_THICK_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_THICK end as RPS_RM_PRE_THICK_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_THICK end as RPS_RM_PRE_THICK_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_THICK end as RPS_RM_PRE_THICK_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_THICK end as RPS_RM_PRE_THICK_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_THICK end as RPS_RM_PRE_THICK_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_THICK end as RPS_RM_PRE_THICK_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_THICK end as RPS_RM_PRE_THICK_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_THICK end as RPS_RM_PRE_THICK_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_THICK end as RPS_RM_PRE_THICK_16, 
case when mod(row_num, 16 ) = 1 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_1, 
case when mod(row_num, 16 ) = 2 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_2, 
case when mod(row_num, 16 ) = 3 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_3, 
case when mod(row_num, 16 ) = 4 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_4, 
case when mod(row_num, 16 ) = 5 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_5, 
case when mod(row_num, 16 ) = 6 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_6, 
case when mod(row_num, 16 ) = 7 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_7, 
case when mod(row_num, 16 ) = 8 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_8, 
case when mod(row_num, 16 ) = 9 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_9, 
case when mod(row_num, 16 ) = 10 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_10, 
case when mod(row_num, 16 ) = 11 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_11, 
case when mod(row_num, 16 ) = 12 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_12, 
case when mod(row_num, 16 ) = 13 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_13, 
case when mod(row_num, 16 ) = 14 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_14, 
case when mod(row_num, 16 ) = 15 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_15, 
case when mod(row_num, 16 ) = 0 then RM_Delivery_THICK end as RPS_RM_Delivery_THICK_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_WIDTH end as RPS_RM_PRE_WIDTH_16, 
case when mod(row_num, 16 ) = 1 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_1, 
case when mod(row_num, 16 ) = 2 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_2, 
case when mod(row_num, 16 ) = 3 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_3, 
case when mod(row_num, 16 ) = 4 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_4, 
case when mod(row_num, 16 ) = 5 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_5, 
case when mod(row_num, 16 ) = 6 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_6, 
case when mod(row_num, 16 ) = 7 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_7, 
case when mod(row_num, 16 ) = 8 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_8, 
case when mod(row_num, 16 ) = 9 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_9, 
case when mod(row_num, 16 ) = 10 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_10, 
case when mod(row_num, 16 ) = 11 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_11, 
case when mod(row_num, 16 ) = 12 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_12, 
case when mod(row_num, 16 ) = 13 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_13, 
case when mod(row_num, 16 ) = 14 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_14, 
case when mod(row_num, 16 ) = 15 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_15, 
case when mod(row_num, 16 ) = 0 then RM_REC_WIDTH end as RPS_RM_REC_WIDTH_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_LENGTH end as RPS_RM_PRE_LENGTH_16, 
case when mod(row_num, 16 ) = 1 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_1, 
case when mod(row_num, 16 ) = 2 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_2, 
case when mod(row_num, 16 ) = 3 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_3, 
case when mod(row_num, 16 ) = 4 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_4, 
case when mod(row_num, 16 ) = 5 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_5, 
case when mod(row_num, 16 ) = 6 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_6, 
case when mod(row_num, 16 ) = 7 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_7, 
case when mod(row_num, 16 ) = 8 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_8, 
case when mod(row_num, 16 ) = 9 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_9, 
case when mod(row_num, 16 ) = 10 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_10, 
case when mod(row_num, 16 ) = 11 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_11, 
case when mod(row_num, 16 ) = 12 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_12, 
case when mod(row_num, 16 ) = 13 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_13, 
case when mod(row_num, 16 ) = 14 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_14, 
case when mod(row_num, 16 ) = 15 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_15, 
case when mod(row_num, 16 ) = 0 then RM_REC_LENGTH end as RPS_RM_REC_LENGTH_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_TEMP end as RPS_RM_PRE_TEMP_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_REDUCTION end as RPS_RM_PRE_REDUCTION_16, 
case when mod(row_num, 16 ) = 1 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_1, 
case when mod(row_num, 16 ) = 2 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_2, 
case when mod(row_num, 16 ) = 3 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_3, 
case when mod(row_num, 16 ) = 4 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_4, 
case when mod(row_num, 16 ) = 5 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_5, 
case when mod(row_num, 16 ) = 6 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_6, 
case when mod(row_num, 16 ) = 7 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_7, 
case when mod(row_num, 16 ) = 8 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_8, 
case when mod(row_num, 16 ) = 9 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_9, 
case when mod(row_num, 16 ) = 10 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_10, 
case when mod(row_num, 16 ) = 11 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_11, 
case when mod(row_num, 16 ) = 12 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_12, 
case when mod(row_num, 16 ) = 13 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_13, 
case when mod(row_num, 16 ) = 14 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_14, 
case when mod(row_num, 16 ) = 15 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_15, 
case when mod(row_num, 16 ) = 0 then RM_REC_REDUCTION end as RPS_RM_REC_REDUCTION_16, 
case when mod(row_num, 16 ) = 1 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_1, 
case when mod(row_num, 16 ) = 2 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_2, 
case when mod(row_num, 16 ) = 3 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_3, 
case when mod(row_num, 16 ) = 4 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_4, 
case when mod(row_num, 16 ) = 5 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_5, 
case when mod(row_num, 16 ) = 6 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_6, 
case when mod(row_num, 16 ) = 7 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_7, 
case when mod(row_num, 16 ) = 8 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_8, 
case when mod(row_num, 16 ) = 9 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_9, 
case when mod(row_num, 16 ) = 10 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_10, 
case when mod(row_num, 16 ) = 11 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_11, 
case when mod(row_num, 16 ) = 12 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_12, 
case when mod(row_num, 16 ) = 13 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_13, 
case when mod(row_num, 16 ) = 14 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_14, 
case when mod(row_num, 16 ) = 15 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_15, 
case when mod(row_num, 16 ) = 0 then RM_PRE_REL_REDUCTION end as RPS_RM_PRE_REL_REDUCTION_16, 
case when mod(row_num, 16 ) = 1 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_1, 
case when mod(row_num, 16 ) = 2 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_2, 
case when mod(row_num, 16 ) = 3 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_3, 
case when mod(row_num, 16 ) = 4 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_4, 
case when mod(row_num, 16 ) = 5 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_5, 
case when mod(row_num, 16 ) = 6 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_6, 
case when mod(row_num, 16 ) = 7 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_7, 
case when mod(row_num, 16 ) = 8 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_8, 
case when mod(row_num, 16 ) = 9 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_9, 
case when mod(row_num, 16 ) = 10 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_10, 
case when mod(row_num, 16 ) = 11 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_11, 
case when mod(row_num, 16 ) = 12 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_12, 
case when mod(row_num, 16 ) = 13 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_13, 
case when mod(row_num, 16 ) = 14 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_14, 
case when mod(row_num, 16 ) = 15 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_15, 
case when mod(row_num, 16 ) = 0 then RM_REC_REL_REDUCTION end as RPS_RM_REC_REL_REDUCTION_16, 
case when mod(row_num, 16 ) = 1 then SET_EDGGAP end as RPS_SET_EDGGAP_1, 
case when mod(row_num, 16 ) = 2 then SET_EDGGAP end as RPS_SET_EDGGAP_2, 
case when mod(row_num, 16 ) = 3 then SET_EDGGAP end as RPS_SET_EDGGAP_3, 
case when mod(row_num, 16 ) = 4 then SET_EDGGAP end as RPS_SET_EDGGAP_4, 
case when mod(row_num, 16 ) = 5 then SET_EDGGAP end as RPS_SET_EDGGAP_5, 
case when mod(row_num, 16 ) = 6 then SET_EDGGAP end as RPS_SET_EDGGAP_6, 
case when mod(row_num, 16 ) = 7 then SET_EDGGAP end as RPS_SET_EDGGAP_7, 
case when mod(row_num, 16 ) = 8 then SET_EDGGAP end as RPS_SET_EDGGAP_8, 
case when mod(row_num, 16 ) = 9 then SET_EDGGAP end as RPS_SET_EDGGAP_9, 
case when mod(row_num, 16 ) = 10 then SET_EDGGAP end as RPS_SET_EDGGAP_10, 
case when mod(row_num, 16 ) = 11 then SET_EDGGAP end as RPS_SET_EDGGAP_11, 
case when mod(row_num, 16 ) = 12 then SET_EDGGAP end as RPS_SET_EDGGAP_12, 
case when mod(row_num, 16 ) = 13 then SET_EDGGAP end as RPS_SET_EDGGAP_13, 
case when mod(row_num, 16 ) = 14 then SET_EDGGAP end as RPS_SET_EDGGAP_14, 
case when mod(row_num, 16 ) = 15 then SET_EDGGAP end as RPS_SET_EDGGAP_15, 
case when mod(row_num, 16 ) = 0 then SET_EDGGAP end as RPS_SET_EDGGAP_16, 
case when mod(row_num, 16 ) = 1 then REAL_EDGGAP end as RPS_REAL_EDGGAP_1, 
case when mod(row_num, 16 ) = 2 then REAL_EDGGAP end as RPS_REAL_EDGGAP_2, 
case when mod(row_num, 16 ) = 3 then REAL_EDGGAP end as RPS_REAL_EDGGAP_3, 
case when mod(row_num, 16 ) = 4 then REAL_EDGGAP end as RPS_REAL_EDGGAP_4, 
case when mod(row_num, 16 ) = 5 then REAL_EDGGAP end as RPS_REAL_EDGGAP_5, 
case when mod(row_num, 16 ) = 6 then REAL_EDGGAP end as RPS_REAL_EDGGAP_6, 
case when mod(row_num, 16 ) = 7 then REAL_EDGGAP end as RPS_REAL_EDGGAP_7, 
case when mod(row_num, 16 ) = 8 then REAL_EDGGAP end as RPS_REAL_EDGGAP_8, 
case when mod(row_num, 16 ) = 9 then REAL_EDGGAP end as RPS_REAL_EDGGAP_9, 
case when mod(row_num, 16 ) = 10 then REAL_EDGGAP end as RPS_REAL_EDGGAP_10, 
case when mod(row_num, 16 ) = 11 then REAL_EDGGAP end as RPS_REAL_EDGGAP_11, 
case when mod(row_num, 16 ) = 12 then REAL_EDGGAP end as RPS_REAL_EDGGAP_12, 
case when mod(row_num, 16 ) = 13 then REAL_EDGGAP end as RPS_REAL_EDGGAP_13, 
case when mod(row_num, 16 ) = 14 then REAL_EDGGAP end as RPS_REAL_EDGGAP_14, 
case when mod(row_num, 16 ) = 15 then REAL_EDGGAP end as RPS_REAL_EDGGAP_15, 
case when mod(row_num, 16 ) = 0 then REAL_EDGGAP end as RPS_REAL_EDGGAP_16, 
case when mod(row_num, 16 ) = 1 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_1, 
case when mod(row_num, 16 ) = 2 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_2, 
case when mod(row_num, 16 ) = 3 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_3, 
case when mod(row_num, 16 ) = 4 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_4, 
case when mod(row_num, 16 ) = 5 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_5, 
case when mod(row_num, 16 ) = 6 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_6, 
case when mod(row_num, 16 ) = 7 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_7, 
case when mod(row_num, 16 ) = 8 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_8, 
case when mod(row_num, 16 ) = 9 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_9, 
case when mod(row_num, 16 ) = 10 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_10, 
case when mod(row_num, 16 ) = 11 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_11, 
case when mod(row_num, 16 ) = 12 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_12, 
case when mod(row_num, 16 ) = 13 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_13, 
case when mod(row_num, 16 ) = 14 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_14, 
case when mod(row_num, 16 ) = 15 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_15, 
case when mod(row_num, 16 ) = 0 then DIFF_EDEGAP end as RPS_DIFF_EDEGAP_16, 
case when mod(row_num, 16 ) = 1 then RM_IND_SPEED end as RPS_RM_IND_SPEED_1, 
case when mod(row_num, 16 ) = 2 then RM_IND_SPEED end as RPS_RM_IND_SPEED_2, 
case when mod(row_num, 16 ) = 3 then RM_IND_SPEED end as RPS_RM_IND_SPEED_3, 
case when mod(row_num, 16 ) = 4 then RM_IND_SPEED end as RPS_RM_IND_SPEED_4, 
case when mod(row_num, 16 ) = 5 then RM_IND_SPEED end as RPS_RM_IND_SPEED_5, 
case when mod(row_num, 16 ) = 6 then RM_IND_SPEED end as RPS_RM_IND_SPEED_6, 
case when mod(row_num, 16 ) = 7 then RM_IND_SPEED end as RPS_RM_IND_SPEED_7, 
case when mod(row_num, 16 ) = 8 then RM_IND_SPEED end as RPS_RM_IND_SPEED_8, 
case when mod(row_num, 16 ) = 9 then RM_IND_SPEED end as RPS_RM_IND_SPEED_9, 
case when mod(row_num, 16 ) = 10 then RM_IND_SPEED end as RPS_RM_IND_SPEED_10, 
case when mod(row_num, 16 ) = 11 then RM_IND_SPEED end as RPS_RM_IND_SPEED_11, 
case when mod(row_num, 16 ) = 12 then RM_IND_SPEED end as RPS_RM_IND_SPEED_12, 
case when mod(row_num, 16 ) = 13 then RM_IND_SPEED end as RPS_RM_IND_SPEED_13, 
case when mod(row_num, 16 ) = 14 then RM_IND_SPEED end as RPS_RM_IND_SPEED_14, 
case when mod(row_num, 16 ) = 15 then RM_IND_SPEED end as RPS_RM_IND_SPEED_15, 
case when mod(row_num, 16 ) = 0 then RM_IND_SPEED end as RPS_RM_IND_SPEED_16, 
case when mod(row_num, 16 ) = 1 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_1, 
case when mod(row_num, 16 ) = 2 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_2, 
case when mod(row_num, 16 ) = 3 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_3, 
case when mod(row_num, 16 ) = 4 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_4, 
case when mod(row_num, 16 ) = 5 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_5, 
case when mod(row_num, 16 ) = 6 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_6, 
case when mod(row_num, 16 ) = 7 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_7, 
case when mod(row_num, 16 ) = 8 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_8, 
case when mod(row_num, 16 ) = 9 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_9, 
case when mod(row_num, 16 ) = 10 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_10, 
case when mod(row_num, 16 ) = 11 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_11, 
case when mod(row_num, 16 ) = 12 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_12, 
case when mod(row_num, 16 ) = 13 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_13, 
case when mod(row_num, 16 ) = 14 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_14, 
case when mod(row_num, 16 ) = 15 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_15, 
case when mod(row_num, 16 ) = 0 then RM_ACT_SPEED end as RPS_RM_ACT_SPEED_16, 
case when row_num / 16 > 1 then FLOOR ((row_num -1) / 16 ) end as flag_for_windows 
from ( 
select t.*, 
( case SLAB_NO when @curtype then @curRow := @curRow + 1 
else @curRow := 1 and @curType := SLAB_NO end 
) + 1 as row_num 
from rm_pass t, 
(select @curRow := 0, @curType := '') r 
order BY SLAB_NO asc 
) t2 
) t1 
group by flag_for_windows, SLAB_NO 
 ) rm_pass,  ( select 
SLAB_NO, 
sum(FPS_SET_ROLLGAP_1 ) as FPS_SET_ROLLGAP_1, 
sum(FPS_SET_ROLLGAP_2 ) as FPS_SET_ROLLGAP_2, 
sum(FPS_SET_ROLLGAP_3 ) as FPS_SET_ROLLGAP_3, 
sum(FPS_SET_ROLLGAP_4 ) as FPS_SET_ROLLGAP_4, 
sum(FPS_SET_ROLLGAP_5 ) as FPS_SET_ROLLGAP_5, 
sum(FPS_SET_ROLLGAP_6 ) as FPS_SET_ROLLGAP_6, 
sum(FPS_SET_ROLLGAP_7 ) as FPS_SET_ROLLGAP_7, 
sum(FPS_SET_ROLLGAP_8 ) as FPS_SET_ROLLGAP_8, 
sum(FPS_SET_ROLLGAP_9 ) as FPS_SET_ROLLGAP_9, 
sum(FPS_SET_ROLLGAP_10 ) as FPS_SET_ROLLGAP_10, 
sum(FPS_SET_ROLLGAP_11 ) as FPS_SET_ROLLGAP_11, 
sum(FPS_SET_ROLLGAP_12 ) as FPS_SET_ROLLGAP_12, 
sum(FPS_SET_ROLLGAP_13 ) as FPS_SET_ROLLGAP_13, 
sum(FPS_SET_ROLLGAP_14 ) as FPS_SET_ROLLGAP_14, 
sum(FPS_SET_ROLLGAP_15 ) as FPS_SET_ROLLGAP_15, 
sum(FPS_SET_ROLLGAP_16 ) as FPS_SET_ROLLGAP_16, 
sum(FPS_SET_ROLLGAP_17 ) as FPS_SET_ROLLGAP_17, 
sum(FPS_SET_ROLLGAP_18 ) as FPS_SET_ROLLGAP_18, 
sum(FPS_SET_ROLLGAP_19 ) as FPS_SET_ROLLGAP_19, 
sum(FPS_SET_ROLLGAP_20 ) as FPS_SET_ROLLGAP_20, 
sum(FPS_SET_ROLLGAP_21 ) as FPS_SET_ROLLGAP_21, 
sum(FPS_SET_ROLLGAP_22 ) as FPS_SET_ROLLGAP_22, 
sum(FPS_REAL_ROLLGAP_1 ) as FPS_REAL_ROLLGAP_1, 
sum(FPS_REAL_ROLLGAP_2 ) as FPS_REAL_ROLLGAP_2, 
sum(FPS_REAL_ROLLGAP_3 ) as FPS_REAL_ROLLGAP_3, 
sum(FPS_REAL_ROLLGAP_4 ) as FPS_REAL_ROLLGAP_4, 
sum(FPS_REAL_ROLLGAP_5 ) as FPS_REAL_ROLLGAP_5, 
sum(FPS_REAL_ROLLGAP_6 ) as FPS_REAL_ROLLGAP_6, 
sum(FPS_REAL_ROLLGAP_7 ) as FPS_REAL_ROLLGAP_7, 
sum(FPS_REAL_ROLLGAP_8 ) as FPS_REAL_ROLLGAP_8, 
sum(FPS_REAL_ROLLGAP_9 ) as FPS_REAL_ROLLGAP_9, 
sum(FPS_REAL_ROLLGAP_10 ) as FPS_REAL_ROLLGAP_10, 
sum(FPS_REAL_ROLLGAP_11 ) as FPS_REAL_ROLLGAP_11, 
sum(FPS_REAL_ROLLGAP_12 ) as FPS_REAL_ROLLGAP_12, 
sum(FPS_REAL_ROLLGAP_13 ) as FPS_REAL_ROLLGAP_13, 
sum(FPS_REAL_ROLLGAP_14 ) as FPS_REAL_ROLLGAP_14, 
sum(FPS_REAL_ROLLGAP_15 ) as FPS_REAL_ROLLGAP_15, 
sum(FPS_REAL_ROLLGAP_16 ) as FPS_REAL_ROLLGAP_16, 
sum(FPS_REAL_ROLLGAP_17 ) as FPS_REAL_ROLLGAP_17, 
sum(FPS_REAL_ROLLGAP_18 ) as FPS_REAL_ROLLGAP_18, 
sum(FPS_REAL_ROLLGAP_19 ) as FPS_REAL_ROLLGAP_19, 
sum(FPS_REAL_ROLLGAP_20 ) as FPS_REAL_ROLLGAP_20, 
sum(FPS_REAL_ROLLGAP_21 ) as FPS_REAL_ROLLGAP_21, 
sum(FPS_REAL_ROLLGAP_22 ) as FPS_REAL_ROLLGAP_22, 
sum(FPS_DIFF_ROLLGAP_1 ) as FPS_DIFF_ROLLGAP_1, 
sum(FPS_DIFF_ROLLGAP_2 ) as FPS_DIFF_ROLLGAP_2, 
sum(FPS_DIFF_ROLLGAP_3 ) as FPS_DIFF_ROLLGAP_3, 
sum(FPS_DIFF_ROLLGAP_4 ) as FPS_DIFF_ROLLGAP_4, 
sum(FPS_DIFF_ROLLGAP_5 ) as FPS_DIFF_ROLLGAP_5, 
sum(FPS_DIFF_ROLLGAP_6 ) as FPS_DIFF_ROLLGAP_6, 
sum(FPS_DIFF_ROLLGAP_7 ) as FPS_DIFF_ROLLGAP_7, 
sum(FPS_DIFF_ROLLGAP_8 ) as FPS_DIFF_ROLLGAP_8, 
sum(FPS_DIFF_ROLLGAP_9 ) as FPS_DIFF_ROLLGAP_9, 
sum(FPS_DIFF_ROLLGAP_10 ) as FPS_DIFF_ROLLGAP_10, 
sum(FPS_DIFF_ROLLGAP_11 ) as FPS_DIFF_ROLLGAP_11, 
sum(FPS_DIFF_ROLLGAP_12 ) as FPS_DIFF_ROLLGAP_12, 
sum(FPS_DIFF_ROLLGAP_13 ) as FPS_DIFF_ROLLGAP_13, 
sum(FPS_DIFF_ROLLGAP_14 ) as FPS_DIFF_ROLLGAP_14, 
sum(FPS_DIFF_ROLLGAP_15 ) as FPS_DIFF_ROLLGAP_15, 
sum(FPS_DIFF_ROLLGAP_16 ) as FPS_DIFF_ROLLGAP_16, 
sum(FPS_DIFF_ROLLGAP_17 ) as FPS_DIFF_ROLLGAP_17, 
sum(FPS_DIFF_ROLLGAP_18 ) as FPS_DIFF_ROLLGAP_18, 
sum(FPS_DIFF_ROLLGAP_19 ) as FPS_DIFF_ROLLGAP_19, 
sum(FPS_DIFF_ROLLGAP_20 ) as FPS_DIFF_ROLLGAP_20, 
sum(FPS_DIFF_ROLLGAP_21 ) as FPS_DIFF_ROLLGAP_21, 
sum(FPS_DIFF_ROLLGAP_22 ) as FPS_DIFF_ROLLGAP_22, 
sum(FPS_FM_PRE_WK_1 ) as FPS_FM_PRE_WK_1, 
sum(FPS_FM_PRE_WK_2 ) as FPS_FM_PRE_WK_2, 
sum(FPS_FM_PRE_WK_3 ) as FPS_FM_PRE_WK_3, 
sum(FPS_FM_PRE_WK_4 ) as FPS_FM_PRE_WK_4, 
sum(FPS_FM_PRE_WK_5 ) as FPS_FM_PRE_WK_5, 
sum(FPS_FM_PRE_WK_6 ) as FPS_FM_PRE_WK_6, 
sum(FPS_FM_PRE_WK_7 ) as FPS_FM_PRE_WK_7, 
sum(FPS_FM_PRE_WK_8 ) as FPS_FM_PRE_WK_8, 
sum(FPS_FM_PRE_WK_9 ) as FPS_FM_PRE_WK_9, 
sum(FPS_FM_PRE_WK_10 ) as FPS_FM_PRE_WK_10, 
sum(FPS_FM_PRE_WK_11 ) as FPS_FM_PRE_WK_11, 
sum(FPS_FM_PRE_WK_12 ) as FPS_FM_PRE_WK_12, 
sum(FPS_FM_PRE_WK_13 ) as FPS_FM_PRE_WK_13, 
sum(FPS_FM_PRE_WK_14 ) as FPS_FM_PRE_WK_14, 
sum(FPS_FM_PRE_WK_15 ) as FPS_FM_PRE_WK_15, 
sum(FPS_FM_PRE_WK_16 ) as FPS_FM_PRE_WK_16, 
sum(FPS_FM_PRE_WK_17 ) as FPS_FM_PRE_WK_17, 
sum(FPS_FM_PRE_WK_18 ) as FPS_FM_PRE_WK_18, 
sum(FPS_FM_PRE_WK_19 ) as FPS_FM_PRE_WK_19, 
sum(FPS_FM_PRE_WK_20 ) as FPS_FM_PRE_WK_20, 
sum(FPS_FM_PRE_WK_21 ) as FPS_FM_PRE_WK_21, 
sum(FPS_FM_PRE_WK_22 ) as FPS_FM_PRE_WK_22, 
sum(FPS_FM_ACT_WK_1 ) as FPS_FM_ACT_WK_1, 
sum(FPS_FM_ACT_WK_2 ) as FPS_FM_ACT_WK_2, 
sum(FPS_FM_ACT_WK_3 ) as FPS_FM_ACT_WK_3, 
sum(FPS_FM_ACT_WK_4 ) as FPS_FM_ACT_WK_4, 
sum(FPS_FM_ACT_WK_5 ) as FPS_FM_ACT_WK_5, 
sum(FPS_FM_ACT_WK_6 ) as FPS_FM_ACT_WK_6, 
sum(FPS_FM_ACT_WK_7 ) as FPS_FM_ACT_WK_7, 
sum(FPS_FM_ACT_WK_8 ) as FPS_FM_ACT_WK_8, 
sum(FPS_FM_ACT_WK_9 ) as FPS_FM_ACT_WK_9, 
sum(FPS_FM_ACT_WK_10 ) as FPS_FM_ACT_WK_10, 
sum(FPS_FM_ACT_WK_11 ) as FPS_FM_ACT_WK_11, 
sum(FPS_FM_ACT_WK_12 ) as FPS_FM_ACT_WK_12, 
sum(FPS_FM_ACT_WK_13 ) as FPS_FM_ACT_WK_13, 
sum(FPS_FM_ACT_WK_14 ) as FPS_FM_ACT_WK_14, 
sum(FPS_FM_ACT_WK_15 ) as FPS_FM_ACT_WK_15, 
sum(FPS_FM_ACT_WK_16 ) as FPS_FM_ACT_WK_16, 
sum(FPS_FM_ACT_WK_17 ) as FPS_FM_ACT_WK_17, 
sum(FPS_FM_ACT_WK_18 ) as FPS_FM_ACT_WK_18, 
sum(FPS_FM_ACT_WK_19 ) as FPS_FM_ACT_WK_19, 
sum(FPS_FM_ACT_WK_20 ) as FPS_FM_ACT_WK_20, 
sum(FPS_FM_ACT_WK_21 ) as FPS_FM_ACT_WK_21, 
sum(FPS_FM_ACT_WK_22 ) as FPS_FM_ACT_WK_22, 
sum(FPS_FM_KWK_1 ) as FPS_FM_KWK_1, 
sum(FPS_FM_KWK_2 ) as FPS_FM_KWK_2, 
sum(FPS_FM_KWK_3 ) as FPS_FM_KWK_3, 
sum(FPS_FM_KWK_4 ) as FPS_FM_KWK_4, 
sum(FPS_FM_KWK_5 ) as FPS_FM_KWK_5, 
sum(FPS_FM_KWK_6 ) as FPS_FM_KWK_6, 
sum(FPS_FM_KWK_7 ) as FPS_FM_KWK_7, 
sum(FPS_FM_KWK_8 ) as FPS_FM_KWK_8, 
sum(FPS_FM_KWK_9 ) as FPS_FM_KWK_9, 
sum(FPS_FM_KWK_10 ) as FPS_FM_KWK_10, 
sum(FPS_FM_KWK_11 ) as FPS_FM_KWK_11, 
sum(FPS_FM_KWK_12 ) as FPS_FM_KWK_12, 
sum(FPS_FM_KWK_13 ) as FPS_FM_KWK_13, 
sum(FPS_FM_KWK_14 ) as FPS_FM_KWK_14, 
sum(FPS_FM_KWK_15 ) as FPS_FM_KWK_15, 
sum(FPS_FM_KWK_16 ) as FPS_FM_KWK_16, 
sum(FPS_FM_KWK_17 ) as FPS_FM_KWK_17, 
sum(FPS_FM_KWK_18 ) as FPS_FM_KWK_18, 
sum(FPS_FM_KWK_19 ) as FPS_FM_KWK_19, 
sum(FPS_FM_KWK_20 ) as FPS_FM_KWK_20, 
sum(FPS_FM_KWK_21 ) as FPS_FM_KWK_21, 
sum(FPS_FM_KWK_22 ) as FPS_FM_KWK_22, 
sum(FPS_FM_PRE_WM_1 ) as FPS_FM_PRE_WM_1, 
sum(FPS_FM_PRE_WM_2 ) as FPS_FM_PRE_WM_2, 
sum(FPS_FM_PRE_WM_3 ) as FPS_FM_PRE_WM_3, 
sum(FPS_FM_PRE_WM_4 ) as FPS_FM_PRE_WM_4, 
sum(FPS_FM_PRE_WM_5 ) as FPS_FM_PRE_WM_5, 
sum(FPS_FM_PRE_WM_6 ) as FPS_FM_PRE_WM_6, 
sum(FPS_FM_PRE_WM_7 ) as FPS_FM_PRE_WM_7, 
sum(FPS_FM_PRE_WM_8 ) as FPS_FM_PRE_WM_8, 
sum(FPS_FM_PRE_WM_9 ) as FPS_FM_PRE_WM_9, 
sum(FPS_FM_PRE_WM_10 ) as FPS_FM_PRE_WM_10, 
sum(FPS_FM_PRE_WM_11 ) as FPS_FM_PRE_WM_11, 
sum(FPS_FM_PRE_WM_12 ) as FPS_FM_PRE_WM_12, 
sum(FPS_FM_PRE_WM_13 ) as FPS_FM_PRE_WM_13, 
sum(FPS_FM_PRE_WM_14 ) as FPS_FM_PRE_WM_14, 
sum(FPS_FM_PRE_WM_15 ) as FPS_FM_PRE_WM_15, 
sum(FPS_FM_PRE_WM_16 ) as FPS_FM_PRE_WM_16, 
sum(FPS_FM_PRE_WM_17 ) as FPS_FM_PRE_WM_17, 
sum(FPS_FM_PRE_WM_18 ) as FPS_FM_PRE_WM_18, 
sum(FPS_FM_PRE_WM_19 ) as FPS_FM_PRE_WM_19, 
sum(FPS_FM_PRE_WM_20 ) as FPS_FM_PRE_WM_20, 
sum(FPS_FM_PRE_WM_21 ) as FPS_FM_PRE_WM_21, 
sum(FPS_FM_PRE_WM_22 ) as FPS_FM_PRE_WM_22, 
sum(FPS_FM_ACT_WM_1 ) as FPS_FM_ACT_WM_1, 
sum(FPS_FM_ACT_WM_2 ) as FPS_FM_ACT_WM_2, 
sum(FPS_FM_ACT_WM_3 ) as FPS_FM_ACT_WM_3, 
sum(FPS_FM_ACT_WM_4 ) as FPS_FM_ACT_WM_4, 
sum(FPS_FM_ACT_WM_5 ) as FPS_FM_ACT_WM_5, 
sum(FPS_FM_ACT_WM_6 ) as FPS_FM_ACT_WM_6, 
sum(FPS_FM_ACT_WM_7 ) as FPS_FM_ACT_WM_7, 
sum(FPS_FM_ACT_WM_8 ) as FPS_FM_ACT_WM_8, 
sum(FPS_FM_ACT_WM_9 ) as FPS_FM_ACT_WM_9, 
sum(FPS_FM_ACT_WM_10 ) as FPS_FM_ACT_WM_10, 
sum(FPS_FM_ACT_WM_11 ) as FPS_FM_ACT_WM_11, 
sum(FPS_FM_ACT_WM_12 ) as FPS_FM_ACT_WM_12, 
sum(FPS_FM_ACT_WM_13 ) as FPS_FM_ACT_WM_13, 
sum(FPS_FM_ACT_WM_14 ) as FPS_FM_ACT_WM_14, 
sum(FPS_FM_ACT_WM_15 ) as FPS_FM_ACT_WM_15, 
sum(FPS_FM_ACT_WM_16 ) as FPS_FM_ACT_WM_16, 
sum(FPS_FM_ACT_WM_17 ) as FPS_FM_ACT_WM_17, 
sum(FPS_FM_ACT_WM_18 ) as FPS_FM_ACT_WM_18, 
sum(FPS_FM_ACT_WM_19 ) as FPS_FM_ACT_WM_19, 
sum(FPS_FM_ACT_WM_20 ) as FPS_FM_ACT_WM_20, 
sum(FPS_FM_ACT_WM_21 ) as FPS_FM_ACT_WM_21, 
sum(FPS_FM_ACT_WM_22 ) as FPS_FM_ACT_WM_22, 
sum(FPS_FM_KWM_1 ) as FPS_FM_KWM_1, 
sum(FPS_FM_KWM_2 ) as FPS_FM_KWM_2, 
sum(FPS_FM_KWM_3 ) as FPS_FM_KWM_3, 
sum(FPS_FM_KWM_4 ) as FPS_FM_KWM_4, 
sum(FPS_FM_KWM_5 ) as FPS_FM_KWM_5, 
sum(FPS_FM_KWM_6 ) as FPS_FM_KWM_6, 
sum(FPS_FM_KWM_7 ) as FPS_FM_KWM_7, 
sum(FPS_FM_KWM_8 ) as FPS_FM_KWM_8, 
sum(FPS_FM_KWM_9 ) as FPS_FM_KWM_9, 
sum(FPS_FM_KWM_10 ) as FPS_FM_KWM_10, 
sum(FPS_FM_KWM_11 ) as FPS_FM_KWM_11, 
sum(FPS_FM_KWM_12 ) as FPS_FM_KWM_12, 
sum(FPS_FM_KWM_13 ) as FPS_FM_KWM_13, 
sum(FPS_FM_KWM_14 ) as FPS_FM_KWM_14, 
sum(FPS_FM_KWM_15 ) as FPS_FM_KWM_15, 
sum(FPS_FM_KWM_16 ) as FPS_FM_KWM_16, 
sum(FPS_FM_KWM_17 ) as FPS_FM_KWM_17, 
sum(FPS_FM_KWM_18 ) as FPS_FM_KWM_18, 
sum(FPS_FM_KWM_19 ) as FPS_FM_KWM_19, 
sum(FPS_FM_KWM_20 ) as FPS_FM_KWM_20, 
sum(FPS_FM_KWM_21 ) as FPS_FM_KWM_21, 
sum(FPS_FM_KWM_22 ) as FPS_FM_KWM_22, 
sum(FPS_FM_PRE_MAH_1 ) as FPS_FM_PRE_MAH_1, 
sum(FPS_FM_PRE_MAH_2 ) as FPS_FM_PRE_MAH_2, 
sum(FPS_FM_PRE_MAH_3 ) as FPS_FM_PRE_MAH_3, 
sum(FPS_FM_PRE_MAH_4 ) as FPS_FM_PRE_MAH_4, 
sum(FPS_FM_PRE_MAH_5 ) as FPS_FM_PRE_MAH_5, 
sum(FPS_FM_PRE_MAH_6 ) as FPS_FM_PRE_MAH_6, 
sum(FPS_FM_PRE_MAH_7 ) as FPS_FM_PRE_MAH_7, 
sum(FPS_FM_PRE_MAH_8 ) as FPS_FM_PRE_MAH_8, 
sum(FPS_FM_PRE_MAH_9 ) as FPS_FM_PRE_MAH_9, 
sum(FPS_FM_PRE_MAH_10 ) as FPS_FM_PRE_MAH_10, 
sum(FPS_FM_PRE_MAH_11 ) as FPS_FM_PRE_MAH_11, 
sum(FPS_FM_PRE_MAH_12 ) as FPS_FM_PRE_MAH_12, 
sum(FPS_FM_PRE_MAH_13 ) as FPS_FM_PRE_MAH_13, 
sum(FPS_FM_PRE_MAH_14 ) as FPS_FM_PRE_MAH_14, 
sum(FPS_FM_PRE_MAH_15 ) as FPS_FM_PRE_MAH_15, 
sum(FPS_FM_PRE_MAH_16 ) as FPS_FM_PRE_MAH_16, 
sum(FPS_FM_PRE_MAH_17 ) as FPS_FM_PRE_MAH_17, 
sum(FPS_FM_PRE_MAH_18 ) as FPS_FM_PRE_MAH_18, 
sum(FPS_FM_PRE_MAH_19 ) as FPS_FM_PRE_MAH_19, 
sum(FPS_FM_PRE_MAH_20 ) as FPS_FM_PRE_MAH_20, 
sum(FPS_FM_PRE_MAH_21 ) as FPS_FM_PRE_MAH_21, 
sum(FPS_FM_PRE_MAH_22 ) as FPS_FM_PRE_MAH_22, 
sum(FPS_FM_REC_MAH_1 ) as FPS_FM_REC_MAH_1, 
sum(FPS_FM_REC_MAH_2 ) as FPS_FM_REC_MAH_2, 
sum(FPS_FM_REC_MAH_3 ) as FPS_FM_REC_MAH_3, 
sum(FPS_FM_REC_MAH_4 ) as FPS_FM_REC_MAH_4, 
sum(FPS_FM_REC_MAH_5 ) as FPS_FM_REC_MAH_5, 
sum(FPS_FM_REC_MAH_6 ) as FPS_FM_REC_MAH_6, 
sum(FPS_FM_REC_MAH_7 ) as FPS_FM_REC_MAH_7, 
sum(FPS_FM_REC_MAH_8 ) as FPS_FM_REC_MAH_8, 
sum(FPS_FM_REC_MAH_9 ) as FPS_FM_REC_MAH_9, 
sum(FPS_FM_REC_MAH_10 ) as FPS_FM_REC_MAH_10, 
sum(FPS_FM_REC_MAH_11 ) as FPS_FM_REC_MAH_11, 
sum(FPS_FM_REC_MAH_12 ) as FPS_FM_REC_MAH_12, 
sum(FPS_FM_REC_MAH_13 ) as FPS_FM_REC_MAH_13, 
sum(FPS_FM_REC_MAH_14 ) as FPS_FM_REC_MAH_14, 
sum(FPS_FM_REC_MAH_15 ) as FPS_FM_REC_MAH_15, 
sum(FPS_FM_REC_MAH_16 ) as FPS_FM_REC_MAH_16, 
sum(FPS_FM_REC_MAH_17 ) as FPS_FM_REC_MAH_17, 
sum(FPS_FM_REC_MAH_18 ) as FPS_FM_REC_MAH_18, 
sum(FPS_FM_REC_MAH_19 ) as FPS_FM_REC_MAH_19, 
sum(FPS_FM_REC_MAH_20 ) as FPS_FM_REC_MAH_20, 
sum(FPS_FM_REC_MAH_21 ) as FPS_FM_REC_MAH_21, 
sum(FPS_FM_REC_MAH_22 ) as FPS_FM_REC_MAH_22, 
sum(FPS_FM_RKT_1 ) as FPS_FM_RKT_1, 
sum(FPS_FM_RKT_2 ) as FPS_FM_RKT_2, 
sum(FPS_FM_RKT_3 ) as FPS_FM_RKT_3, 
sum(FPS_FM_RKT_4 ) as FPS_FM_RKT_4, 
sum(FPS_FM_RKT_5 ) as FPS_FM_RKT_5, 
sum(FPS_FM_RKT_6 ) as FPS_FM_RKT_6, 
sum(FPS_FM_RKT_7 ) as FPS_FM_RKT_7, 
sum(FPS_FM_RKT_8 ) as FPS_FM_RKT_8, 
sum(FPS_FM_RKT_9 ) as FPS_FM_RKT_9, 
sum(FPS_FM_RKT_10 ) as FPS_FM_RKT_10, 
sum(FPS_FM_RKT_11 ) as FPS_FM_RKT_11, 
sum(FPS_FM_RKT_12 ) as FPS_FM_RKT_12, 
sum(FPS_FM_RKT_13 ) as FPS_FM_RKT_13, 
sum(FPS_FM_RKT_14 ) as FPS_FM_RKT_14, 
sum(FPS_FM_RKT_15 ) as FPS_FM_RKT_15, 
sum(FPS_FM_RKT_16 ) as FPS_FM_RKT_16, 
sum(FPS_FM_RKT_17 ) as FPS_FM_RKT_17, 
sum(FPS_FM_RKT_18 ) as FPS_FM_RKT_18, 
sum(FPS_FM_RKT_19 ) as FPS_FM_RKT_19, 
sum(FPS_FM_RKT_20 ) as FPS_FM_RKT_20, 
sum(FPS_FM_RKT_21 ) as FPS_FM_RKT_21, 
sum(FPS_FM_RKT_22 ) as FPS_FM_RKT_22, 
sum(FPS_FM_PRE_THICK_1 ) as FPS_FM_PRE_THICK_1, 
sum(FPS_FM_PRE_THICK_2 ) as FPS_FM_PRE_THICK_2, 
sum(FPS_FM_PRE_THICK_3 ) as FPS_FM_PRE_THICK_3, 
sum(FPS_FM_PRE_THICK_4 ) as FPS_FM_PRE_THICK_4, 
sum(FPS_FM_PRE_THICK_5 ) as FPS_FM_PRE_THICK_5, 
sum(FPS_FM_PRE_THICK_6 ) as FPS_FM_PRE_THICK_6, 
sum(FPS_FM_PRE_THICK_7 ) as FPS_FM_PRE_THICK_7, 
sum(FPS_FM_PRE_THICK_8 ) as FPS_FM_PRE_THICK_8, 
sum(FPS_FM_PRE_THICK_9 ) as FPS_FM_PRE_THICK_9, 
sum(FPS_FM_PRE_THICK_10 ) as FPS_FM_PRE_THICK_10, 
sum(FPS_FM_PRE_THICK_11 ) as FPS_FM_PRE_THICK_11, 
sum(FPS_FM_PRE_THICK_12 ) as FPS_FM_PRE_THICK_12, 
sum(FPS_FM_PRE_THICK_13 ) as FPS_FM_PRE_THICK_13, 
sum(FPS_FM_PRE_THICK_14 ) as FPS_FM_PRE_THICK_14, 
sum(FPS_FM_PRE_THICK_15 ) as FPS_FM_PRE_THICK_15, 
sum(FPS_FM_PRE_THICK_16 ) as FPS_FM_PRE_THICK_16, 
sum(FPS_FM_PRE_THICK_17 ) as FPS_FM_PRE_THICK_17, 
sum(FPS_FM_PRE_THICK_18 ) as FPS_FM_PRE_THICK_18, 
sum(FPS_FM_PRE_THICK_19 ) as FPS_FM_PRE_THICK_19, 
sum(FPS_FM_PRE_THICK_20 ) as FPS_FM_PRE_THICK_20, 
sum(FPS_FM_PRE_THICK_21 ) as FPS_FM_PRE_THICK_21, 
sum(FPS_FM_PRE_THICK_22 ) as FPS_FM_PRE_THICK_22, 
sum(FPS_FM_Delivery_THICK_1 ) as FPS_FM_Delivery_THICK_1, 
sum(FPS_FM_Delivery_THICK_2 ) as FPS_FM_Delivery_THICK_2, 
sum(FPS_FM_Delivery_THICK_3 ) as FPS_FM_Delivery_THICK_3, 
sum(FPS_FM_Delivery_THICK_4 ) as FPS_FM_Delivery_THICK_4, 
sum(FPS_FM_Delivery_THICK_5 ) as FPS_FM_Delivery_THICK_5, 
sum(FPS_FM_Delivery_THICK_6 ) as FPS_FM_Delivery_THICK_6, 
sum(FPS_FM_Delivery_THICK_7 ) as FPS_FM_Delivery_THICK_7, 
sum(FPS_FM_Delivery_THICK_8 ) as FPS_FM_Delivery_THICK_8, 
sum(FPS_FM_Delivery_THICK_9 ) as FPS_FM_Delivery_THICK_9, 
sum(FPS_FM_Delivery_THICK_10 ) as FPS_FM_Delivery_THICK_10, 
sum(FPS_FM_Delivery_THICK_11 ) as FPS_FM_Delivery_THICK_11, 
sum(FPS_FM_Delivery_THICK_12 ) as FPS_FM_Delivery_THICK_12, 
sum(FPS_FM_Delivery_THICK_13 ) as FPS_FM_Delivery_THICK_13, 
sum(FPS_FM_Delivery_THICK_14 ) as FPS_FM_Delivery_THICK_14, 
sum(FPS_FM_Delivery_THICK_15 ) as FPS_FM_Delivery_THICK_15, 
sum(FPS_FM_Delivery_THICK_16 ) as FPS_FM_Delivery_THICK_16, 
sum(FPS_FM_Delivery_THICK_17 ) as FPS_FM_Delivery_THICK_17, 
sum(FPS_FM_Delivery_THICK_18 ) as FPS_FM_Delivery_THICK_18, 
sum(FPS_FM_Delivery_THICK_19 ) as FPS_FM_Delivery_THICK_19, 
sum(FPS_FM_Delivery_THICK_20 ) as FPS_FM_Delivery_THICK_20, 
sum(FPS_FM_Delivery_THICK_21 ) as FPS_FM_Delivery_THICK_21, 
sum(FPS_FM_Delivery_THICK_22 ) as FPS_FM_Delivery_THICK_22, 
sum(FPS_FM_PRE_WIDTH_1 ) as FPS_FM_PRE_WIDTH_1, 
sum(FPS_FM_PRE_WIDTH_2 ) as FPS_FM_PRE_WIDTH_2, 
sum(FPS_FM_PRE_WIDTH_3 ) as FPS_FM_PRE_WIDTH_3, 
sum(FPS_FM_PRE_WIDTH_4 ) as FPS_FM_PRE_WIDTH_4, 
sum(FPS_FM_PRE_WIDTH_5 ) as FPS_FM_PRE_WIDTH_5, 
sum(FPS_FM_PRE_WIDTH_6 ) as FPS_FM_PRE_WIDTH_6, 
sum(FPS_FM_PRE_WIDTH_7 ) as FPS_FM_PRE_WIDTH_7, 
sum(FPS_FM_PRE_WIDTH_8 ) as FPS_FM_PRE_WIDTH_8, 
sum(FPS_FM_PRE_WIDTH_9 ) as FPS_FM_PRE_WIDTH_9, 
sum(FPS_FM_PRE_WIDTH_10 ) as FPS_FM_PRE_WIDTH_10, 
sum(FPS_FM_PRE_WIDTH_11 ) as FPS_FM_PRE_WIDTH_11, 
sum(FPS_FM_PRE_WIDTH_12 ) as FPS_FM_PRE_WIDTH_12, 
sum(FPS_FM_PRE_WIDTH_13 ) as FPS_FM_PRE_WIDTH_13, 
sum(FPS_FM_PRE_WIDTH_14 ) as FPS_FM_PRE_WIDTH_14, 
sum(FPS_FM_PRE_WIDTH_15 ) as FPS_FM_PRE_WIDTH_15, 
sum(FPS_FM_PRE_WIDTH_16 ) as FPS_FM_PRE_WIDTH_16, 
sum(FPS_FM_PRE_WIDTH_17 ) as FPS_FM_PRE_WIDTH_17, 
sum(FPS_FM_PRE_WIDTH_18 ) as FPS_FM_PRE_WIDTH_18, 
sum(FPS_FM_PRE_WIDTH_19 ) as FPS_FM_PRE_WIDTH_19, 
sum(FPS_FM_PRE_WIDTH_20 ) as FPS_FM_PRE_WIDTH_20, 
sum(FPS_FM_PRE_WIDTH_21 ) as FPS_FM_PRE_WIDTH_21, 
sum(FPS_FM_PRE_WIDTH_22 ) as FPS_FM_PRE_WIDTH_22, 
sum(FPS_FM_REC_WIDTH_1 ) as FPS_FM_REC_WIDTH_1, 
sum(FPS_FM_REC_WIDTH_2 ) as FPS_FM_REC_WIDTH_2, 
sum(FPS_FM_REC_WIDTH_3 ) as FPS_FM_REC_WIDTH_3, 
sum(FPS_FM_REC_WIDTH_4 ) as FPS_FM_REC_WIDTH_4, 
sum(FPS_FM_REC_WIDTH_5 ) as FPS_FM_REC_WIDTH_5, 
sum(FPS_FM_REC_WIDTH_6 ) as FPS_FM_REC_WIDTH_6, 
sum(FPS_FM_REC_WIDTH_7 ) as FPS_FM_REC_WIDTH_7, 
sum(FPS_FM_REC_WIDTH_8 ) as FPS_FM_REC_WIDTH_8, 
sum(FPS_FM_REC_WIDTH_9 ) as FPS_FM_REC_WIDTH_9, 
sum(FPS_FM_REC_WIDTH_10 ) as FPS_FM_REC_WIDTH_10, 
sum(FPS_FM_REC_WIDTH_11 ) as FPS_FM_REC_WIDTH_11, 
sum(FPS_FM_REC_WIDTH_12 ) as FPS_FM_REC_WIDTH_12, 
sum(FPS_FM_REC_WIDTH_13 ) as FPS_FM_REC_WIDTH_13, 
sum(FPS_FM_REC_WIDTH_14 ) as FPS_FM_REC_WIDTH_14, 
sum(FPS_FM_REC_WIDTH_15 ) as FPS_FM_REC_WIDTH_15, 
sum(FPS_FM_REC_WIDTH_16 ) as FPS_FM_REC_WIDTH_16, 
sum(FPS_FM_REC_WIDTH_17 ) as FPS_FM_REC_WIDTH_17, 
sum(FPS_FM_REC_WIDTH_18 ) as FPS_FM_REC_WIDTH_18, 
sum(FPS_FM_REC_WIDTH_19 ) as FPS_FM_REC_WIDTH_19, 
sum(FPS_FM_REC_WIDTH_20 ) as FPS_FM_REC_WIDTH_20, 
sum(FPS_FM_REC_WIDTH_21 ) as FPS_FM_REC_WIDTH_21, 
sum(FPS_FM_REC_WIDTH_22 ) as FPS_FM_REC_WIDTH_22, 
sum(FPS_FM_PRE_LENGTH_1 ) as FPS_FM_PRE_LENGTH_1, 
sum(FPS_FM_PRE_LENGTH_2 ) as FPS_FM_PRE_LENGTH_2, 
sum(FPS_FM_PRE_LENGTH_3 ) as FPS_FM_PRE_LENGTH_3, 
sum(FPS_FM_PRE_LENGTH_4 ) as FPS_FM_PRE_LENGTH_4, 
sum(FPS_FM_PRE_LENGTH_5 ) as FPS_FM_PRE_LENGTH_5, 
sum(FPS_FM_PRE_LENGTH_6 ) as FPS_FM_PRE_LENGTH_6, 
sum(FPS_FM_PRE_LENGTH_7 ) as FPS_FM_PRE_LENGTH_7, 
sum(FPS_FM_PRE_LENGTH_8 ) as FPS_FM_PRE_LENGTH_8, 
sum(FPS_FM_PRE_LENGTH_9 ) as FPS_FM_PRE_LENGTH_9, 
sum(FPS_FM_PRE_LENGTH_10 ) as FPS_FM_PRE_LENGTH_10, 
sum(FPS_FM_PRE_LENGTH_11 ) as FPS_FM_PRE_LENGTH_11, 
sum(FPS_FM_PRE_LENGTH_12 ) as FPS_FM_PRE_LENGTH_12, 
sum(FPS_FM_PRE_LENGTH_13 ) as FPS_FM_PRE_LENGTH_13, 
sum(FPS_FM_PRE_LENGTH_14 ) as FPS_FM_PRE_LENGTH_14, 
sum(FPS_FM_PRE_LENGTH_15 ) as FPS_FM_PRE_LENGTH_15, 
sum(FPS_FM_PRE_LENGTH_16 ) as FPS_FM_PRE_LENGTH_16, 
sum(FPS_FM_PRE_LENGTH_17 ) as FPS_FM_PRE_LENGTH_17, 
sum(FPS_FM_PRE_LENGTH_18 ) as FPS_FM_PRE_LENGTH_18, 
sum(FPS_FM_PRE_LENGTH_19 ) as FPS_FM_PRE_LENGTH_19, 
sum(FPS_FM_PRE_LENGTH_20 ) as FPS_FM_PRE_LENGTH_20, 
sum(FPS_FM_PRE_LENGTH_21 ) as FPS_FM_PRE_LENGTH_21, 
sum(FPS_FM_PRE_LENGTH_22 ) as FPS_FM_PRE_LENGTH_22, 
sum(FPS_FM_REC_LENGTH_1 ) as FPS_FM_REC_LENGTH_1, 
sum(FPS_FM_REC_LENGTH_2 ) as FPS_FM_REC_LENGTH_2, 
sum(FPS_FM_REC_LENGTH_3 ) as FPS_FM_REC_LENGTH_3, 
sum(FPS_FM_REC_LENGTH_4 ) as FPS_FM_REC_LENGTH_4, 
sum(FPS_FM_REC_LENGTH_5 ) as FPS_FM_REC_LENGTH_5, 
sum(FPS_FM_REC_LENGTH_6 ) as FPS_FM_REC_LENGTH_6, 
sum(FPS_FM_REC_LENGTH_7 ) as FPS_FM_REC_LENGTH_7, 
sum(FPS_FM_REC_LENGTH_8 ) as FPS_FM_REC_LENGTH_8, 
sum(FPS_FM_REC_LENGTH_9 ) as FPS_FM_REC_LENGTH_9, 
sum(FPS_FM_REC_LENGTH_10 ) as FPS_FM_REC_LENGTH_10, 
sum(FPS_FM_REC_LENGTH_11 ) as FPS_FM_REC_LENGTH_11, 
sum(FPS_FM_REC_LENGTH_12 ) as FPS_FM_REC_LENGTH_12, 
sum(FPS_FM_REC_LENGTH_13 ) as FPS_FM_REC_LENGTH_13, 
sum(FPS_FM_REC_LENGTH_14 ) as FPS_FM_REC_LENGTH_14, 
sum(FPS_FM_REC_LENGTH_15 ) as FPS_FM_REC_LENGTH_15, 
sum(FPS_FM_REC_LENGTH_16 ) as FPS_FM_REC_LENGTH_16, 
sum(FPS_FM_REC_LENGTH_17 ) as FPS_FM_REC_LENGTH_17, 
sum(FPS_FM_REC_LENGTH_18 ) as FPS_FM_REC_LENGTH_18, 
sum(FPS_FM_REC_LENGTH_19 ) as FPS_FM_REC_LENGTH_19, 
sum(FPS_FM_REC_LENGTH_20 ) as FPS_FM_REC_LENGTH_20, 
sum(FPS_FM_REC_LENGTH_21 ) as FPS_FM_REC_LENGTH_21, 
sum(FPS_FM_REC_LENGTH_22 ) as FPS_FM_REC_LENGTH_22, 
sum(FPS_FM_IND_SPEED_1 ) as FPS_FM_IND_SPEED_1, 
sum(FPS_FM_IND_SPEED_2 ) as FPS_FM_IND_SPEED_2, 
sum(FPS_FM_IND_SPEED_3 ) as FPS_FM_IND_SPEED_3, 
sum(FPS_FM_IND_SPEED_4 ) as FPS_FM_IND_SPEED_4, 
sum(FPS_FM_IND_SPEED_5 ) as FPS_FM_IND_SPEED_5, 
sum(FPS_FM_IND_SPEED_6 ) as FPS_FM_IND_SPEED_6, 
sum(FPS_FM_IND_SPEED_7 ) as FPS_FM_IND_SPEED_7, 
sum(FPS_FM_IND_SPEED_8 ) as FPS_FM_IND_SPEED_8, 
sum(FPS_FM_IND_SPEED_9 ) as FPS_FM_IND_SPEED_9, 
sum(FPS_FM_IND_SPEED_10 ) as FPS_FM_IND_SPEED_10, 
sum(FPS_FM_IND_SPEED_11 ) as FPS_FM_IND_SPEED_11, 
sum(FPS_FM_IND_SPEED_12 ) as FPS_FM_IND_SPEED_12, 
sum(FPS_FM_IND_SPEED_13 ) as FPS_FM_IND_SPEED_13, 
sum(FPS_FM_IND_SPEED_14 ) as FPS_FM_IND_SPEED_14, 
sum(FPS_FM_IND_SPEED_15 ) as FPS_FM_IND_SPEED_15, 
sum(FPS_FM_IND_SPEED_16 ) as FPS_FM_IND_SPEED_16, 
sum(FPS_FM_IND_SPEED_17 ) as FPS_FM_IND_SPEED_17, 
sum(FPS_FM_IND_SPEED_18 ) as FPS_FM_IND_SPEED_18, 
sum(FPS_FM_IND_SPEED_19 ) as FPS_FM_IND_SPEED_19, 
sum(FPS_FM_IND_SPEED_20 ) as FPS_FM_IND_SPEED_20, 
sum(FPS_FM_IND_SPEED_21 ) as FPS_FM_IND_SPEED_21, 
sum(FPS_FM_IND_SPEED_22 ) as FPS_FM_IND_SPEED_22, 
sum(FPS_FM_ACT_SPEED_1 ) as FPS_FM_ACT_SPEED_1, 
sum(FPS_FM_ACT_SPEED_2 ) as FPS_FM_ACT_SPEED_2, 
sum(FPS_FM_ACT_SPEED_3 ) as FPS_FM_ACT_SPEED_3, 
sum(FPS_FM_ACT_SPEED_4 ) as FPS_FM_ACT_SPEED_4, 
sum(FPS_FM_ACT_SPEED_5 ) as FPS_FM_ACT_SPEED_5, 
sum(FPS_FM_ACT_SPEED_6 ) as FPS_FM_ACT_SPEED_6, 
sum(FPS_FM_ACT_SPEED_7 ) as FPS_FM_ACT_SPEED_7, 
sum(FPS_FM_ACT_SPEED_8 ) as FPS_FM_ACT_SPEED_8, 
sum(FPS_FM_ACT_SPEED_9 ) as FPS_FM_ACT_SPEED_9, 
sum(FPS_FM_ACT_SPEED_10 ) as FPS_FM_ACT_SPEED_10, 
sum(FPS_FM_ACT_SPEED_11 ) as FPS_FM_ACT_SPEED_11, 
sum(FPS_FM_ACT_SPEED_12 ) as FPS_FM_ACT_SPEED_12, 
sum(FPS_FM_ACT_SPEED_13 ) as FPS_FM_ACT_SPEED_13, 
sum(FPS_FM_ACT_SPEED_14 ) as FPS_FM_ACT_SPEED_14, 
sum(FPS_FM_ACT_SPEED_15 ) as FPS_FM_ACT_SPEED_15, 
sum(FPS_FM_ACT_SPEED_16 ) as FPS_FM_ACT_SPEED_16, 
sum(FPS_FM_ACT_SPEED_17 ) as FPS_FM_ACT_SPEED_17, 
sum(FPS_FM_ACT_SPEED_18 ) as FPS_FM_ACT_SPEED_18, 
sum(FPS_FM_ACT_SPEED_19 ) as FPS_FM_ACT_SPEED_19, 
sum(FPS_FM_ACT_SPEED_20 ) as FPS_FM_ACT_SPEED_20, 
sum(FPS_FM_ACT_SPEED_21 ) as FPS_FM_ACT_SPEED_21, 
sum(FPS_FM_ACT_SPEED_22 ) as FPS_FM_ACT_SPEED_22, 
sum(FPS_FM_PRE_TEMP_1 ) as FPS_FM_PRE_TEMP_1, 
sum(FPS_FM_PRE_TEMP_2 ) as FPS_FM_PRE_TEMP_2, 
sum(FPS_FM_PRE_TEMP_3 ) as FPS_FM_PRE_TEMP_3, 
sum(FPS_FM_PRE_TEMP_4 ) as FPS_FM_PRE_TEMP_4, 
sum(FPS_FM_PRE_TEMP_5 ) as FPS_FM_PRE_TEMP_5, 
sum(FPS_FM_PRE_TEMP_6 ) as FPS_FM_PRE_TEMP_6, 
sum(FPS_FM_PRE_TEMP_7 ) as FPS_FM_PRE_TEMP_7, 
sum(FPS_FM_PRE_TEMP_8 ) as FPS_FM_PRE_TEMP_8, 
sum(FPS_FM_PRE_TEMP_9 ) as FPS_FM_PRE_TEMP_9, 
sum(FPS_FM_PRE_TEMP_10 ) as FPS_FM_PRE_TEMP_10, 
sum(FPS_FM_PRE_TEMP_11 ) as FPS_FM_PRE_TEMP_11, 
sum(FPS_FM_PRE_TEMP_12 ) as FPS_FM_PRE_TEMP_12, 
sum(FPS_FM_PRE_TEMP_13 ) as FPS_FM_PRE_TEMP_13, 
sum(FPS_FM_PRE_TEMP_14 ) as FPS_FM_PRE_TEMP_14, 
sum(FPS_FM_PRE_TEMP_15 ) as FPS_FM_PRE_TEMP_15, 
sum(FPS_FM_PRE_TEMP_16 ) as FPS_FM_PRE_TEMP_16, 
sum(FPS_FM_PRE_TEMP_17 ) as FPS_FM_PRE_TEMP_17, 
sum(FPS_FM_PRE_TEMP_18 ) as FPS_FM_PRE_TEMP_18, 
sum(FPS_FM_PRE_TEMP_19 ) as FPS_FM_PRE_TEMP_19, 
sum(FPS_FM_PRE_TEMP_20 ) as FPS_FM_PRE_TEMP_20, 
sum(FPS_FM_PRE_TEMP_21 ) as FPS_FM_PRE_TEMP_21, 
sum(FPS_FM_PRE_TEMP_22 ) as FPS_FM_PRE_TEMP_22, 
sum(FPS_FM_REC_TEMP_1 ) as FPS_FM_REC_TEMP_1, 
sum(FPS_FM_REC_TEMP_2 ) as FPS_FM_REC_TEMP_2, 
sum(FPS_FM_REC_TEMP_3 ) as FPS_FM_REC_TEMP_3, 
sum(FPS_FM_REC_TEMP_4 ) as FPS_FM_REC_TEMP_4, 
sum(FPS_FM_REC_TEMP_5 ) as FPS_FM_REC_TEMP_5, 
sum(FPS_FM_REC_TEMP_6 ) as FPS_FM_REC_TEMP_6, 
sum(FPS_FM_REC_TEMP_7 ) as FPS_FM_REC_TEMP_7, 
sum(FPS_FM_REC_TEMP_8 ) as FPS_FM_REC_TEMP_8, 
sum(FPS_FM_REC_TEMP_9 ) as FPS_FM_REC_TEMP_9, 
sum(FPS_FM_REC_TEMP_10 ) as FPS_FM_REC_TEMP_10, 
sum(FPS_FM_REC_TEMP_11 ) as FPS_FM_REC_TEMP_11, 
sum(FPS_FM_REC_TEMP_12 ) as FPS_FM_REC_TEMP_12, 
sum(FPS_FM_REC_TEMP_13 ) as FPS_FM_REC_TEMP_13, 
sum(FPS_FM_REC_TEMP_14 ) as FPS_FM_REC_TEMP_14, 
sum(FPS_FM_REC_TEMP_15 ) as FPS_FM_REC_TEMP_15, 
sum(FPS_FM_REC_TEMP_16 ) as FPS_FM_REC_TEMP_16, 
sum(FPS_FM_REC_TEMP_17 ) as FPS_FM_REC_TEMP_17, 
sum(FPS_FM_REC_TEMP_18 ) as FPS_FM_REC_TEMP_18, 
sum(FPS_FM_REC_TEMP_19 ) as FPS_FM_REC_TEMP_19, 
sum(FPS_FM_REC_TEMP_20 ) as FPS_FM_REC_TEMP_20, 
sum(FPS_FM_REC_TEMP_21 ) as FPS_FM_REC_TEMP_21, 
sum(FPS_FM_REC_TEMP_22 ) as FPS_FM_REC_TEMP_22, 
sum(FPS_DIFF_TEMP_1 ) as FPS_DIFF_TEMP_1, 
sum(FPS_DIFF_TEMP_2 ) as FPS_DIFF_TEMP_2, 
sum(FPS_DIFF_TEMP_3 ) as FPS_DIFF_TEMP_3, 
sum(FPS_DIFF_TEMP_4 ) as FPS_DIFF_TEMP_4, 
sum(FPS_DIFF_TEMP_5 ) as FPS_DIFF_TEMP_5, 
sum(FPS_DIFF_TEMP_6 ) as FPS_DIFF_TEMP_6, 
sum(FPS_DIFF_TEMP_7 ) as FPS_DIFF_TEMP_7, 
sum(FPS_DIFF_TEMP_8 ) as FPS_DIFF_TEMP_8, 
sum(FPS_DIFF_TEMP_9 ) as FPS_DIFF_TEMP_9, 
sum(FPS_DIFF_TEMP_10 ) as FPS_DIFF_TEMP_10, 
sum(FPS_DIFF_TEMP_11 ) as FPS_DIFF_TEMP_11, 
sum(FPS_DIFF_TEMP_12 ) as FPS_DIFF_TEMP_12, 
sum(FPS_DIFF_TEMP_13 ) as FPS_DIFF_TEMP_13, 
sum(FPS_DIFF_TEMP_14 ) as FPS_DIFF_TEMP_14, 
sum(FPS_DIFF_TEMP_15 ) as FPS_DIFF_TEMP_15, 
sum(FPS_DIFF_TEMP_16 ) as FPS_DIFF_TEMP_16, 
sum(FPS_DIFF_TEMP_17 ) as FPS_DIFF_TEMP_17, 
sum(FPS_DIFF_TEMP_18 ) as FPS_DIFF_TEMP_18, 
sum(FPS_DIFF_TEMP_19 ) as FPS_DIFF_TEMP_19, 
sum(FPS_DIFF_TEMP_20 ) as FPS_DIFF_TEMP_20, 
sum(FPS_DIFF_TEMP_21 ) as FPS_DIFF_TEMP_21, 
sum(FPS_DIFF_TEMP_22 ) as FPS_DIFF_TEMP_22, 
sum(FPS_FM_PRE_REDUCTION_1 ) as FPS_FM_PRE_REDUCTION_1, 
sum(FPS_FM_PRE_REDUCTION_2 ) as FPS_FM_PRE_REDUCTION_2, 
sum(FPS_FM_PRE_REDUCTION_3 ) as FPS_FM_PRE_REDUCTION_3, 
sum(FPS_FM_PRE_REDUCTION_4 ) as FPS_FM_PRE_REDUCTION_4, 
sum(FPS_FM_PRE_REDUCTION_5 ) as FPS_FM_PRE_REDUCTION_5, 
sum(FPS_FM_PRE_REDUCTION_6 ) as FPS_FM_PRE_REDUCTION_6, 
sum(FPS_FM_PRE_REDUCTION_7 ) as FPS_FM_PRE_REDUCTION_7, 
sum(FPS_FM_PRE_REDUCTION_8 ) as FPS_FM_PRE_REDUCTION_8, 
sum(FPS_FM_PRE_REDUCTION_9 ) as FPS_FM_PRE_REDUCTION_9, 
sum(FPS_FM_PRE_REDUCTION_10 ) as FPS_FM_PRE_REDUCTION_10, 
sum(FPS_FM_PRE_REDUCTION_11 ) as FPS_FM_PRE_REDUCTION_11, 
sum(FPS_FM_PRE_REDUCTION_12 ) as FPS_FM_PRE_REDUCTION_12, 
sum(FPS_FM_PRE_REDUCTION_13 ) as FPS_FM_PRE_REDUCTION_13, 
sum(FPS_FM_PRE_REDUCTION_14 ) as FPS_FM_PRE_REDUCTION_14, 
sum(FPS_FM_PRE_REDUCTION_15 ) as FPS_FM_PRE_REDUCTION_15, 
sum(FPS_FM_PRE_REDUCTION_16 ) as FPS_FM_PRE_REDUCTION_16, 
sum(FPS_FM_PRE_REDUCTION_17 ) as FPS_FM_PRE_REDUCTION_17, 
sum(FPS_FM_PRE_REDUCTION_18 ) as FPS_FM_PRE_REDUCTION_18, 
sum(FPS_FM_PRE_REDUCTION_19 ) as FPS_FM_PRE_REDUCTION_19, 
sum(FPS_FM_PRE_REDUCTION_20 ) as FPS_FM_PRE_REDUCTION_20, 
sum(FPS_FM_PRE_REDUCTION_21 ) as FPS_FM_PRE_REDUCTION_21, 
sum(FPS_FM_PRE_REDUCTION_22 ) as FPS_FM_PRE_REDUCTION_22, 
sum(FPS_FM_REC_REDUCTION_1 ) as FPS_FM_REC_REDUCTION_1, 
sum(FPS_FM_REC_REDUCTION_2 ) as FPS_FM_REC_REDUCTION_2, 
sum(FPS_FM_REC_REDUCTION_3 ) as FPS_FM_REC_REDUCTION_3, 
sum(FPS_FM_REC_REDUCTION_4 ) as FPS_FM_REC_REDUCTION_4, 
sum(FPS_FM_REC_REDUCTION_5 ) as FPS_FM_REC_REDUCTION_5, 
sum(FPS_FM_REC_REDUCTION_6 ) as FPS_FM_REC_REDUCTION_6, 
sum(FPS_FM_REC_REDUCTION_7 ) as FPS_FM_REC_REDUCTION_7, 
sum(FPS_FM_REC_REDUCTION_8 ) as FPS_FM_REC_REDUCTION_8, 
sum(FPS_FM_REC_REDUCTION_9 ) as FPS_FM_REC_REDUCTION_9, 
sum(FPS_FM_REC_REDUCTION_10 ) as FPS_FM_REC_REDUCTION_10, 
sum(FPS_FM_REC_REDUCTION_11 ) as FPS_FM_REC_REDUCTION_11, 
sum(FPS_FM_REC_REDUCTION_12 ) as FPS_FM_REC_REDUCTION_12, 
sum(FPS_FM_REC_REDUCTION_13 ) as FPS_FM_REC_REDUCTION_13, 
sum(FPS_FM_REC_REDUCTION_14 ) as FPS_FM_REC_REDUCTION_14, 
sum(FPS_FM_REC_REDUCTION_15 ) as FPS_FM_REC_REDUCTION_15, 
sum(FPS_FM_REC_REDUCTION_16 ) as FPS_FM_REC_REDUCTION_16, 
sum(FPS_FM_REC_REDUCTION_17 ) as FPS_FM_REC_REDUCTION_17, 
sum(FPS_FM_REC_REDUCTION_18 ) as FPS_FM_REC_REDUCTION_18, 
sum(FPS_FM_REC_REDUCTION_19 ) as FPS_FM_REC_REDUCTION_19, 
sum(FPS_FM_REC_REDUCTION_20 ) as FPS_FM_REC_REDUCTION_20, 
sum(FPS_FM_REC_REDUCTION_21 ) as FPS_FM_REC_REDUCTION_21, 
sum(FPS_FM_REC_REDUCTION_22 ) as FPS_FM_REC_REDUCTION_22, 
sum(FPS_FM_PRE_REL_REDUCTION_1 ) as FPS_FM_PRE_REL_REDUCTION_1, 
sum(FPS_FM_PRE_REL_REDUCTION_2 ) as FPS_FM_PRE_REL_REDUCTION_2, 
sum(FPS_FM_PRE_REL_REDUCTION_3 ) as FPS_FM_PRE_REL_REDUCTION_3, 
sum(FPS_FM_PRE_REL_REDUCTION_4 ) as FPS_FM_PRE_REL_REDUCTION_4, 
sum(FPS_FM_PRE_REL_REDUCTION_5 ) as FPS_FM_PRE_REL_REDUCTION_5, 
sum(FPS_FM_PRE_REL_REDUCTION_6 ) as FPS_FM_PRE_REL_REDUCTION_6, 
sum(FPS_FM_PRE_REL_REDUCTION_7 ) as FPS_FM_PRE_REL_REDUCTION_7, 
sum(FPS_FM_PRE_REL_REDUCTION_8 ) as FPS_FM_PRE_REL_REDUCTION_8, 
sum(FPS_FM_PRE_REL_REDUCTION_9 ) as FPS_FM_PRE_REL_REDUCTION_9, 
sum(FPS_FM_PRE_REL_REDUCTION_10 ) as FPS_FM_PRE_REL_REDUCTION_10, 
sum(FPS_FM_PRE_REL_REDUCTION_11 ) as FPS_FM_PRE_REL_REDUCTION_11, 
sum(FPS_FM_PRE_REL_REDUCTION_12 ) as FPS_FM_PRE_REL_REDUCTION_12, 
sum(FPS_FM_PRE_REL_REDUCTION_13 ) as FPS_FM_PRE_REL_REDUCTION_13, 
sum(FPS_FM_PRE_REL_REDUCTION_14 ) as FPS_FM_PRE_REL_REDUCTION_14, 
sum(FPS_FM_PRE_REL_REDUCTION_15 ) as FPS_FM_PRE_REL_REDUCTION_15, 
sum(FPS_FM_PRE_REL_REDUCTION_16 ) as FPS_FM_PRE_REL_REDUCTION_16, 
sum(FPS_FM_PRE_REL_REDUCTION_17 ) as FPS_FM_PRE_REL_REDUCTION_17, 
sum(FPS_FM_PRE_REL_REDUCTION_18 ) as FPS_FM_PRE_REL_REDUCTION_18, 
sum(FPS_FM_PRE_REL_REDUCTION_19 ) as FPS_FM_PRE_REL_REDUCTION_19, 
sum(FPS_FM_PRE_REL_REDUCTION_20 ) as FPS_FM_PRE_REL_REDUCTION_20, 
sum(FPS_FM_PRE_REL_REDUCTION_21 ) as FPS_FM_PRE_REL_REDUCTION_21, 
sum(FPS_FM_PRE_REL_REDUCTION_22 ) as FPS_FM_PRE_REL_REDUCTION_22, 
sum(FPS_FM_REC_REL_REDUCTION_1 ) as FPS_FM_REC_REL_REDUCTION_1, 
sum(FPS_FM_REC_REL_REDUCTION_2 ) as FPS_FM_REC_REL_REDUCTION_2, 
sum(FPS_FM_REC_REL_REDUCTION_3 ) as FPS_FM_REC_REL_REDUCTION_3, 
sum(FPS_FM_REC_REL_REDUCTION_4 ) as FPS_FM_REC_REL_REDUCTION_4, 
sum(FPS_FM_REC_REL_REDUCTION_5 ) as FPS_FM_REC_REL_REDUCTION_5, 
sum(FPS_FM_REC_REL_REDUCTION_6 ) as FPS_FM_REC_REL_REDUCTION_6, 
sum(FPS_FM_REC_REL_REDUCTION_7 ) as FPS_FM_REC_REL_REDUCTION_7, 
sum(FPS_FM_REC_REL_REDUCTION_8 ) as FPS_FM_REC_REL_REDUCTION_8, 
sum(FPS_FM_REC_REL_REDUCTION_9 ) as FPS_FM_REC_REL_REDUCTION_9, 
sum(FPS_FM_REC_REL_REDUCTION_10 ) as FPS_FM_REC_REL_REDUCTION_10, 
sum(FPS_FM_REC_REL_REDUCTION_11 ) as FPS_FM_REC_REL_REDUCTION_11, 
sum(FPS_FM_REC_REL_REDUCTION_12 ) as FPS_FM_REC_REL_REDUCTION_12, 
sum(FPS_FM_REC_REL_REDUCTION_13 ) as FPS_FM_REC_REL_REDUCTION_13, 
sum(FPS_FM_REC_REL_REDUCTION_14 ) as FPS_FM_REC_REL_REDUCTION_14, 
sum(FPS_FM_REC_REL_REDUCTION_15 ) as FPS_FM_REC_REL_REDUCTION_15, 
sum(FPS_FM_REC_REL_REDUCTION_16 ) as FPS_FM_REC_REL_REDUCTION_16, 
sum(FPS_FM_REC_REL_REDUCTION_17 ) as FPS_FM_REC_REL_REDUCTION_17, 
sum(FPS_FM_REC_REL_REDUCTION_18 ) as FPS_FM_REC_REL_REDUCTION_18, 
sum(FPS_FM_REC_REL_REDUCTION_19 ) as FPS_FM_REC_REL_REDUCTION_19, 
sum(FPS_FM_REC_REL_REDUCTION_20 ) as FPS_FM_REC_REL_REDUCTION_20, 
sum(FPS_FM_REC_REL_REDUCTION_21 ) as FPS_FM_REC_REL_REDUCTION_21, 
sum(FPS_FM_REC_REL_REDUCTION_22 ) as FPS_FM_REC_REL_REDUCTION_22
 from 
	( select 
	t2.*, 
case when mod(row_num, 22 ) = 1 then SET_ROLLGAP end as FPS_SET_ROLLGAP_1, 
case when mod(row_num, 22 ) = 2 then SET_ROLLGAP end as FPS_SET_ROLLGAP_2, 
case when mod(row_num, 22 ) = 3 then SET_ROLLGAP end as FPS_SET_ROLLGAP_3, 
case when mod(row_num, 22 ) = 4 then SET_ROLLGAP end as FPS_SET_ROLLGAP_4, 
case when mod(row_num, 22 ) = 5 then SET_ROLLGAP end as FPS_SET_ROLLGAP_5, 
case when mod(row_num, 22 ) = 6 then SET_ROLLGAP end as FPS_SET_ROLLGAP_6, 
case when mod(row_num, 22 ) = 7 then SET_ROLLGAP end as FPS_SET_ROLLGAP_7, 
case when mod(row_num, 22 ) = 8 then SET_ROLLGAP end as FPS_SET_ROLLGAP_8, 
case when mod(row_num, 22 ) = 9 then SET_ROLLGAP end as FPS_SET_ROLLGAP_9, 
case when mod(row_num, 22 ) = 10 then SET_ROLLGAP end as FPS_SET_ROLLGAP_10, 
case when mod(row_num, 22 ) = 11 then SET_ROLLGAP end as FPS_SET_ROLLGAP_11, 
case when mod(row_num, 22 ) = 12 then SET_ROLLGAP end as FPS_SET_ROLLGAP_12, 
case when mod(row_num, 22 ) = 13 then SET_ROLLGAP end as FPS_SET_ROLLGAP_13, 
case when mod(row_num, 22 ) = 14 then SET_ROLLGAP end as FPS_SET_ROLLGAP_14, 
case when mod(row_num, 22 ) = 15 then SET_ROLLGAP end as FPS_SET_ROLLGAP_15, 
case when mod(row_num, 22 ) = 16 then SET_ROLLGAP end as FPS_SET_ROLLGAP_16, 
case when mod(row_num, 22 ) = 17 then SET_ROLLGAP end as FPS_SET_ROLLGAP_17, 
case when mod(row_num, 22 ) = 18 then SET_ROLLGAP end as FPS_SET_ROLLGAP_18, 
case when mod(row_num, 22 ) = 19 then SET_ROLLGAP end as FPS_SET_ROLLGAP_19, 
case when mod(row_num, 22 ) = 20 then SET_ROLLGAP end as FPS_SET_ROLLGAP_20, 
case when mod(row_num, 22 ) = 21 then SET_ROLLGAP end as FPS_SET_ROLLGAP_21, 
case when mod(row_num, 22 ) = 0 then SET_ROLLGAP end as FPS_SET_ROLLGAP_22, 
case when mod(row_num, 22 ) = 1 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_1, 
case when mod(row_num, 22 ) = 2 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_2, 
case when mod(row_num, 22 ) = 3 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_3, 
case when mod(row_num, 22 ) = 4 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_4, 
case when mod(row_num, 22 ) = 5 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_5, 
case when mod(row_num, 22 ) = 6 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_6, 
case when mod(row_num, 22 ) = 7 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_7, 
case when mod(row_num, 22 ) = 8 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_8, 
case when mod(row_num, 22 ) = 9 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_9, 
case when mod(row_num, 22 ) = 10 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_10, 
case when mod(row_num, 22 ) = 11 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_11, 
case when mod(row_num, 22 ) = 12 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_12, 
case when mod(row_num, 22 ) = 13 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_13, 
case when mod(row_num, 22 ) = 14 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_14, 
case when mod(row_num, 22 ) = 15 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_15, 
case when mod(row_num, 22 ) = 16 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_16, 
case when mod(row_num, 22 ) = 17 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_17, 
case when mod(row_num, 22 ) = 18 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_18, 
case when mod(row_num, 22 ) = 19 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_19, 
case when mod(row_num, 22 ) = 20 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_20, 
case when mod(row_num, 22 ) = 21 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_21, 
case when mod(row_num, 22 ) = 0 then REAL_ROLLGAP end as FPS_REAL_ROLLGAP_22, 
case when mod(row_num, 22 ) = 1 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_1, 
case when mod(row_num, 22 ) = 2 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_2, 
case when mod(row_num, 22 ) = 3 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_3, 
case when mod(row_num, 22 ) = 4 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_4, 
case when mod(row_num, 22 ) = 5 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_5, 
case when mod(row_num, 22 ) = 6 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_6, 
case when mod(row_num, 22 ) = 7 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_7, 
case when mod(row_num, 22 ) = 8 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_8, 
case when mod(row_num, 22 ) = 9 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_9, 
case when mod(row_num, 22 ) = 10 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_10, 
case when mod(row_num, 22 ) = 11 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_11, 
case when mod(row_num, 22 ) = 12 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_12, 
case when mod(row_num, 22 ) = 13 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_13, 
case when mod(row_num, 22 ) = 14 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_14, 
case when mod(row_num, 22 ) = 15 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_15, 
case when mod(row_num, 22 ) = 16 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_16, 
case when mod(row_num, 22 ) = 17 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_17, 
case when mod(row_num, 22 ) = 18 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_18, 
case when mod(row_num, 22 ) = 19 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_19, 
case when mod(row_num, 22 ) = 20 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_20, 
case when mod(row_num, 22 ) = 21 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_21, 
case when mod(row_num, 22 ) = 0 then DIFF_ROLLGAP end as FPS_DIFF_ROLLGAP_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_WK end as FPS_FM_PRE_WK_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_WK end as FPS_FM_PRE_WK_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_WK end as FPS_FM_PRE_WK_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_WK end as FPS_FM_PRE_WK_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_WK end as FPS_FM_PRE_WK_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_WK end as FPS_FM_PRE_WK_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_WK end as FPS_FM_PRE_WK_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_WK end as FPS_FM_PRE_WK_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_WK end as FPS_FM_PRE_WK_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_WK end as FPS_FM_PRE_WK_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_WK end as FPS_FM_PRE_WK_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_WK end as FPS_FM_PRE_WK_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_WK end as FPS_FM_PRE_WK_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_WK end as FPS_FM_PRE_WK_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_WK end as FPS_FM_PRE_WK_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_WK end as FPS_FM_PRE_WK_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_WK end as FPS_FM_PRE_WK_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_WK end as FPS_FM_PRE_WK_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_WK end as FPS_FM_PRE_WK_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_WK end as FPS_FM_PRE_WK_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_WK end as FPS_FM_PRE_WK_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_WK end as FPS_FM_PRE_WK_22, 
case when mod(row_num, 22 ) = 1 then FM_ACT_WK end as FPS_FM_ACT_WK_1, 
case when mod(row_num, 22 ) = 2 then FM_ACT_WK end as FPS_FM_ACT_WK_2, 
case when mod(row_num, 22 ) = 3 then FM_ACT_WK end as FPS_FM_ACT_WK_3, 
case when mod(row_num, 22 ) = 4 then FM_ACT_WK end as FPS_FM_ACT_WK_4, 
case when mod(row_num, 22 ) = 5 then FM_ACT_WK end as FPS_FM_ACT_WK_5, 
case when mod(row_num, 22 ) = 6 then FM_ACT_WK end as FPS_FM_ACT_WK_6, 
case when mod(row_num, 22 ) = 7 then FM_ACT_WK end as FPS_FM_ACT_WK_7, 
case when mod(row_num, 22 ) = 8 then FM_ACT_WK end as FPS_FM_ACT_WK_8, 
case when mod(row_num, 22 ) = 9 then FM_ACT_WK end as FPS_FM_ACT_WK_9, 
case when mod(row_num, 22 ) = 10 then FM_ACT_WK end as FPS_FM_ACT_WK_10, 
case when mod(row_num, 22 ) = 11 then FM_ACT_WK end as FPS_FM_ACT_WK_11, 
case when mod(row_num, 22 ) = 12 then FM_ACT_WK end as FPS_FM_ACT_WK_12, 
case when mod(row_num, 22 ) = 13 then FM_ACT_WK end as FPS_FM_ACT_WK_13, 
case when mod(row_num, 22 ) = 14 then FM_ACT_WK end as FPS_FM_ACT_WK_14, 
case when mod(row_num, 22 ) = 15 then FM_ACT_WK end as FPS_FM_ACT_WK_15, 
case when mod(row_num, 22 ) = 16 then FM_ACT_WK end as FPS_FM_ACT_WK_16, 
case when mod(row_num, 22 ) = 17 then FM_ACT_WK end as FPS_FM_ACT_WK_17, 
case when mod(row_num, 22 ) = 18 then FM_ACT_WK end as FPS_FM_ACT_WK_18, 
case when mod(row_num, 22 ) = 19 then FM_ACT_WK end as FPS_FM_ACT_WK_19, 
case when mod(row_num, 22 ) = 20 then FM_ACT_WK end as FPS_FM_ACT_WK_20, 
case when mod(row_num, 22 ) = 21 then FM_ACT_WK end as FPS_FM_ACT_WK_21, 
case when mod(row_num, 22 ) = 0 then FM_ACT_WK end as FPS_FM_ACT_WK_22, 
case when mod(row_num, 22 ) = 1 then FM_KWK end as FPS_FM_KWK_1, 
case when mod(row_num, 22 ) = 2 then FM_KWK end as FPS_FM_KWK_2, 
case when mod(row_num, 22 ) = 3 then FM_KWK end as FPS_FM_KWK_3, 
case when mod(row_num, 22 ) = 4 then FM_KWK end as FPS_FM_KWK_4, 
case when mod(row_num, 22 ) = 5 then FM_KWK end as FPS_FM_KWK_5, 
case when mod(row_num, 22 ) = 6 then FM_KWK end as FPS_FM_KWK_6, 
case when mod(row_num, 22 ) = 7 then FM_KWK end as FPS_FM_KWK_7, 
case when mod(row_num, 22 ) = 8 then FM_KWK end as FPS_FM_KWK_8, 
case when mod(row_num, 22 ) = 9 then FM_KWK end as FPS_FM_KWK_9, 
case when mod(row_num, 22 ) = 10 then FM_KWK end as FPS_FM_KWK_10, 
case when mod(row_num, 22 ) = 11 then FM_KWK end as FPS_FM_KWK_11, 
case when mod(row_num, 22 ) = 12 then FM_KWK end as FPS_FM_KWK_12, 
case when mod(row_num, 22 ) = 13 then FM_KWK end as FPS_FM_KWK_13, 
case when mod(row_num, 22 ) = 14 then FM_KWK end as FPS_FM_KWK_14, 
case when mod(row_num, 22 ) = 15 then FM_KWK end as FPS_FM_KWK_15, 
case when mod(row_num, 22 ) = 16 then FM_KWK end as FPS_FM_KWK_16, 
case when mod(row_num, 22 ) = 17 then FM_KWK end as FPS_FM_KWK_17, 
case when mod(row_num, 22 ) = 18 then FM_KWK end as FPS_FM_KWK_18, 
case when mod(row_num, 22 ) = 19 then FM_KWK end as FPS_FM_KWK_19, 
case when mod(row_num, 22 ) = 20 then FM_KWK end as FPS_FM_KWK_20, 
case when mod(row_num, 22 ) = 21 then FM_KWK end as FPS_FM_KWK_21, 
case when mod(row_num, 22 ) = 0 then FM_KWK end as FPS_FM_KWK_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_WM end as FPS_FM_PRE_WM_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_WM end as FPS_FM_PRE_WM_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_WM end as FPS_FM_PRE_WM_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_WM end as FPS_FM_PRE_WM_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_WM end as FPS_FM_PRE_WM_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_WM end as FPS_FM_PRE_WM_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_WM end as FPS_FM_PRE_WM_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_WM end as FPS_FM_PRE_WM_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_WM end as FPS_FM_PRE_WM_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_WM end as FPS_FM_PRE_WM_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_WM end as FPS_FM_PRE_WM_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_WM end as FPS_FM_PRE_WM_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_WM end as FPS_FM_PRE_WM_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_WM end as FPS_FM_PRE_WM_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_WM end as FPS_FM_PRE_WM_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_WM end as FPS_FM_PRE_WM_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_WM end as FPS_FM_PRE_WM_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_WM end as FPS_FM_PRE_WM_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_WM end as FPS_FM_PRE_WM_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_WM end as FPS_FM_PRE_WM_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_WM end as FPS_FM_PRE_WM_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_WM end as FPS_FM_PRE_WM_22, 
case when mod(row_num, 22 ) = 1 then FM_ACT_WM end as FPS_FM_ACT_WM_1, 
case when mod(row_num, 22 ) = 2 then FM_ACT_WM end as FPS_FM_ACT_WM_2, 
case when mod(row_num, 22 ) = 3 then FM_ACT_WM end as FPS_FM_ACT_WM_3, 
case when mod(row_num, 22 ) = 4 then FM_ACT_WM end as FPS_FM_ACT_WM_4, 
case when mod(row_num, 22 ) = 5 then FM_ACT_WM end as FPS_FM_ACT_WM_5, 
case when mod(row_num, 22 ) = 6 then FM_ACT_WM end as FPS_FM_ACT_WM_6, 
case when mod(row_num, 22 ) = 7 then FM_ACT_WM end as FPS_FM_ACT_WM_7, 
case when mod(row_num, 22 ) = 8 then FM_ACT_WM end as FPS_FM_ACT_WM_8, 
case when mod(row_num, 22 ) = 9 then FM_ACT_WM end as FPS_FM_ACT_WM_9, 
case when mod(row_num, 22 ) = 10 then FM_ACT_WM end as FPS_FM_ACT_WM_10, 
case when mod(row_num, 22 ) = 11 then FM_ACT_WM end as FPS_FM_ACT_WM_11, 
case when mod(row_num, 22 ) = 12 then FM_ACT_WM end as FPS_FM_ACT_WM_12, 
case when mod(row_num, 22 ) = 13 then FM_ACT_WM end as FPS_FM_ACT_WM_13, 
case when mod(row_num, 22 ) = 14 then FM_ACT_WM end as FPS_FM_ACT_WM_14, 
case when mod(row_num, 22 ) = 15 then FM_ACT_WM end as FPS_FM_ACT_WM_15, 
case when mod(row_num, 22 ) = 16 then FM_ACT_WM end as FPS_FM_ACT_WM_16, 
case when mod(row_num, 22 ) = 17 then FM_ACT_WM end as FPS_FM_ACT_WM_17, 
case when mod(row_num, 22 ) = 18 then FM_ACT_WM end as FPS_FM_ACT_WM_18, 
case when mod(row_num, 22 ) = 19 then FM_ACT_WM end as FPS_FM_ACT_WM_19, 
case when mod(row_num, 22 ) = 20 then FM_ACT_WM end as FPS_FM_ACT_WM_20, 
case when mod(row_num, 22 ) = 21 then FM_ACT_WM end as FPS_FM_ACT_WM_21, 
case when mod(row_num, 22 ) = 0 then FM_ACT_WM end as FPS_FM_ACT_WM_22, 
case when mod(row_num, 22 ) = 1 then FM_KWM end as FPS_FM_KWM_1, 
case when mod(row_num, 22 ) = 2 then FM_KWM end as FPS_FM_KWM_2, 
case when mod(row_num, 22 ) = 3 then FM_KWM end as FPS_FM_KWM_3, 
case when mod(row_num, 22 ) = 4 then FM_KWM end as FPS_FM_KWM_4, 
case when mod(row_num, 22 ) = 5 then FM_KWM end as FPS_FM_KWM_5, 
case when mod(row_num, 22 ) = 6 then FM_KWM end as FPS_FM_KWM_6, 
case when mod(row_num, 22 ) = 7 then FM_KWM end as FPS_FM_KWM_7, 
case when mod(row_num, 22 ) = 8 then FM_KWM end as FPS_FM_KWM_8, 
case when mod(row_num, 22 ) = 9 then FM_KWM end as FPS_FM_KWM_9, 
case when mod(row_num, 22 ) = 10 then FM_KWM end as FPS_FM_KWM_10, 
case when mod(row_num, 22 ) = 11 then FM_KWM end as FPS_FM_KWM_11, 
case when mod(row_num, 22 ) = 12 then FM_KWM end as FPS_FM_KWM_12, 
case when mod(row_num, 22 ) = 13 then FM_KWM end as FPS_FM_KWM_13, 
case when mod(row_num, 22 ) = 14 then FM_KWM end as FPS_FM_KWM_14, 
case when mod(row_num, 22 ) = 15 then FM_KWM end as FPS_FM_KWM_15, 
case when mod(row_num, 22 ) = 16 then FM_KWM end as FPS_FM_KWM_16, 
case when mod(row_num, 22 ) = 17 then FM_KWM end as FPS_FM_KWM_17, 
case when mod(row_num, 22 ) = 18 then FM_KWM end as FPS_FM_KWM_18, 
case when mod(row_num, 22 ) = 19 then FM_KWM end as FPS_FM_KWM_19, 
case when mod(row_num, 22 ) = 20 then FM_KWM end as FPS_FM_KWM_20, 
case when mod(row_num, 22 ) = 21 then FM_KWM end as FPS_FM_KWM_21, 
case when mod(row_num, 22 ) = 0 then FM_KWM end as FPS_FM_KWM_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_MAH end as FPS_FM_PRE_MAH_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_MAH end as FPS_FM_PRE_MAH_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_MAH end as FPS_FM_PRE_MAH_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_MAH end as FPS_FM_PRE_MAH_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_MAH end as FPS_FM_PRE_MAH_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_MAH end as FPS_FM_PRE_MAH_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_MAH end as FPS_FM_PRE_MAH_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_MAH end as FPS_FM_PRE_MAH_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_MAH end as FPS_FM_PRE_MAH_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_MAH end as FPS_FM_PRE_MAH_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_MAH end as FPS_FM_PRE_MAH_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_MAH end as FPS_FM_PRE_MAH_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_MAH end as FPS_FM_PRE_MAH_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_MAH end as FPS_FM_PRE_MAH_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_MAH end as FPS_FM_PRE_MAH_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_MAH end as FPS_FM_PRE_MAH_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_MAH end as FPS_FM_PRE_MAH_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_MAH end as FPS_FM_PRE_MAH_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_MAH end as FPS_FM_PRE_MAH_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_MAH end as FPS_FM_PRE_MAH_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_MAH end as FPS_FM_PRE_MAH_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_MAH end as FPS_FM_PRE_MAH_22, 
case when mod(row_num, 22 ) = 1 then FM_REC_MAH end as FPS_FM_REC_MAH_1, 
case when mod(row_num, 22 ) = 2 then FM_REC_MAH end as FPS_FM_REC_MAH_2, 
case when mod(row_num, 22 ) = 3 then FM_REC_MAH end as FPS_FM_REC_MAH_3, 
case when mod(row_num, 22 ) = 4 then FM_REC_MAH end as FPS_FM_REC_MAH_4, 
case when mod(row_num, 22 ) = 5 then FM_REC_MAH end as FPS_FM_REC_MAH_5, 
case when mod(row_num, 22 ) = 6 then FM_REC_MAH end as FPS_FM_REC_MAH_6, 
case when mod(row_num, 22 ) = 7 then FM_REC_MAH end as FPS_FM_REC_MAH_7, 
case when mod(row_num, 22 ) = 8 then FM_REC_MAH end as FPS_FM_REC_MAH_8, 
case when mod(row_num, 22 ) = 9 then FM_REC_MAH end as FPS_FM_REC_MAH_9, 
case when mod(row_num, 22 ) = 10 then FM_REC_MAH end as FPS_FM_REC_MAH_10, 
case when mod(row_num, 22 ) = 11 then FM_REC_MAH end as FPS_FM_REC_MAH_11, 
case when mod(row_num, 22 ) = 12 then FM_REC_MAH end as FPS_FM_REC_MAH_12, 
case when mod(row_num, 22 ) = 13 then FM_REC_MAH end as FPS_FM_REC_MAH_13, 
case when mod(row_num, 22 ) = 14 then FM_REC_MAH end as FPS_FM_REC_MAH_14, 
case when mod(row_num, 22 ) = 15 then FM_REC_MAH end as FPS_FM_REC_MAH_15, 
case when mod(row_num, 22 ) = 16 then FM_REC_MAH end as FPS_FM_REC_MAH_16, 
case when mod(row_num, 22 ) = 17 then FM_REC_MAH end as FPS_FM_REC_MAH_17, 
case when mod(row_num, 22 ) = 18 then FM_REC_MAH end as FPS_FM_REC_MAH_18, 
case when mod(row_num, 22 ) = 19 then FM_REC_MAH end as FPS_FM_REC_MAH_19, 
case when mod(row_num, 22 ) = 20 then FM_REC_MAH end as FPS_FM_REC_MAH_20, 
case when mod(row_num, 22 ) = 21 then FM_REC_MAH end as FPS_FM_REC_MAH_21, 
case when mod(row_num, 22 ) = 0 then FM_REC_MAH end as FPS_FM_REC_MAH_22, 
case when mod(row_num, 22 ) = 1 then FM_RKT end as FPS_FM_RKT_1, 
case when mod(row_num, 22 ) = 2 then FM_RKT end as FPS_FM_RKT_2, 
case when mod(row_num, 22 ) = 3 then FM_RKT end as FPS_FM_RKT_3, 
case when mod(row_num, 22 ) = 4 then FM_RKT end as FPS_FM_RKT_4, 
case when mod(row_num, 22 ) = 5 then FM_RKT end as FPS_FM_RKT_5, 
case when mod(row_num, 22 ) = 6 then FM_RKT end as FPS_FM_RKT_6, 
case when mod(row_num, 22 ) = 7 then FM_RKT end as FPS_FM_RKT_7, 
case when mod(row_num, 22 ) = 8 then FM_RKT end as FPS_FM_RKT_8, 
case when mod(row_num, 22 ) = 9 then FM_RKT end as FPS_FM_RKT_9, 
case when mod(row_num, 22 ) = 10 then FM_RKT end as FPS_FM_RKT_10, 
case when mod(row_num, 22 ) = 11 then FM_RKT end as FPS_FM_RKT_11, 
case when mod(row_num, 22 ) = 12 then FM_RKT end as FPS_FM_RKT_12, 
case when mod(row_num, 22 ) = 13 then FM_RKT end as FPS_FM_RKT_13, 
case when mod(row_num, 22 ) = 14 then FM_RKT end as FPS_FM_RKT_14, 
case when mod(row_num, 22 ) = 15 then FM_RKT end as FPS_FM_RKT_15, 
case when mod(row_num, 22 ) = 16 then FM_RKT end as FPS_FM_RKT_16, 
case when mod(row_num, 22 ) = 17 then FM_RKT end as FPS_FM_RKT_17, 
case when mod(row_num, 22 ) = 18 then FM_RKT end as FPS_FM_RKT_18, 
case when mod(row_num, 22 ) = 19 then FM_RKT end as FPS_FM_RKT_19, 
case when mod(row_num, 22 ) = 20 then FM_RKT end as FPS_FM_RKT_20, 
case when mod(row_num, 22 ) = 21 then FM_RKT end as FPS_FM_RKT_21, 
case when mod(row_num, 22 ) = 0 then FM_RKT end as FPS_FM_RKT_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_THICK end as FPS_FM_PRE_THICK_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_THICK end as FPS_FM_PRE_THICK_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_THICK end as FPS_FM_PRE_THICK_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_THICK end as FPS_FM_PRE_THICK_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_THICK end as FPS_FM_PRE_THICK_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_THICK end as FPS_FM_PRE_THICK_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_THICK end as FPS_FM_PRE_THICK_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_THICK end as FPS_FM_PRE_THICK_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_THICK end as FPS_FM_PRE_THICK_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_THICK end as FPS_FM_PRE_THICK_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_THICK end as FPS_FM_PRE_THICK_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_THICK end as FPS_FM_PRE_THICK_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_THICK end as FPS_FM_PRE_THICK_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_THICK end as FPS_FM_PRE_THICK_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_THICK end as FPS_FM_PRE_THICK_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_THICK end as FPS_FM_PRE_THICK_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_THICK end as FPS_FM_PRE_THICK_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_THICK end as FPS_FM_PRE_THICK_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_THICK end as FPS_FM_PRE_THICK_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_THICK end as FPS_FM_PRE_THICK_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_THICK end as FPS_FM_PRE_THICK_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_THICK end as FPS_FM_PRE_THICK_22, 
case when mod(row_num, 22 ) = 1 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_1, 
case when mod(row_num, 22 ) = 2 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_2, 
case when mod(row_num, 22 ) = 3 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_3, 
case when mod(row_num, 22 ) = 4 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_4, 
case when mod(row_num, 22 ) = 5 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_5, 
case when mod(row_num, 22 ) = 6 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_6, 
case when mod(row_num, 22 ) = 7 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_7, 
case when mod(row_num, 22 ) = 8 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_8, 
case when mod(row_num, 22 ) = 9 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_9, 
case when mod(row_num, 22 ) = 10 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_10, 
case when mod(row_num, 22 ) = 11 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_11, 
case when mod(row_num, 22 ) = 12 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_12, 
case when mod(row_num, 22 ) = 13 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_13, 
case when mod(row_num, 22 ) = 14 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_14, 
case when mod(row_num, 22 ) = 15 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_15, 
case when mod(row_num, 22 ) = 16 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_16, 
case when mod(row_num, 22 ) = 17 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_17, 
case when mod(row_num, 22 ) = 18 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_18, 
case when mod(row_num, 22 ) = 19 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_19, 
case when mod(row_num, 22 ) = 20 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_20, 
case when mod(row_num, 22 ) = 21 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_21, 
case when mod(row_num, 22 ) = 0 then FM_Delivery_THICK end as FPS_FM_Delivery_THICK_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_WIDTH end as FPS_FM_PRE_WIDTH_22, 
case when mod(row_num, 22 ) = 1 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_1, 
case when mod(row_num, 22 ) = 2 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_2, 
case when mod(row_num, 22 ) = 3 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_3, 
case when mod(row_num, 22 ) = 4 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_4, 
case when mod(row_num, 22 ) = 5 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_5, 
case when mod(row_num, 22 ) = 6 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_6, 
case when mod(row_num, 22 ) = 7 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_7, 
case when mod(row_num, 22 ) = 8 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_8, 
case when mod(row_num, 22 ) = 9 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_9, 
case when mod(row_num, 22 ) = 10 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_10, 
case when mod(row_num, 22 ) = 11 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_11, 
case when mod(row_num, 22 ) = 12 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_12, 
case when mod(row_num, 22 ) = 13 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_13, 
case when mod(row_num, 22 ) = 14 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_14, 
case when mod(row_num, 22 ) = 15 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_15, 
case when mod(row_num, 22 ) = 16 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_16, 
case when mod(row_num, 22 ) = 17 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_17, 
case when mod(row_num, 22 ) = 18 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_18, 
case when mod(row_num, 22 ) = 19 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_19, 
case when mod(row_num, 22 ) = 20 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_20, 
case when mod(row_num, 22 ) = 21 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_21, 
case when mod(row_num, 22 ) = 0 then FM_REC_WIDTH end as FPS_FM_REC_WIDTH_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_LENGTH end as FPS_FM_PRE_LENGTH_22, 
case when mod(row_num, 22 ) = 1 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_1, 
case when mod(row_num, 22 ) = 2 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_2, 
case when mod(row_num, 22 ) = 3 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_3, 
case when mod(row_num, 22 ) = 4 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_4, 
case when mod(row_num, 22 ) = 5 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_5, 
case when mod(row_num, 22 ) = 6 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_6, 
case when mod(row_num, 22 ) = 7 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_7, 
case when mod(row_num, 22 ) = 8 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_8, 
case when mod(row_num, 22 ) = 9 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_9, 
case when mod(row_num, 22 ) = 10 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_10, 
case when mod(row_num, 22 ) = 11 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_11, 
case when mod(row_num, 22 ) = 12 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_12, 
case when mod(row_num, 22 ) = 13 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_13, 
case when mod(row_num, 22 ) = 14 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_14, 
case when mod(row_num, 22 ) = 15 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_15, 
case when mod(row_num, 22 ) = 16 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_16, 
case when mod(row_num, 22 ) = 17 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_17, 
case when mod(row_num, 22 ) = 18 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_18, 
case when mod(row_num, 22 ) = 19 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_19, 
case when mod(row_num, 22 ) = 20 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_20, 
case when mod(row_num, 22 ) = 21 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_21, 
case when mod(row_num, 22 ) = 0 then FM_REC_LENGTH end as FPS_FM_REC_LENGTH_22, 
case when mod(row_num, 22 ) = 1 then FM_IND_SPEED end as FPS_FM_IND_SPEED_1, 
case when mod(row_num, 22 ) = 2 then FM_IND_SPEED end as FPS_FM_IND_SPEED_2, 
case when mod(row_num, 22 ) = 3 then FM_IND_SPEED end as FPS_FM_IND_SPEED_3, 
case when mod(row_num, 22 ) = 4 then FM_IND_SPEED end as FPS_FM_IND_SPEED_4, 
case when mod(row_num, 22 ) = 5 then FM_IND_SPEED end as FPS_FM_IND_SPEED_5, 
case when mod(row_num, 22 ) = 6 then FM_IND_SPEED end as FPS_FM_IND_SPEED_6, 
case when mod(row_num, 22 ) = 7 then FM_IND_SPEED end as FPS_FM_IND_SPEED_7, 
case when mod(row_num, 22 ) = 8 then FM_IND_SPEED end as FPS_FM_IND_SPEED_8, 
case when mod(row_num, 22 ) = 9 then FM_IND_SPEED end as FPS_FM_IND_SPEED_9, 
case when mod(row_num, 22 ) = 10 then FM_IND_SPEED end as FPS_FM_IND_SPEED_10, 
case when mod(row_num, 22 ) = 11 then FM_IND_SPEED end as FPS_FM_IND_SPEED_11, 
case when mod(row_num, 22 ) = 12 then FM_IND_SPEED end as FPS_FM_IND_SPEED_12, 
case when mod(row_num, 22 ) = 13 then FM_IND_SPEED end as FPS_FM_IND_SPEED_13, 
case when mod(row_num, 22 ) = 14 then FM_IND_SPEED end as FPS_FM_IND_SPEED_14, 
case when mod(row_num, 22 ) = 15 then FM_IND_SPEED end as FPS_FM_IND_SPEED_15, 
case when mod(row_num, 22 ) = 16 then FM_IND_SPEED end as FPS_FM_IND_SPEED_16, 
case when mod(row_num, 22 ) = 17 then FM_IND_SPEED end as FPS_FM_IND_SPEED_17, 
case when mod(row_num, 22 ) = 18 then FM_IND_SPEED end as FPS_FM_IND_SPEED_18, 
case when mod(row_num, 22 ) = 19 then FM_IND_SPEED end as FPS_FM_IND_SPEED_19, 
case when mod(row_num, 22 ) = 20 then FM_IND_SPEED end as FPS_FM_IND_SPEED_20, 
case when mod(row_num, 22 ) = 21 then FM_IND_SPEED end as FPS_FM_IND_SPEED_21, 
case when mod(row_num, 22 ) = 0 then FM_IND_SPEED end as FPS_FM_IND_SPEED_22, 
case when mod(row_num, 22 ) = 1 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_1, 
case when mod(row_num, 22 ) = 2 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_2, 
case when mod(row_num, 22 ) = 3 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_3, 
case when mod(row_num, 22 ) = 4 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_4, 
case when mod(row_num, 22 ) = 5 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_5, 
case when mod(row_num, 22 ) = 6 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_6, 
case when mod(row_num, 22 ) = 7 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_7, 
case when mod(row_num, 22 ) = 8 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_8, 
case when mod(row_num, 22 ) = 9 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_9, 
case when mod(row_num, 22 ) = 10 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_10, 
case when mod(row_num, 22 ) = 11 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_11, 
case when mod(row_num, 22 ) = 12 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_12, 
case when mod(row_num, 22 ) = 13 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_13, 
case when mod(row_num, 22 ) = 14 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_14, 
case when mod(row_num, 22 ) = 15 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_15, 
case when mod(row_num, 22 ) = 16 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_16, 
case when mod(row_num, 22 ) = 17 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_17, 
case when mod(row_num, 22 ) = 18 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_18, 
case when mod(row_num, 22 ) = 19 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_19, 
case when mod(row_num, 22 ) = 20 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_20, 
case when mod(row_num, 22 ) = 21 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_21, 
case when mod(row_num, 22 ) = 0 then FM_ACT_SPEED end as FPS_FM_ACT_SPEED_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_TEMP end as FPS_FM_PRE_TEMP_22, 
case when mod(row_num, 22 ) = 1 then FM_REC_TEMP end as FPS_FM_REC_TEMP_1, 
case when mod(row_num, 22 ) = 2 then FM_REC_TEMP end as FPS_FM_REC_TEMP_2, 
case when mod(row_num, 22 ) = 3 then FM_REC_TEMP end as FPS_FM_REC_TEMP_3, 
case when mod(row_num, 22 ) = 4 then FM_REC_TEMP end as FPS_FM_REC_TEMP_4, 
case when mod(row_num, 22 ) = 5 then FM_REC_TEMP end as FPS_FM_REC_TEMP_5, 
case when mod(row_num, 22 ) = 6 then FM_REC_TEMP end as FPS_FM_REC_TEMP_6, 
case when mod(row_num, 22 ) = 7 then FM_REC_TEMP end as FPS_FM_REC_TEMP_7, 
case when mod(row_num, 22 ) = 8 then FM_REC_TEMP end as FPS_FM_REC_TEMP_8, 
case when mod(row_num, 22 ) = 9 then FM_REC_TEMP end as FPS_FM_REC_TEMP_9, 
case when mod(row_num, 22 ) = 10 then FM_REC_TEMP end as FPS_FM_REC_TEMP_10, 
case when mod(row_num, 22 ) = 11 then FM_REC_TEMP end as FPS_FM_REC_TEMP_11, 
case when mod(row_num, 22 ) = 12 then FM_REC_TEMP end as FPS_FM_REC_TEMP_12, 
case when mod(row_num, 22 ) = 13 then FM_REC_TEMP end as FPS_FM_REC_TEMP_13, 
case when mod(row_num, 22 ) = 14 then FM_REC_TEMP end as FPS_FM_REC_TEMP_14, 
case when mod(row_num, 22 ) = 15 then FM_REC_TEMP end as FPS_FM_REC_TEMP_15, 
case when mod(row_num, 22 ) = 16 then FM_REC_TEMP end as FPS_FM_REC_TEMP_16, 
case when mod(row_num, 22 ) = 17 then FM_REC_TEMP end as FPS_FM_REC_TEMP_17, 
case when mod(row_num, 22 ) = 18 then FM_REC_TEMP end as FPS_FM_REC_TEMP_18, 
case when mod(row_num, 22 ) = 19 then FM_REC_TEMP end as FPS_FM_REC_TEMP_19, 
case when mod(row_num, 22 ) = 20 then FM_REC_TEMP end as FPS_FM_REC_TEMP_20, 
case when mod(row_num, 22 ) = 21 then FM_REC_TEMP end as FPS_FM_REC_TEMP_21, 
case when mod(row_num, 22 ) = 0 then FM_REC_TEMP end as FPS_FM_REC_TEMP_22, 
case when mod(row_num, 22 ) = 1 then DIFF_TEMP end as FPS_DIFF_TEMP_1, 
case when mod(row_num, 22 ) = 2 then DIFF_TEMP end as FPS_DIFF_TEMP_2, 
case when mod(row_num, 22 ) = 3 then DIFF_TEMP end as FPS_DIFF_TEMP_3, 
case when mod(row_num, 22 ) = 4 then DIFF_TEMP end as FPS_DIFF_TEMP_4, 
case when mod(row_num, 22 ) = 5 then DIFF_TEMP end as FPS_DIFF_TEMP_5, 
case when mod(row_num, 22 ) = 6 then DIFF_TEMP end as FPS_DIFF_TEMP_6, 
case when mod(row_num, 22 ) = 7 then DIFF_TEMP end as FPS_DIFF_TEMP_7, 
case when mod(row_num, 22 ) = 8 then DIFF_TEMP end as FPS_DIFF_TEMP_8, 
case when mod(row_num, 22 ) = 9 then DIFF_TEMP end as FPS_DIFF_TEMP_9, 
case when mod(row_num, 22 ) = 10 then DIFF_TEMP end as FPS_DIFF_TEMP_10, 
case when mod(row_num, 22 ) = 11 then DIFF_TEMP end as FPS_DIFF_TEMP_11, 
case when mod(row_num, 22 ) = 12 then DIFF_TEMP end as FPS_DIFF_TEMP_12, 
case when mod(row_num, 22 ) = 13 then DIFF_TEMP end as FPS_DIFF_TEMP_13, 
case when mod(row_num, 22 ) = 14 then DIFF_TEMP end as FPS_DIFF_TEMP_14, 
case when mod(row_num, 22 ) = 15 then DIFF_TEMP end as FPS_DIFF_TEMP_15, 
case when mod(row_num, 22 ) = 16 then DIFF_TEMP end as FPS_DIFF_TEMP_16, 
case when mod(row_num, 22 ) = 17 then DIFF_TEMP end as FPS_DIFF_TEMP_17, 
case when mod(row_num, 22 ) = 18 then DIFF_TEMP end as FPS_DIFF_TEMP_18, 
case when mod(row_num, 22 ) = 19 then DIFF_TEMP end as FPS_DIFF_TEMP_19, 
case when mod(row_num, 22 ) = 20 then DIFF_TEMP end as FPS_DIFF_TEMP_20, 
case when mod(row_num, 22 ) = 21 then DIFF_TEMP end as FPS_DIFF_TEMP_21, 
case when mod(row_num, 22 ) = 0 then DIFF_TEMP end as FPS_DIFF_TEMP_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_REDUCTION end as FPS_FM_PRE_REDUCTION_22, 
case when mod(row_num, 22 ) = 1 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_1, 
case when mod(row_num, 22 ) = 2 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_2, 
case when mod(row_num, 22 ) = 3 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_3, 
case when mod(row_num, 22 ) = 4 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_4, 
case when mod(row_num, 22 ) = 5 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_5, 
case when mod(row_num, 22 ) = 6 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_6, 
case when mod(row_num, 22 ) = 7 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_7, 
case when mod(row_num, 22 ) = 8 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_8, 
case when mod(row_num, 22 ) = 9 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_9, 
case when mod(row_num, 22 ) = 10 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_10, 
case when mod(row_num, 22 ) = 11 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_11, 
case when mod(row_num, 22 ) = 12 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_12, 
case when mod(row_num, 22 ) = 13 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_13, 
case when mod(row_num, 22 ) = 14 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_14, 
case when mod(row_num, 22 ) = 15 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_15, 
case when mod(row_num, 22 ) = 16 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_16, 
case when mod(row_num, 22 ) = 17 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_17, 
case when mod(row_num, 22 ) = 18 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_18, 
case when mod(row_num, 22 ) = 19 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_19, 
case when mod(row_num, 22 ) = 20 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_20, 
case when mod(row_num, 22 ) = 21 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_21, 
case when mod(row_num, 22 ) = 0 then FM_REC_REDUCTION end as FPS_FM_REC_REDUCTION_22, 
case when mod(row_num, 22 ) = 1 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_1, 
case when mod(row_num, 22 ) = 2 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_2, 
case when mod(row_num, 22 ) = 3 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_3, 
case when mod(row_num, 22 ) = 4 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_4, 
case when mod(row_num, 22 ) = 5 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_5, 
case when mod(row_num, 22 ) = 6 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_6, 
case when mod(row_num, 22 ) = 7 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_7, 
case when mod(row_num, 22 ) = 8 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_8, 
case when mod(row_num, 22 ) = 9 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_9, 
case when mod(row_num, 22 ) = 10 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_10, 
case when mod(row_num, 22 ) = 11 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_11, 
case when mod(row_num, 22 ) = 12 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_12, 
case when mod(row_num, 22 ) = 13 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_13, 
case when mod(row_num, 22 ) = 14 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_14, 
case when mod(row_num, 22 ) = 15 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_15, 
case when mod(row_num, 22 ) = 16 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_16, 
case when mod(row_num, 22 ) = 17 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_17, 
case when mod(row_num, 22 ) = 18 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_18, 
case when mod(row_num, 22 ) = 19 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_19, 
case when mod(row_num, 22 ) = 20 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_20, 
case when mod(row_num, 22 ) = 21 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_21, 
case when mod(row_num, 22 ) = 0 then FM_PRE_REL_REDUCTION end as FPS_FM_PRE_REL_REDUCTION_22, 
case when mod(row_num, 22 ) = 1 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_1, 
case when mod(row_num, 22 ) = 2 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_2, 
case when mod(row_num, 22 ) = 3 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_3, 
case when mod(row_num, 22 ) = 4 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_4, 
case when mod(row_num, 22 ) = 5 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_5, 
case when mod(row_num, 22 ) = 6 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_6, 
case when mod(row_num, 22 ) = 7 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_7, 
case when mod(row_num, 22 ) = 8 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_8, 
case when mod(row_num, 22 ) = 9 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_9, 
case when mod(row_num, 22 ) = 10 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_10, 
case when mod(row_num, 22 ) = 11 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_11, 
case when mod(row_num, 22 ) = 12 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_12, 
case when mod(row_num, 22 ) = 13 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_13, 
case when mod(row_num, 22 ) = 14 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_14, 
case when mod(row_num, 22 ) = 15 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_15, 
case when mod(row_num, 22 ) = 16 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_16, 
case when mod(row_num, 22 ) = 17 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_17, 
case when mod(row_num, 22 ) = 18 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_18, 
case when mod(row_num, 22 ) = 19 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_19, 
case when mod(row_num, 22 ) = 20 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_20, 
case when mod(row_num, 22 ) = 21 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_21, 
case when mod(row_num, 22 ) = 0 then FM_REC_REL_REDUCTION end as FPS_FM_REC_REL_REDUCTION_22, 
case when row_num / 22 > 1 then FLOOR ((row_num -1) / 22 ) end as flag_for_windows 
from ( 
select t.*, 
( case SLAB_NO when @curtype then @curRow := @curRow + 1 
else @curRow := 1 and @curType := SLAB_NO end 
) + 1 as row_num 
from fm_pass t, 
(select @curRow := 0, @curType := '') r 
order BY SLAB_NO asc 
) t2 
) t1 
group by flag_for_windows, SLAB_NO 
 ) fm_pass

WHERE 
product.SLAB_NO = quality_result.SLAB_NO &&
furnace.SLAB_NO = quality_result.SLAB_NO &&
furnace.SLAB_NO = product.SLAB_NO &&
temperature.SLAB_NO = quality_result.SLAB_NO &&
temperature.SLAB_NO = product.SLAB_NO &&
temperature.SLAB_NO = furnace.SLAB_NO &&
time.SLAB_NO = quality_result.SLAB_NO &&
time.SLAB_NO = product.SLAB_NO &&
time.SLAB_NO = furnace.SLAB_NO &&
time.SLAB_NO = temperature.SLAB_NO &&
rm_finish_width.SLAB_NO = quality_result.SLAB_NO &&
rm_finish_width.SLAB_NO = product.SLAB_NO &&
rm_finish_width.SLAB_NO = furnace.SLAB_NO &&
rm_finish_width.SLAB_NO = temperature.SLAB_NO &&
rm_finish_width.SLAB_NO = time.SLAB_NO &&
rm_slab.SLAB_NO = quality_result.SLAB_NO &&
rm_slab.SLAB_NO = product.SLAB_NO &&
rm_slab.SLAB_NO = furnace.SLAB_NO &&
rm_slab.SLAB_NO = temperature.SLAB_NO &&
rm_slab.SLAB_NO = time.SLAB_NO &&
rm_slab.SLAB_NO = rm_finish_width.SLAB_NO &&
temperature.SLAB_NO = time.SLAB_NO &&
temperature.SLAB_NO = rm_finish_width.SLAB_NO &&
temperature.SLAB_NO = rm_slab.SLAB_NO &&
time.SLAB_NO = rm_finish_width.SLAB_NO &&
time.SLAB_NO = rm_slab.SLAB_NO &&
fm_slab.SLAB_NO = quality_result.SLAB_NO &&
fm_slab.SLAB_NO = product.SLAB_NO &&
fm_slab.SLAB_NO = furnace.SLAB_NO &&
fm_slab.SLAB_NO = temperature.SLAB_NO &&
fm_slab.SLAB_NO = time.SLAB_NO &&
fm_slab.SLAB_NO = rm_finish_width.SLAB_NO &&
fm_slab.SLAB_NO = rm_slab.SLAB_NO &&
temperature.SLAB_NO = fm_slab.SLAB_NO &&
time.SLAB_NO = fm_slab.SLAB_NO &&
rm_pass.SLAB_NO = quality_result.SLAB_NO &&
rm_pass.SLAB_NO = product.SLAB_NO &&
rm_pass.SLAB_NO = furnace.SLAB_NO &&
rm_pass.SLAB_NO = temperature.SLAB_NO &&
rm_pass.SLAB_NO = time.SLAB_NO &&
rm_pass.SLAB_NO = rm_finish_width.SLAB_NO &&
rm_pass.SLAB_NO = rm_slab.SLAB_NO &&
rm_pass.SLAB_NO = fm_slab.SLAB_NO &&
fm_pass.SLAB_NO = quality_result.SLAB_NO &&
fm_pass.SLAB_NO = product.SLAB_NO &&
fm_pass.SLAB_NO = furnace.SLAB_NO &&
fm_pass.SLAB_NO = temperature.SLAB_NO &&
fm_pass.SLAB_NO = time.SLAB_NO &&
fm_pass.SLAB_NO = rm_finish_width.SLAB_NO &&
fm_pass.SLAB_NO = rm_slab.SLAB_NO &&
fm_pass.SLAB_NO = fm_slab.SLAB_NO &&
fm_pass.SLAB_NO = rm_pass.SLAB_NO